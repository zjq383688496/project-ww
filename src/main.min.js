var __reflect = this && this.__reflect || function(t, e, i) {
		t.__class__ = e,
		i ? i.push(e) : i = [e],
		t.__types__ = t.__types__ ? i.concat(t.__types__) : i
	},
	__extends = this && this.__extends || function(t, e) {
		function i() {
			this.constructor = t
		}
		for (var n in e)
			e.hasOwnProperty(n) && (t[n] = e[n]);
		t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
		new i)
	},
	ResourceProxyBase = function(t) {
		function e(e) {
			void 0 === e && (e = "");
			var i = t.call(this, e) || this;
			return i._dataMap = new Array,
			i._proxyName = "",
			i._proxyName = e,
			i
		}
		return __extends(e, t),
		e.prototype.getData = function() {
			var t = RES.getRes(this._proxyName);
			return t
		}
		,
		e
	}(puremvc.Proxy);
__reflect(ResourceProxyBase.prototype, "ResourceProxyBase", ["puremvc.IProxy", "puremvc.INotifier"]);
var BaseMediator = function(t) {
	function e(e, i) {
		void 0 === e && (e = ""),
		void 0 === i && (i = null);
		var n = t.call(this, e, i) || this;
		return n.isInitialized = !1,
		n.isPopUp = !1,
		n.ui = null,
		n.w = 0,
		n.h = 0,
		n
	}
	return __extends(e, t),
	e.prototype.showUI = function(t, e, i, n, a, s, o) {
		void 0 === e && (e = !1),
		void 0 === i && (i = 0),
		void 0 === n && (n = 0),
		void 0 === a && (a = 0),
		void 0 === s && (s = !1),
		void 0 === o && (o = .6),
		this.ui = t,
		this.beforShow(),
		this.initUI(),
		this.initData(),
		PopUpManager.addPopUp(t, e, i, n, a, s, o)
	}
	,
	e.prototype.beforShow = function() {}
	,
	e.prototype.initUI = function() {}
	,
	e.prototype.initData = function() {}
	,
	e.prototype.closePanel = function(t, e) {
		void 0 === t && (t = 0),
		void 0 === e && (e = 500),
		PopUpManager.removePopUp(this.ui, t, e),
		this.destroy()
	}
	,
	e.prototype.destroy = function() {}
	,
	e.prototype.getIsPopUp = function() {
		return this.isPopUp
	}
	,
	e.prototype.getIsInit = function() {
		return this.isInitialized
	}
	,
	e.prototype.getWidth = function() {
		return this.ui.width
	}
	,
	e.prototype.getHeight = function() {
		return this.ui.height
	}
	,
	e
}(puremvc.Mediator);
__reflect(BaseMediator.prototype, "BaseMediator", ["puremvc.IMediator", "puremvc.INotifier"]);
var game;
!function(t) {
	var e = function(e) {
		function i(n) {
			void 0 === n && (n = null);
			var a = e.call(this, i.NAME, n) || this;
			return a.tag = "T",
			a.tMoney = "",
			a.safeBoxPanel = t.SafeBoxPanel.getInstance(),
			a
		}
		return __extends(i, e),
		i.prototype.listNotificationInterests = function() {
			return [PanelNotify.OPEN_SAFE_BOX, PanelNotify.CLOSE_SAFE_BOX]
		}
		,
		i.prototype.handleNotification = function(t) {
			t.getBody();
			switch (t.getName()) {
			case PanelNotify.OPEN_SAFE_BOX:
				this.showUI(this.safeBoxPanel, !0, 0, 0, 5);
				break;
			case PanelNotify.CLOSE_SAFE_BOX:
				this.closePanel(6)
			}
		}
		,
		i.prototype.initUI = function() {
			this.safeBoxPanel.btn_save.addEventListener(egret.TouchEvent.TOUCH_TAP, this.save, this),
			this.safeBoxPanel.btn_take.addEventListener(egret.TouchEvent.TOUCH_TAP, this.take, this),
			this.safeBoxPanel.btn_ok.addEventListener(egret.TouchEvent.TOUCH_TAP, this.btnOk, this),
			this.safeBoxPanel.img_close.addEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this)
		}
		,
		i.prototype.save = function() {
			this.safeBoxPanel.img_take.visible = !1,
			this.safeBoxPanel.img_save.visible = !0,
			this.safeBoxPanel.img_icon.source = RES.getRes("icon_safe_box_save_png"),
			this.tag = "S"
		}
		,
		i.prototype.take = function() {
			this.safeBoxPanel.img_take.visible = !0,
			this.safeBoxPanel.img_save.visible = !1,
			this.safeBoxPanel.img_icon.source = RES.getRes("icon_safe_box_take_png"),
			this.tag = "T"
		}
		,
		i.prototype.close = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			this.safeBoxPanel.btn_save.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.save, this),
			this.safeBoxPanel.btn_take.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.take, this),
			this.safeBoxPanel.btn_ok.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.btnOk, this),
			this.safeBoxPanel.img_close.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.closePanel(6)
		}
		,
		i.prototype.btnOk = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
			"S" == this.tag ? this.saveMoney() : "T" == this.tag && this.takeMoney()
		}
		,
		i.prototype.getEwallet = function() {
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "ewallet_type",
				value: "G"
			})
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + API.balance, t, this.onGetEwalletComplete, this.onGetEwalletIOError, this.onGetEwalletProgress, this)
		}
		,
		i.prototype.onGetEwalletComplete = function(e) {
			debugger
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_EWALLET_FOUND) {
				var a = n.results
				  , s = a.safe_box_amount;
				0 == s ? this.safeBoxPanel.lb_amount.text = "0万" : this.safeBoxPanel.lb_amount.text = Utils.moneyFormat(s, 2).toString();
				var o = a.balance
				  , r = {
					gold_amount: o
				};
				t.AppFacade.getInstance().sendNotification(MainNotify.UPDATE_HEADER_EWALLET, r),
				t.HeaderBarV2.getInstance(!0).loadEwallet()
			} else {
				if (403 == n.type)
					return void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				n.message
			}
		}
		,
		i.prototype.onGetEwalletIOError = function(t) {}
		,
		i.prototype.onGetEwalletProgress = function(t) {}
		,
		i.prototype.takeMoney = function() {
			var t = parseFloat(this.safeBoxPanel.amount_input.text);
			if (0 >= t || "" == t.toString())
				return void Toast.launch("请输入金额", -100);
			t = 1e4 * t,
			this.tMoney = t,
			this.safeBoxPanel.amount_input.text = "";
			var e = new eui.ArrayCollection;
			e.addItem({
				key: "amount",
				value: t
			}),
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "ewallet/takeMoney", e, this.ontakeMoneyComplete, this.ontakeMoneyIOError, this.ontakeMoneyProgress, this)
		}
		,
		i.prototype.ontakeMoneyComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_TAKE_MONEY_SUCCESS)
				Toast.launch("取出成功", -100),
				t.Fly.flyGold(350, 720, 100, 50, 1e3, 15, this.tMoney, function() {}),
				this.getEwallet();
			else {
				if (403 == n.type)
					return void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				var a = n.message;
				Toast.launch(a, -100)
			}
		}
		,
		i.prototype.ontakeMoneyIOError = function(t) {}
		,
		i.prototype.ontakeMoneyProgress = function(t) {}
		,
		i.prototype.saveMoney = function() {
			var t = parseFloat(this.safeBoxPanel.amount_input.text);
			if (0 >= t && 1e-4 > t || "" == t.toString())
				return void Toast.launch("请输入正确金额", -100);
			t = 1e4 * t,
			this.safeBoxPanel.amount_input.text = "";
			var e = new eui.ArrayCollection;
			e.addItem({
				key: "amount",
				value: t
			}),
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "ewallet/saveMoney", e, this.onSaveMoneyComplete, this.onSaveMoneyIOError, this.onSaveMoneyProgress, this)
		}
		,
		i.prototype.onSaveMoneyComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_SAVE_MONEY_SUCCESS)
				Toast.launch("存入成功", -100),
				this.getEwallet();
			else {
				if (403 == n.type)
					return void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				var a = n.message;
				Toast.launch(a, -100)
			}
		}
		,
		i.prototype.onSaveMoneyIOError = function(t) {}
		,
		i.prototype.onSaveMoneyProgress = function(t) {}
		,
		i.prototype.initData = function() {
			this.getEwallet()
		}
		,
		i
	}(BaseMediator);
	e.NAME = "SafeBoxMediator",
	t.SafeBoxMediator = e,
	__reflect(e.prototype, "game.SafeBoxMediator")
}(game || (game = {}));
var MessageCode = function() {
	function t() {}
	return t
}();
MessageCode.CODE_LOGIN_SUCCESS = 1,
MessageCode.CODE_WX_REGISTER = "1041",
MessageCode.CODE_GET_OTP_SUCCESS = "1011",
MessageCode.CODE_REGISTER_SUCCESS = 1,
MessageCode.CODE_USER_FOUND = "1004",
MessageCode.CODE_EWALLET_FOUND = 1,		// "2003",
MessageCode.CODE_GET_SIGN_SUCCESS = "1044",
MessageCode.CODE_SIGN_SUCCESS = "1042",
MessageCode.CODE_PRODUCT_FOUND = "3005",
MessageCode.CODE_BUY_PRODUCT_SUCCESS = "2009",
MessageCode.CODE_CAPITAL_FOUND = "5008",
MessageCode.CODE_GAME_ROOM_FOUND = "6011",
MessageCode.CODE_ROUND_FOUND = "7009",
MessageCode.CODE_CREATE_TRADE_SUCCESS = "7001",
MessageCode.CODE_CAPITAL_ODDS_FOUND = "7028",
MessageCode.CODE_LESS_THAN_BANKER_MIN_AMOUNT = "7023",
MessageCode.CODE_APPLY_BANKER_SUCCESS = "7024",
MessageCode.CODE_BANKER_FOUND = "7026",
MessageCode.CODE_OFF_BANKER_SUCCESS = "7031",
MessageCode.CODE_OFF_BANKER_QUEUE_SUCCESS = "7037",
MessageCode.CODE_SAVE_MONEY_SUCCESS = "2013",
MessageCode.CODE_TAKE_MONEY_SUCCESS = "2015",
MessageCode.CODE_GET_MESSAGE_SUCCESS = "1049",
MessageCode.CODE_SEND_MESSAGE_SUCCESS = "1046",
MessageCode.CODE_GET_REWARD_SUCCESS = 1,	// "1051",
MessageCode.CODE_GET_REWARD_FAILED = "1052",
MessageCode.CODE_AGENT_APPLY_WITHDRAW_SUCCESS = "2017",
MessageCode.CODE_AGENT_APPLY_WITHDRAW_FAILED = "2018",
MessageCode.CODE_GET_ORDER_SUCCESS = "4003",
MessageCode.CODE_VERIFY_OTP_SUCCESS = 1,
MessageCode.CODE_RESET_PASSWORD_SUCCESS = "1056",
MessageCode.CODE_ADV_FOUND = 1,		// "8031",
MessageCode.CODE_TRADE_FOUND = "7003",
MessageCode.CODE_GET_TASK_SUCCESS = "1058",
MessageCode.CODE_BALANCE_NOT_ENOUGH = "2011",
__reflect(MessageCode.prototype, "MessageCode");
var game;
!function(t) {
	var e = function(e) {
		function i() {
			return e.call(this) || this
		}
		return __extends(i, e),
		i.getInstance = function() {
			return null == this.instance && (this.instance = new i),
			this.instance
		}
		,
		i.prototype.initializeController = function() {
			e.prototype.initializeController.call(this),
			this.registerCommand(i.STARTUP, t.StartupCommand)
		}
		,
		i.prototype.startUp = function(t) {
			this.sendNotification(i.STARTUP, t),
			this.removeCommand(i.STARTUP)
		}
		,
		i
	}(puremvc.Facade);
	e.STARTUP = "startup",
	t.AppFacade = e,
	__reflect(e.prototype, "game.AppFacade", ["puremvc.IFacade", "puremvc.INotifier"])
}(game || (game = {}));
var MainNotify = function() {
	function t() {}
	return t
}();
MainNotify.OPEN_HOME = "MainNotify_OPEN_HOME",
MainNotify.UPDATE_HEADER_EWALLET = "MainNotify_UPDATE_HEADER_EWALLET",
MainNotify.OPEN_CLASSICAL = "MainNotify_OPEN_CLASSICAL",
MainNotify.CLOSE_CLASSICAL = "MainNotify_CLOSE_CLASSICAL",
MainNotify.OPEN_CLASSICAL_SIM = "MainNotify_OPEN_CLASSICAL_SIM",
MainNotify.CLOSE_CLASSICAL_SIM = "MainNotify_CLOSE_CLASSICAL_SIM",
MainNotify.OPEN_GRAB = "MainNotify_OPEN_GRAB",
MainNotify.CLOSE_GRAB = "MainNotify_CLOSE_GRAB",
MainNotify.OPEN_CAPITAL_LIST = "MainNotify_OPEN_CAPITAL_LIST",
MainNotify.OPEN_KLINE_MASTER_BAR = "MainNotify_OPEN_KLINE_MASTER_BAR",
MainNotify.POINT_DIFF = "MainNotify_POINT_DIFF",
MainNotify.OPEN_INVITE = "MainNotify_OPEN_INVITE",
MainNotify.OPEN_USER_GUIDE = "MainNotify_OPEN_USER_GUIDE",
MainNotify.OPEN_GRAB_GUIDE = "MainNotify_OPEN_GRAB_GUIDE",
MainNotify.OPEN_GRAB_SIM = "MainNotify_OPEN_GRAB_SIM",
MainNotify.OPEN_EMOJI = "MainNotify_OPEN_EMOJI",
__reflect(MainNotify.prototype, "MainNotify");
var PanelNotify = function() {
	function t() {}
	return t
}();
PanelNotify.OPEN_SIGN = "PanelNotify_OPEN_SIGN",
PanelNotify.CLOSE_SIGN = "PanelNotify_CLOSE_SIGN",
PanelNotify.BUY_GOLD = "PanelNotify_BUY_GOLD",
PanelNotify.BUY_CARD = "PanelNotify_BUY_CARD",
PanelNotify.SHOW_CARD_NO = "PanelNotify_SHOW_CARD_NO",
PanelNotify.OPEN_ROLE = "PANELNOTIFY_OPEN_ROLE",
PanelNotify.CLOSE_ROLE = "PANELNOTIFY_CLOSE_ROLE",
PanelNotify.OPEN_BACKPACK = "PANELNOTIFY_OPEN_BACKPACK",
PanelNotify.CLOSE_BACKPACK = "PANELNOTIFY_CLOSE_BACKPACK",
PanelNotify.OPEN_QIANGHUA = "PANELNOTIFY_OPEN_QIANGHUA",
PanelNotify.CLOSE_QIANGHUA = "PANELNOTIFY_QIANGHUA",
PanelNotify.OPEN_ZHAOXIAN = "PANELNOTIFY_OPEN_ZHAOXIAN",
PanelNotify.CLOSE_ZHAOXIAN = "PPANELNOTIFY_ZHAOXIAN",
PanelNotify.OPEN_EQUIPMENT = "PANELNOTIFY_OPEN_EQUIPMENT",
PanelNotify.CLOSE_EQUIPMENT = "PANELNOTIFY_CLOSE_EQUIPMENT",
PanelNotify.OPEN_CHUANGDANG = "PANELNOTIFY_OPEN_CHUANGDANG",
PanelNotify.CLOSE_CHUANGDANG = "PANELNOTIFY_CHUANGDANG",
PanelNotify.OPEN_SHOP = "PANELNOTIFY_OPEN_SHOP",
PanelNotify.CLOSE_SHOP = "PANELNOTIFY_CLOSE_SHOP",
PanelNotify.OPEN_WITHDRAW = "PANELNOTIFY_OPEN_WITHDRAW",
PanelNotify.CLOSE_WITHDRAW = "PANELNOTIFY_CLOSE_WITHDRAW",
PanelNotify.OPEN_USER_NOTICE = "PANELNOTIFY_OPEN_USER_NOTICE",
PanelNotify.ADD_USER_NOTICE = "PANELNOTIFY_ADD_USER_NOTICE",
PanelNotify.CLOSE_USER_NOTICE = "PANELNOTIFY_CLOSE_USER_NOTICE",
PanelNotify.OPEN_MONEYRANK = "PANELNOTIFY_OPEN_MONEYRANK",
PanelNotify.CLOSE_MONEYRANK = "PANELNOTIFY_CLOSE_MONEYRANK",
PanelNotify.OPEN_MY_SETTLE_HISTORY = "PANELNOTIFY_OPEN_MY_SETTLE_HISTORY",
PanelNotify.CLOSE_MY_SETTLE_HISTORY = "PANELNOTIFY_CLOSE_MY_SETTLE_HISTORY",
PanelNotify.OPEN_MY_CLASSICAL_SETTLE_HISTORY = "PANELNOTIFY_OPEN_MY_CLASSICAL_SETTLE_HISTORY",
PanelNotify.CLOSE_MY_CLASSICAL_SETTLE_HISTORY = "PANELNOTIFY_CLOSE_MY_CLASSICAL_SETTLE_HISTORY",
PanelNotify.OPEN_SETTLE_HISTORY = "PANELNOTIFY_OPEN_SETTLE_HISTORY",
PanelNotify.CLOSE_SETTLE_HISTORY = "PANELNOTIFY_CLOSE_SETTLE_HISTORY",
PanelNotify.OPEN_SAFE_BOX = "PANELNOTIFY_OPEN_SAFE_BOX",
PanelNotify.CLOSE_SAFE_BOX = "PANELNOTIFY_CLOSE_SAFE_BOX",
PanelNotify.OPEN_USER_ACCOUNT = "PANELNOTIFY_OPEN_USER_ACCOUNT",
PanelNotify.OPEN_MAP = "PANELNOTIFY_OPEN_MAP",
PanelNotify.CLOSE_MAP = "PANELNOTIFY_CLOSE_MAP",
PanelNotify.OPEN_FIRST_TOPUP = "PANELNOTIFY_OPEN_FIRST_TOPUP",
PanelNotify.OPEN_INVITE_LIST = "PANELNOTIFY_OPEN_INVITE_LIST",
PanelNotify.OPEN_HEPL_DIALOG = "PANELNOTIFY_OPEN_HEPL_DIALOG",
PanelNotify.CLOSE_HEPL_DIALOG = "PANELNOTIFY_CLOSE_HEPL_DIALOG",
PanelNotify.MY_TRADE_DETAIL = "PanelNotify_MY_TRADE_DETAIL",
PanelNotify.MY_CLASSICAL_TRADE_DETAIL = "PanelNotify_MY_CLASSICAL_TRADE_DETAIL",
PanelNotify.OPEN_TIP = "PANELNOTIFY_OPEN_TIP",
PanelNotify.CLOSE_TIP = "PANELNOTIFY_CLOSE_TIP",
PanelNotify.OPEN_CLASSICAL_HISTORY = "PANELNOTIFY_OPEN_CLASSICAL_HISTORY",
PanelNotify.CLOSE_CLASSICAL_HISTORY = "PANELNOTIFY_CLOSE_CLASSICAL_HISTORY",
PanelNotify.OPEN_TOPUP_RETURN_INTRODUCE = "PANELNOTIFY_OPEN_TOPUP_RETURN_INTRODUCE",
PanelNotify.CLOSE_TOPUP_RETURN_INTRODUCE = "PANELNOTIFY_CLOSE_TOPUP_RETURN_INTRODUCE",
PanelNotify.OPEN_EMERGENCY_NOTICE = "PANELNOTIFY_OPEN_EMERGENCY_NOTICE",
PanelNotify.OPEN_USER_TASK = "PANELNOTIFY_OPEN_USER_TASK",
PanelNotify.CLOSE_USER_TASK = "PANELNOTIFY_CLOSE_USER_TASK",
PanelNotify.GET_SALARY = "PANELNOTIFY_GET_SALARY",
PanelNotify.OPEN_REGISTER_REWARD = "PANELNOTIFY_OPEN_REGISTER_REWARD",
PanelNotify.OPEN_BIG_WINNER = "PANELNOTIFY_OPEN_BIG_WINNER",
PanelNotify.CLOSE_BIG_WINNER = "PANELNOTIFY_BIG_WINNER",
PanelNotify.OPEN_KLINE_HEPL = "PANELNOTIFY_OPEN_KLINE_HEPL",
PanelNotify.CLOSE_KLINE_HEPL = "PANELNOTIFY_CLOSE_KLINE_HEPL",
PanelNotify.OPEN_CLASSICAL_BANKER_QUEUE = "PANELNOTIFY_CLASSICAL_BANKER_QUEUE",
PanelNotify.CLOSE_CLASSICAL_BANKER_QUEUE = "PANELNOTIFY_CLASSICAL_BANKER_QUEUE",
PanelNotify.OPEN_CLASSICAL_KLINE_HEPL = "PANELNOTIFY_OPEN_CLASSICAL_KLINE_HEPL",
PanelNotify.CLOSE_CLASSICAL_KLINE_HEPL = "PANELNOTIFY_CLOSE_CLASSICAL_KLINE_HEPL",
PanelNotify.OPEN_CUSTOM_TOPUP = "PANELNOTIFY_OPEN_CUSTOM_TOPUP",
PanelNotify.CLOSE_CUSTOM_TOPUP = "PANELNOTIFY_CLOSE_CUSTOM_TOPUP",
__reflect(PanelNotify.prototype, "PanelNotify");
var SceneNotify = function() {
	function t() {}
	return t
}();
SceneNotify.OPEN_LOGIN = "SceneNotify_OPEN_LOGIN",
SceneNotify.OPEN_REGISTER = "SceneNotify_OPEN_REGISTER",
SceneNotify.OPEN_FORGETPWD = "SceneNotify_OPEN_FORGETPWD",
SceneNotify.OPEN_TRADE = "SceneNotify_OPEN_TRADE",
__reflect(SceneNotify.prototype, "SceneNotify");
var SysNotify = function() {
	function t() {}
	return t
}();
SysNotify.KLINE_INIT = "SysNotify_KLINE_INIT",
SysNotify.KLINE_KLINE = "SysNotify_KLINE_KLINE",
SysNotify.KLINE_LAST_KLINE = "SysNotify_KLINE_LAST_KLINE",
SysNotify.CHAT_INIT = "SysNotify_CHAT_INIT",
SysNotify.CHAT_JOIN_ROOM = "SysNotify_CHAT_JOIN_ROOM",
SysNotify.CHAT_ADD_MESSAGE = "SysNotify_CHAT_ADD_MESSAGE",
SysNotify.CHAT_ADD_MESSAGE_LIST = "SysNotify_CHAT_ADD_MESSAGE_LIST",
SysNotify.CHAT_CLEAR_MESSAGE = "SysNotify_CHAT_CLEAR_MESSAGE",
SysNotify.CHAT_ADD_NOTICE = "SysNotify_CHAT_ADD_NOTICE",
__reflect(SysNotify.prototype, "SysNotify");
var game;
!function(t) {
	var e = function(e) {
		function i() {
			return e.call(this) || this
		}
		return __extends(i, e),
		i.prototype.execute = function(e) {
			(new t.SceneManager).register(),
			(new t.MainManager).register(),
			(new t.Processor_100_1).register()
		}
		,
		i
	}(puremvc.SimpleCommand);
	t.ControllerPrepCommand = e,
	__reflect(e.prototype, "game.ControllerPrepCommand", ["puremvc.ICommand", "puremvc.INotifier"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(t) {
		function e() {
			return t.call(this) || this
		}
		return __extends(e, t),
		e.prototype.execute = function(t) {
			this.facade.registerProxy(new TemplateProxy),
			this.facade.registerProxy(new GameProxy)
		}
		,
		e
	}(puremvc.SimpleCommand);
	t.ModelPrepCommand = e,
	__reflect(e.prototype, "game.ModelPrepCommand", ["puremvc.ICommand", "puremvc.INotifier"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(t) {
		function e() {
			return t.call(this) || this
		}
		return __extends(e, t),
		e.prototype.register = function() {
			this.facade.registerCommand("Processor_100_1", e)
		}
		,
		e.prototype.execute = function(t) {
			t.getBody()
		}
		,
		e
	}(puremvc.SimpleCommand);
	e.NAME = "Processor_100_1",
	t.Processor_100_1 = e,
	__reflect(e.prototype, "game.Processor_100_1", ["puremvc.ICommand", "puremvc.INotifier"])
}(game || (game = {}));
var UserInfoRequest;
!function(t) {
	function e(t, e) {}
	t.sendUserInfo = e
}(UserInfoRequest || (UserInfoRequest = {}));
var game;
!function(t) {
	var e = function(e) {
		function i() {
			return e.call(this) || this
		}
		return __extends(i, e),
		i.prototype.initializeMacroCommand = function() {
			this.addSubCommand(t.ControllerPrepCommand),
			this.addSubCommand(t.ModelPrepCommand),
			this.addSubCommand(t.ViewPrepCommand)
		}
		,
		i
	}(puremvc.MacroCommand);
	t.StartupCommand = e,
	__reflect(e.prototype, "game.StartupCommand")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i() {
			return e.call(this) || this
		}
		return __extends(i, e),
		i.prototype.execute = function(e) {
			GameLayerManager.gameLayer().panelLayer;
			this.facade.registerMediator(new t.SignMediator),
			this.facade.registerMediator(new t.ShopMediator),
			this.facade.registerMediator(new t.WithdrawMediator),
			this.facade.registerMediator(new t.SafeBoxMediator),
			this.facade.registerMediator(new t.HelpMediator),
			this.facade.registerMediator(new t.TipMediator),
			this.facade.registerMediator(new t.MoneyRankMediator),
			this.facade.registerMediator(new t.MySettleHistoryMediator),
			this.facade.registerMediator(new t.SettleHistoryMediator),
			this.facade.registerMediator(new t.InviteListMediator),
			this.facade.registerMediator(new t.FirstTopupMediator),
			this.facade.registerMediator(new t.UserNoticeMediator),
			this.facade.registerMediator(new t.UserAccountMediator),
			this.facade.registerMediator(new t.EmergencyNoticeMediator),
			this.facade.registerMediator(new t.UserTaskMediator),
			this.facade.registerMediator(new t.RegisterRewardMediator),
			this.facade.registerMediator(new t.BigWinnerMediator),
			this.facade.registerMediator(new t.KlineHelpMediator),
			this.facade.registerMediator(new t.ClassicalBankerQueueMediator),
			this.facade.registerMediator(new t.MyClassicalSettleHistoryMediator),
			this.facade.registerMediator(new t.ClassicalHistoryMediator),
			this.facade.registerMediator(new t.ClassicalKlineHelpMediator),
			this.facade.registerMediator(new t.CustomTopupMediator),
			this.facade.registerMediator(new t.TopupReturnIntroduceMediator)
		}
		,
		i
	}(puremvc.SimpleCommand);
	t.ViewPrepCommand = e,
	__reflect(e.prototype, "game.ViewPrepCommand", ["puremvc.ICommand", "puremvc.INotifier"])
}(game || (game = {}));
var P;
!function(t) {
	function e() {
		return game.AppFacade.getInstance().retrieveProxy(TemplateProxy.NAME)
	}

	function i() {
		return game.AppFacade.getInstance().retrieveProxy(GameProxy.NAME)
	}
	t.getTemplateDataProxy = e,
	t.getGameDataProxy = i
}(P || (P = {}));
var GameProxy = function(t) {
	function e() {
		var i = t.call(this, e.NAME) || this;
		return i.vo = new GameVO,
		i
	}
	return __extends(e, t),
	e.prototype.getGameName = function() {
		return this.vo || (this.vo = new GameVO),
		this.vo.gameName
	}
	,
	e.prototype.setGameName = function(t) {
		this.vo || (this.vo = new GameVO),
		this.vo.gameName = t
	}
	,
	e
}(ResourceProxyBase);
GameProxy.NAME = "GameProxy",
__reflect(GameProxy.prototype, "GameProxy");
var TemplateProxy = function(t) {
	function e() {
		return t.call(this, e.NAME) || this
	}
	return __extends(e, t),
	e.prototype.getGameData = function() {
		return this.getData()
	}
	,
	e
}(ResourceProxyBase);
TemplateProxy.NAME = "template_json",
__reflect(TemplateProxy.prototype, "TemplateProxy");
var CONST = function() {
	function t() {}
	return t.produce = function(e) {
		null == t.CACHE_DICT[e] && (t.CACHE_DICT[e] = []);
		var i, n = t.CACHE_DICT[e];
		if (n.length > 0)
			i = n.pop();
		else
			switch (e) {
			case "Image":
				i = new eui.Image;
				break;
			case "Label":
				i = new eui.Label;
				break;
			case "Group":
				i = new eui.Group;
				break;
			case "Shape":
				i = new egret.Shape
			}
		return i
	}
	,
	t.reclaim = function(e, i) {
		null == t.CACHE_DICT[e] && (t.CACHE_DICT[e] = []),
		t.CACHE_DICT[e].push(i)
	}
	,
	t
}();
CONST.FONT = {
	Microsoft_YaHei: "Microsoft YaHei"
},
CONST.DEFAULT_PHOTO = "person_png",
CONST.ODDS_IMG = {
	UP: "kline-bottom-img-up_png",
	DOWN: "kline-bottom-img-down_png",
	FLAT: "kline-bottom-img-flat_png"
},
CONST.CACHE_DICT = {},
CONST.CommonCommand = {
	gate: "gate.gateHandler.queryEntry",
	err: "err",
	close: "close",
	heartbeat_timeout: "heartbeat_timeout",
	io_error: "io-error"
},
CONST.KlineCommand = {
	init: "klineconnector.entryHandler.enter",
	kline: "kline",
	last_kline: "last_kline"
},
CONST.ChatCommand = {
	init: "chatconnector.entryHandler.enter",
	join_room: "chatconnector.entryHandler.join_room",
	get_history: "chat.chatHandler.get_history",
	leave_room: "leave_room",
	send_message: "chat.chatHandler.send_message",
	receive_message: "receive_message",
	clear_message: "clear_message",
	message_history: "message_history",
	user_notice_message: "user_notice_message"
},
CONST.GameCommand = {
	init: "gameconnector.entryHandler.enter",
	get_banker: "game.gameHandler.get_banker",
	get_pots: "game.gameHandler.get_pots",
	get_ewallet: "game.gameHandler.get_ewallet",
	create_trade: "game.gameHandler.create_trade",
	new_banker: "new_banker",
	off_banker: "off_banker",
	new_round: "new_round",
	new_trade_grab: "new_trade_grab",
	begin_settle_grab: "begin_settle_grab",
	new_settle_grab: "new_settle_grab",
	big_winner: "big_winner",
	apply_banker: "apply_banker",
	off_banker_queue: "off_banker_queue",
	capital_close: "capital_close",
	sitdown: "game.gameHandler.sitdown",
	standup: "game.gameHandler.standup",
	get_seats: "game.gameHandler.get_seats",
	seat_trade: "game.gameHandler.seat_trade",
	game_notice: "game.gameHandler.game_notice"
},
__reflect(CONST.prototype, "CONST");
var GameVO = function() {
	function t() {
		this.gameName = "Eger pro"
	}
	return t
}();
__reflect(GameVO.prototype, "GameVO");
var GameLayerManager = function(t) {
	function e() {
		var e = t.call(this) || this;
		return e.loadLayer = new eui.UILayer,
		e.sceneLayer = new eui.UILayer,
		e.mainLayer = new eui.UILayer,
		e.panelLayer = new eui.UILayer,
		e.effectLayer = new eui.UILayer,
		e.maskLayer = new eui.UILayer,
		e.init(),
		e
	}
	return __extends(e, t),
	e.gameLayer = function() {
		return this._instance || (this._instance = new e),
		this._instance
	}
	,
	e.prototype.init = function() {
		this.touchThrough = !0,
		this.sceneLayer.touchThrough = !0,
		this.mainLayer.touchThrough = !0,
		this.panelLayer.touchThrough = !0,
		this.effectLayer.touchThrough = !0,
		this.maskLayer.touchThrough = !0,
		this.loadLayer.touchThrough = !0,
		this.addChild(this.sceneLayer),
		this.addChild(this.mainLayer),
		this.addChild(this.panelLayer),
		this.addChild(this.effectLayer),
		this.addChild(this.maskLayer),
		this.addChild(this.loadLayer),
		this.setChildIndex(this.mainLayer, 100),
		this.setChildIndex(this.panelLayer, 101),
		this.setChildIndex(this.effectLayer, 102)
	}
	,
	e
}(eui.UILayer);
__reflect(GameLayerManager.prototype, "GameLayerManager");
var game;
!function(t) {
	var e = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.images = [],
			e.currentIndex = 0,
			e.options = {
				x: 0,
				y: 0,
				width: 0,
				height: 0
			},
			e.lastX = 0,
			e.isFirst = !0,
			e.autoDirection = "L",
			e.stopMoveListener = null,
			e.autoMoveTimer = null,
			e.newX = 0,
			e.oldX = 0,
			e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/main/AdvViewPagerSkin.exml",
			e
		}
		return __extends(e, t),
		e.prototype.setOptions = function(t) {
			__extends(this.options, t)
		}
		,
		e.prototype.setData = function(t) {
			this.data = t
		}
		,
		e.getInstance = function(t) {
			return this._instance || t && (this._instance = new e),
			this._instance
		}
		,
		e.prototype.uiCompHandler = function(t) {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this)
		}
		,
		e.prototype.initUI = function() {
			this.group_content.removeChildren(),
			this.startAutoMoveTimer(),
			this.group.x = this.options.x,
			this.group.y = this.options.y,
			this.group.width = this.options.width,
			this.group.height = this.options.height,
			this.group.scrollEnabled = !0,
			this.group_content.width = this.options.width * this.data.length;
			for (var t = 0, e = 0; e < this.data.length; e++) {
				var i = new eui.Image;
				i.width = this.options.width,
				i.height = this.options.height,
				i.x = t,
				i.name = e.toString(),
				this.group_content.addChild(i),
				this.images[e] = i,
				RES.getResByUrl(this.data[e].image_url, function(t, e) {
					for (var i = 0; i < this.data.length; i++)
						e == this.data[i].image_url && (this.images[i].source = t)
				}, this),
				t += i.width,
				i.addEventListener(egret.TouchEvent.TOUCH_END, this.href, this)
			}
			null == this.group_dot && (this.group_dot = new eui.Group,
			this.group_dot.horizontalCenter = "0.5"),
			this.addChild(this.group_dot),
			this.drawDot(),
			this.setListener()
		}
		,
		e.prototype.drawDot = function() {
			this.group_dot.removeChildren();
			for (var t = 0, e = this.height - 20, i = 0; i < this.data.length; i++) {
				var n = new egret.Shape;
				this.currentIndex == i ? n.graphics.beginFill(16777215, 1) : n.graphics.beginFill(8158332, 1),
				n.graphics.drawCircle(t, e, 5),
				n.graphics.endFill(),
				this.group_dot.addChild(n),
				t += 20
			}
		}
		,
		e.prototype.startAutoMoveTimer = function() {
			if (this.data.length > 1) {
				var t = this;
				null == this.autoMoveTimer && (this.autoMoveTimer = setInterval(function() {
					t.currentIndex == t.data.length - 1 ? (t.autoDirection = "R",
					t.setIndex(t.currentIndex - 1)) : 0 == t.currentIndex ? (t.setIndex(t.currentIndex + 1),
					t.autoDirection = "L") : "R" == t.autoDirection ? t.setIndex(t.currentIndex - 1) : "L" == t.autoDirection && t.setIndex(t.currentIndex + 1)
				}, 2e3, this))
			}
		}
		,
		e.prototype.removeAutoMoveTimer = function() {
			null != this.autoMoveTimer && (clearInterval(this.autoMoveTimer),
			this.autoMoveTimer = null)
		}
		,
		e.prototype.setStopMoveListener = function() {
			var t = this;
			null == this.stopMoveListener && (this.stopMoveListener = setInterval(function() {
				t.oldX == t.newX && t.stopMove(),
				t.oldX = t.newX
			}, 50, this))
		}
		,
		e.prototype.removeStopMoveListener = function() {
			null != this.stopMoveListener && (clearInterval(this.stopMoveListener),
			this.stopMoveListener = null)
		}
		,
		e.prototype.setListener = function() {
			this.group.addEventListener(egret.TouchEvent.TOUCH_MOVE, this.onMove, this),
			this.group.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.startMove, this),
			this.group.addEventListener(egret.TouchEvent.TOUCH_END, this.stopMove, this)
		}
		,
		e.prototype.href = function(t) {
			var e = t.currentTarget.name
			  , i = this.data[e].href;
			"" != i && null != i && window.open(i, "_blank")
		}
		,
		e.prototype.startMove = function() {
			this.isFirst = !0,
			this.removeAutoMoveTimer(),
			this.setStopMoveListener()
		}
		,
		e.prototype.stopMove = function() {
			if (this.startAutoMoveTimer(),
			this.removeStopMoveListener(),
			this.images.length > 1)
				for (var t = this.group_content.x, e = 0; e < this.images.length; e++) {
					var i = this.images[e];
					Math.abs(t) >= i.x && Math.abs(t) <= i.x + i.width && ("R" == this.direction ? this.setIndex(e + 1) : "L" == this.direction && this.setIndex(e))
				}
		}
		,
		e.prototype.onMove = function(t) {
			if (this.removeAutoMoveTimer(),
			this.newX = t.stageX,
			this.isFirst)
				this.lastX = t.stageX,
				this.isFirst = !1;
			else {
				var e = t.stageX - this.lastX;
				if (0 > e ? this.direction = "R" : e > 0 && (this.direction = "L"),
				this.group_content.x >= 0 && e > 0)
					return;
				if (this.group_content.x <= 0 - this.options.width * (this.data.length - 1) && 0 > e)
					return;
				this.group_content.x + e >= 0 ? this.group_content.x = 0 : this.group_content.x + e <= 0 - this.options.width * (this.data.length - 1) ? this.group_content.x = 0 - this.options.width * (this.data.length - 1) : this.group_content.x = this.group_content.x + e,
				this.lastX = t.stageX
			}
		}
		,
		e.prototype.setIndex = function(t) {
			if (!(t > this.images.length - 1)) {
				this.currentIndex = t,
				this.drawDot();
				var e = this.images[t].x;
				egret.Tween.get(this.group_content).to({
					x: -e
				}, 300, egret.Ease.cubicOut)
			}
		}
		,
		e.prototype.destoryAll = function() {
			this.group.removeEventListener(egret.TouchEvent.TOUCH_MOVE, this.onMove, this),
			this.group.removeEventListener(egret.TouchEvent.TOUCH_BEGIN, this.startMove, this),
			this.group.removeEventListener(egret.TouchEvent.TOUCH_END, this.stopMove, this),
			this.removeStopMoveListener(),
			this.removeAutoMoveTimer()
		}
		,
		e.prototype.partAdded = function(e, i) {
			t.prototype.partAdded.call(this, e, i)
		}
		,
		e.prototype.childrenCreated = function() {
			t.prototype.childrenCreated.call(this)
		}
		,
		e
	}(eui.Component);
	t.AdvViewPager = e,
	__reflect(e.prototype, "game.AdvViewPager", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var CapitalButtonSkin = function(t) {
	function e() {
		var e = t.call(this) || this;
		return e.btn_enable = !0,
		e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
		e.skinName = "resource/custom_skins/capitalTypeBtnSkin.exml",
		e
	}
	return __extends(e, t),
	e.prototype.uiCompHandler = function() {
		this.capital_btn_label.text = this.label,
		this.capital_btn.enabled = this.btn_enable
	}
	,
	e.prototype.partAdded = function(e, i) {
		t.prototype.partAdded.call(this, e, i)
	}
	,
	e.prototype.childrenCreated = function() {
		t.prototype.childrenCreated.call(this)
	}
	,
	e
}(eui.Component);
__reflect(CapitalButtonSkin.prototype, "CapitalButtonSkin", ["eui.UIComponent", "egret.DisplayObject"]);
var game;
!function(t) {
	var e = function(e) {
		function i(t) {
			var i = e.call(this) || this;
			return i.reload = !1,
			i.isOpen = !1,
			i.timerUpdate = null,
			i.game_model_type = t.game_model_type,
			i.addEventListener(eui.UIEvent.COMPLETE, i.uiCompHandler, i),
			i.skinName = "resource/ui/main/CapitalListUISkin.exml",
			i
		}
		return __extends(i, e),
		i.getInstance = function(t) {
			return this._instance ? (this._instance.game_model_type = t.game_model_type,
			this._instance.reload = t.reload,
			t.reload && (this._instance.getRoomList(),
			this._instance.isOpen = !0)) : this._instance = new i(t),
			this._instance
		}
		,
		i.prototype.uiCompHandler = function(e) {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			this.capital_list.layout.gap = 30,
			this.headerBar = t.HeaderBar.getInstance(!0),
			this.headerBar.return_type = "capital_list",
			this.groupHeader.addChild(this.headerBar),
			this.footerBar = t.FooterBar.getInstance(),
			this.groupFooter.addChild(this.footerBar),
			this.getRoomList(),
			this.isOpen = !0;
			var i = this;
			(null == this.timerUpdate || 0 == this.timerUpdate) && (this.timerUpdate = setInterval(function() {
				if (i.isOpen) {
					var t = new eui.ArrayCollection;
					var ui = Utils.getStorageObj(Keys.FK_UserInfo)
					t.addItem({
						key: "uid",
						value: ui.uid
					})
					t.addItem({
						key: "token",
						value: ui.token
					})
					t.addItem({
						key: "game_model_type",
						value: i.game_model_type
					})
					HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "game/game_room/get", t, i.onGetRoomListComplete, i.onGetRoomListIOError, i.onGetRoomListProgress, i)
				}
			}, 1e4))
		}
		,
		i.prototype.getRoomList = function() {
			this.showLoading(this);
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "game_model_type",
				value: this.game_model_type
			})
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "game/game_room/get", t, this.onGetRoomListComplete, this.onGetRoomListIOError, this.onGetRoomListProgress, this)
		}
		,
		i.prototype.onGetRoomListComplete = function(e) {
			this.closeLoading(this);
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_GAME_ROOM_FOUND) {
				this.result = n.results;
				for (var a = new Array, s = 0; s < this.result.length; s++) {
					var o = this.result[s];
					"Y" == o.game_room_is_available && "N" == o.is_sim && a.push(o)
				}
				this.capital_list.dataProvider = new eui.ArrayCollection(a),
				this.capital_list.itemRenderer = t.CapitalListItem
			} else {
				if (403 == n.type)
					return void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				n.message
			}
		}
		,
		i.prototype.onGetRoomListIOError = function(t) {
			this.closeLoading(this),
			Toast.launch("网络异常,请检查您的网络设置.", -100)
		}
		,
		i.prototype.onGetRoomListProgress = function(t) {}
		,
		i.prototype.showLoading = function(t) {
			if (null == t.loading_group) {
				t.loading_group = new eui.Group,
				t.loading_group.width = 719,
				t.loading_group.height = 1199,
				t.loading_group.verticalCenter = .5,
				t.loading_group.horizontalCenter = .5;
				var e = new egret.Sprite;
				e.graphics.clear(),
				e.graphics.beginFill(0, .6),
				e.graphics.drawRect(0, 0, GameConfig.curWidth(), GameConfig.curHeight()),
				e.graphics.endFill(),
				e.width = GameConfig.curWidth(),
				e.height = GameConfig.curHeight(),
				e.touchEnabled = !0,
				egret.Tween.get(e).to({
					alpha: 1
				}, 150),
				e.visible = !0,
				t.loading_group.addChild(e),
				null == t.loading_image && (t.loading_image = new eui.Image),
				t.loading_image.verticalCenter = .5,
				t.loading_image.horizontalCenter = .5,
				t.loading_image.source = RES.getRes("loading_run_png"),
				t.loading_image.anchorOffsetX = .5 * t.loading_image.width,
				t.loading_image.anchorOffsetY = .5 * t.loading_image.height,
				t.loading_group.addChild(t.loading_image)
			}
			GameLayerManager.gameLayer().effectLayer.contains(t.loading_group) || (GameLayerManager.gameLayer().effectLayer.addChild(t.loading_group),
			GameLayerManager.gameLayer().effectLayer.addEventListener(egret.Event.ENTER_FRAME, t.runLoading, t))
		}
		,
		i.prototype.runLoading = function(t) {
			this.loading_image.rotation += 3
		}
		,
		i.prototype.closeLoading = function(t) {
			GameLayerManager.gameLayer().mainLayer.$children.length > 1 && GameLayerManager.gameLayer().mainLayer.removeChildAt(1),
			GameLayerManager.gameLayer().effectLayer.contains(t.loading_group) && GameLayerManager.gameLayer().effectLayer.removeChild(t.loading_group),
			GameLayerManager.gameLayer().effectLayer.removeEventListener(egret.Event.ENTER_FRAME, t.runLoading, t)
		}
		,
		i.prototype.childrenCreated = function() {
			e.prototype.childrenCreated.call(this),
			1 == this.game_model_type ? (this.img_title.source = RES.getRes("icon_classical_title_png"),
			this.img_title.y = 169,
			this.img_title.width = 206,
			this.img_title.height = 45) : (this.img_title.source = RES.getRes("icon_grab_title_png"),
			this.img_title.y = 164,
			this.img_title.width = 177,
			this.img_title.height = 48)
		}
		,
		i
	}(eui.Component);
	t.CapitalList = e,
	__reflect(e.prototype, "game.CapitalList", ["eui.UIComponent", "egret.DisplayObject"]);
	var i = function(e) {
		function i() {
			var t = e.call(this) || this;
			return t.addEventListener(eui.UIEvent.COMPLETE, t.uiCompHandler, t),
			t.skinName = "resource/ui/main/CapitalListItemSkin.exml",
			t
		}
		return __extends(i, e),
		i.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			this.setData()
		}
		,
		i.prototype.dataChanged = function() {
			this.setData()
		}
		,
		i.prototype.setData = function() {
			if (null != this.btn_capital && null != this.data) {
				"BTCCNY" == this.data.capital_key ? this.btn_capital.img_capital.texture = RES.getRes("bg_capital_btccny_png") : "LTCCNY" == this.data.capital_key ? this.btn_capital.img_capital.texture = RES.getRes("bg_btccny_png") : "EURUSD" == this.data.capital_key ? this.btn_capital.img_capital.texture = RES.getRes("bg_capital_eurusd_png") : "XAUUSD" == this.data.capital_key ? this.btn_capital.img_capital.texture = RES.getRes("bg_capital_xauusd_png") : "GBPUSD" == this.data.capital_key && (this.btn_capital.img_capital.texture = RES.getRes("bg_dollor_png"));
				var e = this.data.online_num;
				if (this.lb_online_num.text = e,
				"Y" == this.data.is_close)
					return void this.btn_capital.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
						var e = [{
							text: "该资产已休市",
							style: {
								textColor: 16777215,
								size: 32
							}
						}]
						  , i = []
						  , n = new eui.Group;
						n.name = "childGroupTips",
						n.width = 520,
						n.height = 240,
						n.x = 75,
						n.y = 120;
						var a = new eui.Label
						  , s = new eui.Label;
						a.width = n.width,
						a.textAlign = egret.HorizontalAlign.CENTER,
						a.textFlow = e,
						s.width = n.width,
						s.textAlign = egret.HorizontalAlign.LEFT,
						s.multiline = !0,
						s.lineSpacing = 8,
						s.textFlow = i,
						a.y = (n.height - a.height - s.height - 5) / 2,
						s.height > 0 && (a.y = a.y - 15),
						a.height > 0 ? s.y = a.y + 30 + a.height : s.y = a.y + a.height,
						n.addChild(a),
						n.addChild(s);
						var o = {
							group: n,
							params: null,
							cancelable: !1,
							callback: function(t) {}
						};
						t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_TIP, o)
					}, this);
				this.btn_capital.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.click, this),
				this.btn_capital.addEventListener(egret.TouchEvent.TOUCH_TAP, this.click, this)
			}
		}
		,
		i.prototype.click = function() {
			var e = this;
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
			t.SceneTrade.getInstance().stopBgSound(),
			t.SceneTrade.getInstance().playGrabSound();
			var i = Array();
			if (i.game_model_type = this.data.game_model_type,
			i.game_room_id = this.data.id,
			i.capital = this.data.capital_key,
			i.is_sim = this.data.is_sim,
			i.change_inform = !1,
			t.SceneTrade.is_new_user && 2 == this.data.game_model_type)
				return i.from = "game_grab",
				void t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_GRAB_GUIDE, i);
			if (2 == this.data.game_model_type) {
				var n = i.capital + "_" + i.game_room_id
				  , a = Utils.getStorageObj(n)
				  , s = this.data.odds_md5;
				if (null != a && void 0 != a && "undefined" != a && "" != a && a != s) {
					var o = []
					  , r = [{
						text: "该资产点差区间或赔率已更新，请您留意。",
						style: {
							textColor: 16777215,
							size: 32
						}
					}]
					  , l = new eui.Group;
					l.name = "childGroupTips",
					l.width = 520,
					l.height = 240,
					l.x = 75,
					l.y = 120;
					var h = new eui.Label
					  , d = new eui.Label;
					h.width = l.width,
					h.textAlign = egret.HorizontalAlign.CENTER,
					h.textFlow = o,
					d.width = l.width,
					d.textAlign = egret.HorizontalAlign.LEFT,
					d.multiline = !0,
					d.lineSpacing = 8,
					d.textFlow = r,
					h.y = (l.height - h.height - d.height - 5) / 2,
					d.height > 0 && (h.y = h.y - 15),
					h.height > 0 ? d.y = h.y + 30 + h.height : d.y = h.y + h.height,
					l.addChild(h),
					l.addChild(d);
					var _ = {
						group: l,
						params: i,
						cancelable: !1,
						callback: function(t) {
							e.openTradePage(t)
						}
					};
					return Utils.setStorageObj(n, s),
					void t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_TIP, _)
				}
				Utils.setStorageObj(n, s)
			}
			1 == this.data.game_model_type ? t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_CLASSICAL, i) : 2 == this.data.game_model_type && t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_GRAB, i)
		}
		,
		i.prototype.openTradePage = function(e) {
			1 == this.data.game_model_type ? t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_CLASSICAL, e) : 2 == this.data.game_model_type && t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_GRAB, e)
		}
		,
		i
	}(eui.ItemRenderer);
	t.CapitalListItem = i,
	__reflect(i.prototype, "game.CapitalListItem")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i() {
			var t = e.call(this) || this;
			return t.chat_data = new Array,
			t.chatSocketReady = !1,
			t.options = {
				room_id: 0,
				user_info: null,
				user_id: 0,
				token: ""
			},
			t.addEventListener(eui.UIEvent.COMPLETE, t.uiCompHandler, t),
			t.skinName = "resource/ui/main/ChatBarSkin.exml",
			t
		}
		return __extends(i, e),
		Object.defineProperty(i.prototype, "UserInfo", {
			get: function() {
				return this.user_info
			},
			set: function(t) {
				this.user_info = t
			},
			enumerable: !0,
			configurable: !0
		}),
		i.prototype.chatSocketStatus = function() {
			return this.chatSocketReady
		}
		,
		i.prototype.setOptions = function(t) {
			__extends(this.options, t)
		}
		,
		i.prototype.getOptions = function() {
			return this.options
		}
		,
		i.getInstance = function(t) {
			return this._instance || t && (this._instance = new i),
			this._instance
		}
		,
		i.prototype.uiCompHandler = function(e) {
			var i = this;
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			this.groupChatFlow.addEventListener(egret.TouchEvent.TOUCH_END, function() {
				this.groupChatFlow.visible = !1,
				this.edit_message.dispatchEventWith(egret.TouchEvent.TOUCH_END, !1, !1, !1)
			}, this),
			this.edit_message.addEventListener(egret.FocusEvent.FOCUS_OUT, function() {
				this.groupChatFlow.visible = !0
			}, this),
			this.btn_send_message.addEventListener(egret.TouchEvent.TOUCH_TAP, this.sendMessage, this),
			eui.Watcher.watch(this.scroller_chat_list.viewport, ["contentHeight"], function() {
				i.chat_list.validateNow(),
				i.scroller_chat_list.viewport.contentHeight >= i.scroller_chat_list.height && (i.scroller_chat_list.viewport.scrollV = i.scroller_chat_list.viewport.contentHeight - i.scroller_chat_list.height + 5)
			}, this),
			this.chat_list.useVirtualLayout = !1,
			this.btn_expression.addEventListener(egret.TouchEvent.TOUCH_END, function() {
				t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_EMOJI)
			}, this)
		}
		,
		i.prototype.partAdded = function(i, n) {
			e.prototype.partAdded.call(this, i, n),
			n == this.chat_list && (this.chat_list.dataProvider = new eui.ArrayCollection(this.chat_data),
			this.chat_list.itemRenderer = t.ChatListItem)
		}
		,
		i.prototype.childrenCreated = function() {
			e.prototype.childrenCreated.call(this)
		}
		,
		i.prototype.initSocket = function() {
			this.user_info = this.options.user_info,
			this.chat_socket = t.ChatSocket.getInstance(),
			this.chat_socket.setOptions(this.options),
			this.chat_socket.initSocket()
		}
		,
		i.prototype.Notification_CHAT_INIT = function(t) {
			null == t || void 0 == t || "undefined" == t || t.length <= 0 || 200 == t.code
		}
		,
		i.prototype.Notification_Add_Message = function(t) {
			this.addMessageToList(this, t)
		}
		,
		i.prototype.Notification_Clear_Message = function() {
			var t = this.chat_data;
			this.chat_data = [];
			for (var e = 0; e < t.length; e++) {
				var i = t[e];
				"N" != i.message_type && this.chat_data.push(i)
			}
			this.chat_list.dataProvider = new eui.ArrayCollection(this.chat_data),
			this.chat_list.validateNow(),
			this.scroller_chat_list.viewport.contentHeight >= this.scroller_chat_list.height && (this.scroller_chat_list.viewport.scrollV = this.scroller_chat_list.viewport.contentHeight - this.scroller_chat_list.height + 5)
		}
		,
		i.prototype.Notification_Add_Message_LIST = function(t) {
			this.chat_data = t,
			this.chat_list.dataProvider = new eui.ArrayCollection(this.chat_data),
			this.chat_list.validateNow(),
			this.scroller_chat_list.viewport.contentHeight >= this.scroller_chat_list.height && (this.scroller_chat_list.viewport.scrollV = this.scroller_chat_list.viewport.contentHeight - this.scroller_chat_list.height + 5)
		}
		,
		i.prototype.Notification_JOIN_ROOM = function(t) {
			var e = {
				room_id: this.options.room_id,
				user_id: this.options.user_id
			};
			this.chat_socket.sendMessage(CONST.ChatCommand.get_history, e),
			this.chatSocketReady = !0
		}
		,
		i.prototype.addMessage = function(t) {
			this.addMessageToList(this, t)
		}
		,
		i.prototype.addMessageToList = function(t, e) {
			null != e && (t.chat_data.length >= 30 && t.chat_data.shift(),
			t.chat_data.push(e),
			t.chat_list.dataProvider = new eui.ArrayCollection(t.chat_data),
			t.chat_list.validateNow(),
			t.scroller_chat_list.viewport.contentHeight >= t.scroller_chat_list.height && (t.scroller_chat_list.viewport.scrollV = t.scroller_chat_list.viewport.contentHeight - t.scroller_chat_list.height + 5))
		}
		,
		i.prototype.addEmoji = function(t) {
			this.edit_message.text = this.edit_message.text + " " + t
		}
		,
		i.prototype.convertEmojiToCode = function(t) {
			for (var e = 0; e < i.array_emoji.length; e++) {
				var n = i.array_emoji[e];
				if (t.indexOf(n.value) >= 0)
					for (; t.indexOf(n.value) >= 0; )
						t = t.replace(n.value, n.key)
			}
			return t
		}
		,
		i.prototype.sendMessage = function() {
			if (t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
			this.chatSocketReady) {
				var e = (this.user_info.name,
				this.user_info.avatar_url,
				this.edit_message.text.trim());
				if (null != e && "" != e) {
					e = this.convertEmojiToCode(e);
					var i = {
						message: e
					};
					this.chat_socket.sendMessage(CONST.ChatCommand.send_message, i)
				}
				this.edit_message.text = ""
			}
		}
		,
		i
	}(eui.Component);
	e.array_emoji = [{
		key: "[e_1]",
		value: "😊"
	}, {
		key: "[e_2]",
		value: "😄"
	}, {
		key: "[e_3]",
		value: "😎"
	}, {
		key: "[e_4]",
		value: "😂"
	}, {
		key: "[e_5]",
		value: "😭"
	}, {
		key: "[e_6]",
		value: "🙏🏻"
	}, {
		key: "[e_7]",
		value: "👍"
	}, {
		key: "[e_8]",
		value: "👏"
	}, {
		key: "[e_9]",
		value: "😍"
	}, {
		key: "[e_10]",
		value: "😘"
	}, {
		key: "[e_11]",
		value: "😚"
	}, {
		key: "[e_12]",
		value: "😝"
	}, {
		key: "[e_13]",
		value: "😔"
	}, {
		key: "[e_14]",
		value: "😏"
	}, {
		key: "[e_15]",
		value: "😳"
	}, {
		key: "[e_16]",
		value: "🙄"
	}, {
		key: "[e_17]",
		value: "😷"
	}, {
		key: "[e_18]",
		value: "😡"
	}, {
		key: "[e_19]",
		value: "😰"
	}, {
		key: "[e_20]",
		value: "😱"
	}, {
		key: "[e_21]",
		value: "😖"
	}, {
		key: "[e_22]",
		value: "😪"
	}, {
		key: "[e_23]",
		value: "🙁"
	}, {
		key: "[e_24]",
		value: "😈"
	}],
	t.ChatBar = e,
	__reflect(e.prototype, "game.ChatBar", ["eui.UIComponent", "egret.DisplayObject"]);
	var i = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.skinName = "resource/ui/main/UserChatItem.exml",
			e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e
		}
		return __extends(e, t),
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			this.setData()
		}
		,
		e.prototype.dataChanged = function() {
			this.setData()
		}
		,
		e.prototype.setData = function() {
			if (null != this.message) {
				if (null == this.tx && (this.tx = new egret.TextField),
				"N" == this.data.message_type) {
					if (this.user_avatar.visible = !0,
					void 0 == this.data.user_avatar || null == this.data.user_avatar || "" == this.data.user_avatar ? this.user_avatar.source = RES.getRes("person_png") : this.loadBankerImage(this.data.user_avatar),
					this.data.vip_grade > 0) {
						this.vip_grade.visible = !0,
						this.vip_grade.source = RES.getRes("icon_vip_" + this.data.vip_grade + "_png");
						var t = "         【" + this.data.user_name + "】: "
					} else {
						this.vip_grade.visible = !1;
						var t = "     【" + this.data.user_name + "】: "
					}
					this.data.user_name.length > 6 && (this.data.user_name = this.data.user_name.substring(0, 6)),
					this.tx.textFlow = [{
						text: t,
						style: {
							textColor: 16542376,
							size: 22
						}
					}, {
						text: this.data.message,
						style: {
							textColor: 16777215,
							size: 22
						}
					}]
				} else
					"S" == this.data.message_type ? (this.user_avatar.visible = !1,
					this.vip_grade.visible = !1,
					"apply_banker" == this.data.message_type_s ? this.tx.textFlow = [{
						text: "恭迎",
						style: {
							textColor: 16777215,
							size: 22
						}
					}, {
						text: this.data.user_name,
						style: {
							textColor: 5169700,
							size: 22
						}
					}, {
						text: "上庄",
						style: {
							textColor: 16777215,
							size: 22
						}
					}] : "off_banker" == this.data.message_type_s ? this.tx.textFlow = [{
						text: this.data.user_name,
						style: {
							textColor: 5169700,
							size: 22
						}
					}, {
						text: "下庄",
						style: {
							textColor: 16777215,
							size: 22
						}
					}] : "banker_win" == this.data.message_type_s ? this.tx.textFlow = [{
						text: "庄家",
						style: {
							textColor: 16777215,
							size: 22
						}
					}, {
						text: this.data.user_name,
						style: {
							textColor: 5169700,
							size: 22
						}
					}, {
						text: "赢了",
						style: {
							textColor: 16777215,
							size: 22
						}
					}, {
						text: this.data.amount + "金币",
						style: {
							textColor: 16771143,
							size: 22
						}
					}] : "banker_lose" == this.data.message_type_s ? this.tx.textFlow = [{
						text: "庄家",
						style: {
							textColor: 16777215,
							size: 22
						}
					}, {
						text: this.data.user_name,
						style: {
							textColor: 5169700,
							size: 22
						}
					}, {
						text: "输了",
						style: {
							textColor: 16777215,
							size: 22
						}
					}, {
						text: this.data.amount + "金币",
						style: {
							textColor: 3921496,
							size: 22
						}
					}] : "you_win" == this.data.message_type_s ? this.tx.textFlow = [{
						text: "你赢了",
						style: {
							textColor: 16777215,
							size: 22
						}
					}, {
						text: this.data.amount + "金币",
						style: {
							textColor: 16771143,
							size: 22
						}
					}] : "point_diff" == this.data.message_type_s ? 0 == this.data.point_diff ? this.tx.textFlow = [{
						text: "第 " + this.data.num + " 期 平胜 点差: " + this.data.point_diff,
						style: {
							textColor: 16777215,
							size: 22
						}
					}] : this.data.point_diff > 0 ? this.tx.textFlow = [{
						text: "第 " + this.data.num + " 期 红胜 点差: ",
						style: {
							textColor: 16777215,
							size: 22
						}
					}, {
						text: this.data.point_diff,
						style: {
							textColor: 16001316,
							size: 22
						}
					}] : this.data.point_diff < 0 && (this.tx.textFlow = [{
						text: "第 " + this.data.num + " 期 绿胜 点差: ",
						style: {
							textColor: 16777215,
							size: 22
						}
					}, {
						text: this.data.point_diff,
						style: {
							textColor: 5169700,
							size: 22
						}
					}]) : this.tx.textFlow = [{
						text: this.data.message,
						style: {
							textColor: 16750159,
							size: 22
						}
					}]) : "A" == this.data.message_type && (this.user_avatar.visible = !1,
					this.vip_grade.visible = !1,
					this.tx.textFlow = [{
						text: "【管理员】：" + this.data.message,
						style: {
							textColor: 16771143,
							size: 22
						}
					}]);
				this.tx.textAlign = egret.VerticalAlign.MIDDLE,
				this.tx.multiline = !0,
				this.tx.width = 340,
				this.tx.height = this.tx.textHeight + 5,
				this.tx.x = 3.4,
				this.tx.y = 6,
				this.tx.lineSpacing = 10,
				this.height = this.tx.height + 5,
				this.addChild(this.tx)
			}
		}
		,
		e.prototype.loadBankerImage = function(t) {
			var e = new egret.ImageLoader;
			e.addEventListener(egret.Event.COMPLETE, this.bankerImageLoadCompleteHandler, this),
			e.load(t)
		}
		,
		e.prototype.bankerImageLoadCompleteHandler = function(t) {
			var e = t.currentTarget;
			this.user_avatar.bitmapData = e.data
		}
		,
		e
	}(eui.ItemRenderer);
	t.ChatListItem = i,
	__reflect(i.prototype, "game.ChatListItem")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i() {
			var t = e.call(this) || this;
			return t.addEventListener(eui.UIEvent.COMPLETE, t.uiCompHandler, t),
			t.skinName = "resource/ui/main/FooterBarSkin.exml",
			t
		}
		return __extends(i, e),
		i.getInstance = function() {
			return this._instance || (this._instance = new i),
			this._instance
		}
		,
		i.prototype.uiCompHandler = function() {
			this.mbtnTrade.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.changeTab, this),
			this.mbtnMiJi.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.changeTab, this),
			this.mbtnJingJi.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.changeTab, this),
			this.mbtnAccount.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.changeTab, this),
			this.btns = [this.mbtnTrade, this.mbtnMiJi, this.mbtnJingJi, this.mbtnAccount],
			this.btns[0].enabled = !1,
			this.btns[0].selected = !0,
			this._mbtnFocused = this.btns[0],
			this.lastFocused = this.btns[0]
		}
		,
		i.prototype.changeTab = function(t) {
			this.goTo(t.currentTarget, !1)
		}
		,
		i.prototype.goTo = function(e, i) {
			if (e != this._mbtnFocused || i) {
				i || t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
				this._mbtnFocused = e;
				for (var n = this.btns.length - 1; n > -1; --n)
					this.btns[n] == this._mbtnFocused ? (this.btns[n].enabled = !1,
					this.btns[n].selected = !0) : (this.btns[n].selected = !1,
					this.btns[n].enabled = !0);
				this.lastFocused == this.mbtnJingJi && this._mbtnFocused != this.mbtnAccount && t.Invite.getInstance().destoryAll(),
				this.lastFocused == this.mbtnTrade && this._mbtnFocused != this.mbtnAccount && this._mbtnFocused != this.mbtnMiJi && t.HomePage.getInstance().destoryAll(),
				"TRADE" == this._mbtnFocused.name && (this.lastFocused = this.btns[0],
				t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_HOME)),
				"MIJI" == this._mbtnFocused.name && (this.lastFocused = this.btns[1],
				t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_USER_GUIDE)),
				"JINGJI" == this._mbtnFocused.name && (this.lastFocused = this.btns[2],
				t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_INVITE)),
				"ACCOUNT" == this._mbtnFocused.name && t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_USER_ACCOUNT, "FOOTER")
			}
		}
		,
		i.prototype.selectTab = function(t) {
			this._mbtnFocused = t,
			this.lastFocused = this._mbtnFocused;
			for (var e = this.btns.length - 1; e > -1; --e)
				this.btns[e] == this._mbtnFocused ? (this.btns[e].enabled = !1,
				this.btns[e].selected = !0) : (this.btns[e].selected = !1,
				this.btns[e].enabled = !0)
		}
		,
		i.prototype.partAdded = function(t, i) {
			e.prototype.partAdded.call(this, t, i)
		}
		,
		i.prototype.childrenCreated = function() {
			e.prototype.childrenCreated.call(this)
		}
		,
		i
	}(eui.Component);
	t.FooterBar = e,
	__reflect(e.prototype, "game.FooterBar", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i(t) {
			var i = e.call(this) || this;
			return i.BANKER_TIMES = 10,
			i.BANKER_STATUS_APPLY_OFF_BANKER = 1,
			i.BANKER_STATUS_BANKING = 2,
			i.BANKER_STATUS_PENDING = 3,
			i.BANKER_STATUS_QUIT = 4,
			i.BANKER_STATUS_REPLACED = 5,
			i.BANKER_STATUS_EXCEED_LIMIT = 6,
			i.BANKER_STATUS_CANCEL_APPLY = 7,
			i.currentNoticeIndex = 0,
			i.group_sit_array = Array(),
			i.group_odds_array = Array(),
			i.lb_bet_total_amount_array = Array(),
			i.bet_total_amount_array = Array(),
			i.lb_my_bet_amount_array = Array(),
			i.my_bet_amount_array = Array(),
			i.group_bet_array = Array(),
			i.can_bet = !1,
			i.win_amount = 0,
			i.host = GameConfig.SOCKET_HOST,
			i.port = GameConfig.SOCKET_PORT,
			i.diff = 30,
			i.change_inform = !1,
			i.bet_amount = 100,
			i.banker_queue_data = new Array,
			i.my_banker_queue_order = 0,
			i.is_banker = !1,
			i.gameSocketReady = !1,
			i.gameRoundReady = !1,
			i.timerCheckReadStatus = null,
			i.closeStatus = !1,
			i.userNoticeTimer = null,
			i.playNoticeSound = !0,
			i.totalBetAmount = 0,
			i.firstLoadingComplete = !1,
			i.checkBalanceTimer = null,
			i.canReconnect = !0,
			i.seats_trade = null,
			i.win_total_amount = 0,
			i.lose_total_amount = 0,
			i.total_bet_amount = 0,
			i.win_total_net_amount = 0,
			i.win_odds = null,
			i.seats_data = Array(),
			i.chip_array = [],
			i.type = 1,
			i.profit_8_array = [],
			i.setRoomType(t),
			i.addEventListener(eui.UIEvent.COMPLETE, i.uiCompHandler, i),
			i.skinName = "resource/ui/main/GameClassicalSimUISkin.exml",
			i
		}
		return __extends(i, e),
		i.getInstance = function(t, e) {
			return this._instance || t && (this._instance = new i(e)),
			this._instance
		}
		,
		i.prototype.setRoomType = function(t) {
			null != t && (this.game_model_type = t.game_model_type,
			this.room_id = t.game_room_id,
			this.capital = t.capital,
			this.is_sim = t.is_sim,
			this.change_inform = t.change_inform)
		}
		,
		i.prototype.uiCompHandler = function(t) {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this);
			window.removeEventListener("offline", this.offlineEvent),
			window.addEventListener("offline", this.offlineEvent),
			this.setClickListener(),
			this.subInit()
		}
		,
		i.prototype.offlineEvent = function() {
			Toast.launch("您当前的网络状态不稳定", -100),
			t.AppFacade.getInstance().sendNotification(MainNotify.CLOSE_GRAB);
			var e = {
				reload: !1,
				game_model_type: this.game_model_type
			};
			t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_CAPITAL_LIST, e)
		}
		,
		i.prototype.enterRoomFailed = function() {
			var t = this;
			t.closeLoading(t),
			t.destoryAll(),
			GameLayerManager.gameLayer().mainLayer.$children.length > 1 && GameLayerManager.gameLayer().mainLayer.removeChildAt(0),
			Toast.launch("进入房间失败,请稍后再试", -100)
		}
		,
		i.prototype.destoryAll = function() {
			t.AppFacade.getInstance().sendNotification(PanelNotify.CLOSE_BIG_WINNER),
			null != this.stage && this.stage.removeEventListener(egret.Event.ACTIVATE, this.onResume, this),
			this.firstLoadingComplete = !1,
			this.gameSocketReady = !1,
			this.gameRoundReady = !1,
			this._klineMasterBar.kline_socket && (this._klineMasterBar.kline_socket.klineSocketReady = !1),
			this.totalBetAmount = 0,
			this.host = GameConfig.SOCKET_HOST,
			this.port = GameConfig.SOCKET_PORT,
			this.groupHeader.removeChildren(),
			null != this.timerCheckReadStatus && void 0 != this.timerCheckReadStatus && clearInterval(this.timerCheckReadStatus),
			null != this.userNoticeTimer && void 0 != this.userNoticeTimer && clearInterval(this.userNoticeTimer),
			this.disconnectGameSocket(),
			null != this._klineMasterBar.kline_socket && void 0 != this._klineMasterBar.kline_socket && (this._klineMasterBar.kline_socket.disconnect(),
			this._klineMasterBar.kline_socket = null),
			this._klineMasterBar.removeSettleGroup(),
			this.closeStatus = !0,
			clearInterval(this.timer),
			this.timer = null,
			this.playNoticeSound = !1,
			this.current_banker = null,
			this.initBetTotalAmount(null),
			this.initMyBetAmount(),
			i._instance = null,
			t.SimKlineMasterBar._instance = null
		}
		,
		i.prototype.disconnectGameSocket = function() {
			null != this.game_socket && void 0 != this.game_socket && (this.canReconnect = !1,
			this.game_socket.disconnect(),
			this.game_socket = null)
		}
		,
		i.prototype.reOpen = function(t) {
			this.setRoomType(t),
			this.subInit(),
			this.closeStatus = !1
		}
		,
		i.prototype.subInit = function() {
			//return 
			this.user_info = Utils.getStorageObj(Keys.FK_UserInfo)
			if (!this.user_info) {
				this.destoryAll()
				void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN)
			} else {
				this.user_id = this.user_info.uid
				this.token = this.user_info.token

				if (null == this.user_id || null == this.token) {
					this.destoryAll()
					t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN)
				} else {
					this.lb_my_name.text = this.user_info.name
					this.initSocket()
					this.playNoticeSound = !0
					this.showLoading(this)
					this._headerBar = t.HeaderBarV3.getInstance(!0)
					this._headerBar.game_model_type = this.game_model_type
					this._headerBar.capital = this.capital
					this._headerBar.setIsSim(this.is_sim)
					this.groupHeader.addChild(this._headerBar)
					this._klineMasterBar = t.SimKlineMasterBar.getInstance(!0)
					this._klineMasterBar.user_id = this.user_id
					this._klineMasterBar.token = this.token
					this._klineMasterBar.x = 4
					this._klineMasterBar.y = 0
					this.kline_group.addChild(this._klineMasterBar)
					this.content_group.setChildIndex(this.kline_group, 99)
					this.content_group.setChildIndex(this.group_bet, 110)
					this.content_group.setChildIndex(this.group_you_win, 120)
					this.showUserNotice()
					this.content_group.setChildIndex(this.group_message_norice, 100)
					this.timerCheckReadStatus = setInterval(function(e) {
						if (e.gameSocketReady && e.gameRoundReady && e._klineMasterBar.kline_socket.getKlineSocketStatus()) {
							if (GameLayerManager.gameLayer().mainLayer.$children.length > 1) {
								GameLayerManager.gameLayer().mainLayer.removeChildAt(1)
								t.HeaderBarV3.getInstance(!0).showTopupAnimation()
							}
							if (!e.firstLoadingComplete) {
								e.firstLoadingComplete = !0,
								console.log("firstLoadingComplete")
								e.getBankers()
								e.getSeats()
								e.getEwallet()
								e.change_inform && e.showChangeInform()
							}
							e.closeLoading(e)
						} else {
							e.showLoading(e)
						}
					}, 1e3, this)
					this.userNoticeTimer = setInterval(function(t) {
						t.showUserNotice()
					}, 5500, this)
					this.getCapitalOddsList()
					this.initBetAmount()
					this.getMessageList()
				}
			}

		}
		,
		i.prototype.showChangeInform = function() {
			var e = "您已成功切换到模拟盘"
			  , i = [{
				text: e,
				style: {
					textColor: 16777215,
					size: 32
				}
			}]
			  , n = []
			  , a = new eui.Group;
			a.name = "childGroupTips",
			a.width = 520,
			a.height = 240,
			a.x = 75,
			a.y = 120;
			var s = new eui.Label
			  , o = new eui.Label;
			s.width = a.width,
			s.textAlign = egret.HorizontalAlign.CENTER,
			s.textFlow = i,
			o.width = a.width,
			o.textAlign = egret.HorizontalAlign.LEFT,
			o.multiline = !0,
			o.lineSpacing = 8,
			o.textFlow = n,
			s.y = (a.height - s.height - o.height - 5) / 2,
			o.height > 0 && (s.y = s.y - 15),
			s.height > 0 ? o.y = s.y + s.height : o.y = s.y + 30 + s.height,
			a.addChild(s),
			a.addChild(o);
			var r = {
				group: a,
				params: "",
				cancelable: !0
			};
			t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_TIP, r)
		}
		,
		i.prototype.initBetAmount = function() {
			this.bet_amount = 50,
			10 == this.bet_amount ? (this.btn_bet_amount_1.enabled = !1,
			this.btn_bet_amount_2.enabled = !0,
			this.btn_bet_amount_3.enabled = !0,
			this.btn_bet_amount_4.enabled = !0,
			this.lb_bet_amount_1.y = 522) : 50 == this.bet_amount ? (this.btn_bet_amount_1.enabled = !0,
			this.btn_bet_amount_2.enabled = !1,
			this.btn_bet_amount_3.enabled = !0,
			this.btn_bet_amount_4.enabled = !0,
			this.lb_bet_amount_2.y = 522) : 100 == this.bet_amount ? (this.btn_bet_amount_1.enabled = !0,
			this.btn_bet_amount_2.enabled = !0,
			this.btn_bet_amount_3.enabled = !1,
			this.btn_bet_amount_4.enabled = !0,
			this.lb_bet_amount_3.y = 522) : 500 == this.bet_amount && (this.btn_bet_amount_1.enabled = !0,
			this.btn_bet_amount_2.enabled = !0,
			this.btn_bet_amount_3.enabled = !0,
			this.btn_bet_amount_4.enabled = !1,
			this.lb_bet_amount_4.y = 522)
		}
		,
		i.prototype.showUserNotice = function() {
			var t = this
			  , e = null;
			return 0 == Main.noticeList.length ? void (this.currentNoticeIndex = 0) : (this.currentNoticeIndex >= Main.noticeList.length && (this.currentNoticeIndex = 0),
			e = Main.noticeList[this.currentNoticeIndex],
			void (null != e && (1 == e.type ? this.lb_notice.text = e.name + ": " + e.message : this.lb_notice.text = e.message,
			this.lb_notice.x = 719,
			egret.Tween.get(this.lb_notice, {
				loop: !1
			}).to({
				x: -1 * this.lb_notice.width
			}, 5e3).call(function() {
				if (null != Main.noticeList[t.currentNoticeIndex] && (Main.noticeList[t.currentNoticeIndex].is_show = !0,
				t.currentNoticeIndex++,
				Main.noticeList.length > 20))
					for (var e = 0; e < Main.noticeList.length - 20; e++)
						Main.noticeList[e].is_show && Main.noticeList.splice(e, 1)
			}))))
		}
		,
		i.prototype.setClickListener = function() {
			var e = this;
			this.btn_banker.addEventListener(egret.TouchEvent.TOUCH_TAP, this.Banker, this),
			this.btn_bet_amount_1.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeBetAmount, this),
			this.btn_bet_amount_2.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeBetAmount, this),
			this.btn_bet_amount_3.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeBetAmount, this),
			this.btn_bet_amount_4.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeBetAmount, this),
			this.group_banker_help.addEventListener(egret.TouchEvent.TOUCH_END, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
				t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_HEPL_DIALOG)
			}, this),
			this.img_notice.addEventListener(egret.TouchEvent.TOUCH_BEGIN, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
				t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_USER_NOTICE)
			}, this),
			this.btnBankerTipToup.addEventListener(egret.TouchEvent.TOUCH_BEGIN, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
				e.groupBankerTip.visible = !1,
				t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_SHOP, "G")
			}, this),
			this.imgBankerTipClose.addEventListener(egret.TouchEvent.TOUCH_BEGIN, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
				e.groupBankerTip.visible = !1
			}, this),
			this.img_history.addEventListener(egret.TouchEvent.TOUCH_BEGIN, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1);
				var e = "Y";
				t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_MY_CLASSICAL_SETTLE_HISTORY, e)
			}, this),
			this.group_history.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1);
				var i = {
					room_id: e.room_id
				};
				t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_CLASSICAL_HISTORY, i)
			}, this)
		}
		,
		i.prototype.changeBetAmount = function(e) {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().change_bet_amount_sound_ready && t.SceneTrade.getInstance().change_bet_amount_sound.play(0, 1),
			this.bet_amount = e.currentTarget.name,
			10 == this.bet_amount ? (this.btn_bet_amount_1.enabled = !1,
			this.btn_bet_amount_2.enabled = !0,
			this.btn_bet_amount_3.enabled = !0,
			this.btn_bet_amount_4.enabled = !0,
			this.lb_bet_amount_1.y = 522,
			this.lb_bet_amount_2.y = 512,
			this.lb_bet_amount_3.y = 512,
			this.lb_bet_amount_4.y = 512) : 50 == this.bet_amount ? (this.btn_bet_amount_1.enabled = !0,
			this.btn_bet_amount_2.enabled = !1,
			this.btn_bet_amount_3.enabled = !0,
			this.btn_bet_amount_4.enabled = !0,
			this.lb_bet_amount_1.y = 512,
			this.lb_bet_amount_2.y = 522,
			this.lb_bet_amount_3.y = 512,
			this.lb_bet_amount_4.y = 512) : 100 == this.bet_amount ? (this.btn_bet_amount_1.enabled = !0,
			this.btn_bet_amount_2.enabled = !0,
			this.btn_bet_amount_3.enabled = !1,
			this.btn_bet_amount_4.enabled = !0,
			this.lb_bet_amount_1.y = 512,
			this.lb_bet_amount_2.y = 512,
			this.lb_bet_amount_3.y = 522,
			this.lb_bet_amount_4.y = 512) : 500 == this.bet_amount && (this.btn_bet_amount_1.enabled = !0,
			this.btn_bet_amount_2.enabled = !0,
			this.btn_bet_amount_3.enabled = !0,
			this.btn_bet_amount_4.enabled = !1,
			this.lb_bet_amount_1.y = 512,
			this.lb_bet_amount_2.y = 512,
			this.lb_bet_amount_3.y = 512,
			this.lb_bet_amount_4.y = 522)
		}
		,
		i.prototype.addActivate = function() {
			null != this.stage && (this.stage.removeEventListener(egret.Event.ACTIVATE, this.onResume, this),
			this.stage.addEventListener(egret.Event.ACTIVATE, this.onResume, this))
		}
		,
		i.prototype.onResume = function() {
			this.getLatestRoundDetail(),
			this.getBankers()
		}
		,
		i.prototype.getSettleResult = function(t) {
			var e = (t.period,
			t.win_odds);
			this.showSettleResult(e)
		}
		,
		i.prototype.showSettleResult = function(e, i) {
			void 0 === i && (i = !0),
			this.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().settle_result_sound_ready && t.SceneTrade.getInstance().settle_result_sound.play(0, 1);
			for (var n = this, a = null, s = null, o = 0; o < e.length; o++) {
				var r = e[o].order;
				0 == o ? a = e[o].id : s = e[o].id;
				var l = ""
				  , h = 0
				  , d = 0;
				if (0 == r || 2 == r ? (l = "rect_red_green_png",
				h = 219,
				d = 232) : 1 == r ? (l = "rect_equal_png",
				h = 131,
				d = 144) : (l = "rect_single_double_png",
				h = 151,
				d = 234),
				null == this.rect1) {
					this.rect1 = new eui.Image,
					this.rect1.source = RES.getRes(l),
					this.rect1.width = h,
					this.rect1.height = d,
					this.rect1.x = -8,
					this.rect1.y = -10,
					1 == r && (this.rect1.x = -3,
					this.rect1.y = -2),
					this.rect1.name = "rect";
					var _ = this.group_odds_array[e[o].id];
					_.addChild(this.rect1)
				} else {
					this.rect2 = new eui.Image,
					this.rect2.source = RES.getRes(l),
					this.rect2.width = h,
					this.rect2.height = d,
					this.rect2.x = -8,
					this.rect2.y = -10,
					1 == r && (this.rect1.x = -3,
					this.rect1.y = -2),
					this.rect2.name = "rect";
					var _ = this.group_odds_array[e[o].id];
					_.addChild(this.rect2)
				}
			}
			for (var p in this.group_bet_array) {
				var u = new eui.Image;
				p == a || p == s ? (u.source = RES.getRes("icon_classical_win_png"),
				u.width = 67,
				u.height = 75) : (u.source = RES.getRes("icon_classical_lose_png"),
				u.width = 49,
				u.height = 78),
				u.x = (this.group_bet_array[p].width - u.width) / 2,
				u.y = (this.group_bet_array[p].height - u.height) / 2,
				u.name = "img_settle",
				this.group_bet_array[p].addChild(u)
			}
			this.addEventListener(egret.Event.ENTER_FRAME, this.rectAnimation, this),
			setTimeout(function() {
				n.removeEventListener(egret.Event.ENTER_FRAME, this.rectAnimation, this);
				for (var t = 0; t < e.length; t++) {
					var i = n.group_odds_array[e[t].id];
					null != n.rect1 && i.contains(n.rect1) && (i.removeChild(n.rect1),
					n.rect1 = null),
					null != n.rect2 && i.contains(n.rect2) && (i.removeChild(n.rect2),
					n.rect2 = null)
				}
				for (var a in n.group_bet_array) {
					var s = n.group_bet_array[a].getChildByName("img_settle");
					null != s && n.group_bet_array[a].removeChild(s)
				}
			}, 5e3)
		}
		,
		i.prototype.showLoading = function(t) {
			if (null == t.loading_group) {
				t.loading_group = new eui.Group,
				t.loading_group.width = 719,
				t.loading_group.height = 1199,
				t.loading_group.verticalCenter = .5,
				t.loading_group.horizontalCenter = .5;
				var e = new egret.Sprite;
				e.graphics.clear(),
				e.graphics.beginFill(0, .6),
				e.graphics.drawRect(0, 0, GameConfig.curWidth(), GameConfig.curHeight()),
				e.graphics.endFill(),
				e.width = GameConfig.curWidth(),
				e.height = GameConfig.curHeight(),
				e.touchEnabled = !0,
				egret.Tween.get(e).to({
					alpha: 1
				}, 150),
				e.visible = !0,
				t.loading_group.addChild(e),
				null == t.loading_image && (t.loading_image = new eui.Image),
				t.loading_image.verticalCenter = .5,
				t.loading_image.horizontalCenter = .5,
				t.loading_image.source = RES.getRes("loading_run_png"),
				t.loading_image.anchorOffsetX = .5 * t.loading_image.width,
				t.loading_image.anchorOffsetY = .5 * t.loading_image.height,
				t.loading_group.addChild(t.loading_image)
			}
			GameLayerManager.gameLayer().effectLayer.contains(t.loading_group) || (GameLayerManager.gameLayer().effectLayer.addChild(t.loading_group),
			GameLayerManager.gameLayer().effectLayer.addEventListener(egret.Event.ENTER_FRAME, t.runLoading, t))
		}
		,
		i.prototype.runLoading = function(t) {
			this.loading_image.rotation += 3
		}
		,
		i.prototype.closeLoading = function(t) {
			GameLayerManager.gameLayer().effectLayer.contains(t.loading_group) && GameLayerManager.gameLayer().effectLayer.removeChild(t.loading_group),
			GameLayerManager.gameLayer().effectLayer.removeEventListener(egret.Event.ENTER_FRAME, t.runLoading, t)
		}
		,
		i.prototype.showStartBetNotice = function(e) {
			this.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().start_bet_sound_ready && t.SceneTrade.getInstance().start_bet_sound.play(0, 1);
			var i = new eui.Group
			  , n = new eui.Image;
			n.source = RES.getRes("icon_start_bet_png"),
			n.horizontalCenter = .5,
			n.verticalCenter = .5,
			n.height = 0,
			i.addChild(n),
			i.horizontalCenter = .5,
			i.y = 500,
			i.height = 642,
			i.width = 153,
			e.addChild(i),
			e.setChildIndex(i, 100),
			e.setChildIndex(e.groupBankerTip, 101),
			egret.Tween.get(n).to({
				height: 153
			}, 150),
			setTimeout(function(t) {
				egret.Tween.get(n).to({
					height: 0
				}, 150).call(function() {
					t.removeChild(i)
				})
			}, 1500, e)
		}
		,
		i.prototype.showTimeDownNotice = function(e) {
			var i = new eui.Group
			  , n = new eui.Image;
			n.source = RES.getRes("timer_down_num_3_png"),
			n.horizontalCenter = .5,
			n.verticalCenter = .5,
			n.height = 0,
			n.width = 330,
			i.addChild(n),
			i.horizontalCenter = .5,
			i.y = 180,
			i.height = 330,
			i.width = 330,
			e.addChild(i),
			e.setChildIndex(i, 100),
			e.setChildIndex(e.groupBankerTip, 101),
			e.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().count_down_sound_ready && t.SceneTrade.getInstance().count_down_sound.play(0, 1),
			egret.Tween.get(n).to({
				height: 330
			}, 150),
			setTimeout(function(e) {
				egret.Tween.get(n).to({
					height: 0
				}, 150).call(function() {
					e.removeChild(i),
					n.source = RES.getRes("timer_down_num_2_png"),
					i.addChild(n),
					e.addChild(i),
					e.setChildIndex(i, 100),
					e.setChildIndex(e.groupBankerTip, 101),
					e.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().count_down_sound_ready && t.SceneTrade.getInstance().count_down_sound.play(0, 1),
					egret.Tween.get(n).to({
						height: 330
					}, 150),
					setTimeout(function(e) {
						egret.Tween.get(n).to({
							height: 0
						}, 150).call(function() {
							e.removeChild(i),
							n.source = RES.getRes("timer_down_num_1_png"),
							i.addChild(n),
							e.addChild(i),
							e.setChildIndex(i, 100),
							e.setChildIndex(e.groupBankerTip, 101),
							e.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().count_down_sound_ready && t.SceneTrade.getInstance().count_down_sound.play(0, 1),
							egret.Tween.get(n).to({
								height: 330
							}, 150),
							setTimeout(function(t) {
								egret.Tween.get(n).to({
									height: 0
								}, 150).call(function() {
									t.removeChild(i)
								})
							}, 850, e)
						})
					}, 850, e)
				})
			}, 850, e)
		}
		,
		i.prototype.showStopBetNotice = function(e) {
			e.lb_win_amount.text = "0",
			this.contains(this.stopbet_group) && this.removeChild(this.stopbet_group),
			this.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().stop_bet_sound_ready && (t.SceneTrade.getInstance().stop_bet_clock.play(0, 1),
			t.SceneTrade.getInstance().stop_bet_sound.play(0, 1)),
			this.stopbet_group = new eui.Group;
			var i = new eui.Image;
			i.source = RES.getRes("icon_stop_bet_png"),
			i.horizontalCenter = .5,
			i.verticalCenter = .5,
			i.height = 0,
			this.stopbet_group.addChild(i),
			this.stopbet_group.horizontalCenter = .5,
			this.stopbet_group.y = 500,
			this.stopbet_group.height = 642,
			this.stopbet_group.width = 153,
			this.addChild(this.stopbet_group),
			this.setChildIndex(this.stopbet_group, 100),
			this.setChildIndex(this.groupBankerTip, 101),
			egret.Tween.get(i).to({
				height: 153
			}, 150),
			setTimeout(function(t) {
				egret.Tween.get(i).to({
					height: 0
				}, 150).call(function() {
					t.contains(t.stopbet_group) && t.removeChild(t.stopbet_group)
				})
			}, 1500, e)
		}
		,
		i.prototype.showBurstBankerNotice = function() {
			this.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().burst_banker_sound_ready && t.SceneTrade.getInstance().burst_banker_sound.play(0, 1);
			var e = this
			  , i = new eui.Image;
			i.source = RES.getRes("burst_png"),
			i.alpha = 0,
			i.scaleX = .5,
			i.scaleY = .5,
			i.width = 600,
			i.height = 624,
			i.x = (this.width - i.width) / 2,
			i.y = (this.height - i.height) / 2,
			i.horizontalCenter = "0",
			i.verticalCenter = "0",
			e.addChild(i),
			e.setChildIndex(i, 100),
			e.setChildIndex(e.groupBankerTip, 101),
			egret.Tween.get(i).to({
				alpha: 1,
				scaleX: 1,
				scaleY: 1
			}, 700, egret.Ease.backOut),
			setTimeout(function(t) {
				t.removeChild(i)
			}, 700, e)
		}
		,
		i.prototype.initSocket = function() {
			console.log("initSocket");
			var t = this;
			this.queryEntry(this.user_id, function(e, i) {
				t.host = e,
				t.port = i,
				t.firstInit()
			})
		}
		,
		i.prototype.queryEntry = function(t, e) {
			var i = new pomeloClient.Pomelo;
			i.on(CONST.CommonCommand.io_error, function() {}),
			i.init({
				host: GameConfig.SOCKET_HOST,
				port: GameConfig.SOCKET_PORT
			}, function() {
				var n = {
					uid: t,
					type: "game"
				};
				i.request(CONST.CommonCommand.gate, n),
				i.on(CONST.CommonCommand.gate, function(t) {
					i.disconnect(),
					500 != t.code && e(t.host, t.port)
				})
			})
		}
		,
		i.prototype.firstInit = function() {
			console.log("firstInit");
			var e = this;
			(null == this.game_socket || 0 == this.game_socket.connected()) && (null != this.game_socket && (this.game_socket.removeAllListeners(),
			this.disconnectGameSocket()),
			this.game_socket = new pomeloClient.Pomelo),
			this.game_socket.init({
				host: this.host,
				port: this.port
			}, function() {
				console.log("this.game_socket.init"),
				e.game_socket.request(CONST.GameCommand.init, {
					room_id: e.room_id,
					user_id: e.user_id,
					token: e.user_info.access_token
				})
			}),
			this.game_socket.on(CONST.GameCommand.init, function(t) {
				200 == t.code ? (e.gameSocketReady = !0,
				console.log("game ready"),
				e.canReconnect = !0,
				e.getLatestRoundDetail()) : e.enterRoomFailed()
			}),
			this.game_socket.on(CONST.CommonCommand.close, function() {
				e.gameSocketReady = !1,
				console.log("game socket closed"),
				e.canReconnect && setTimeout(function() {
					e.firstInit()
				}, 3e3)
			}),
			this.game_socket.on(CONST.CommonCommand.heartbeat_timeout, function() {
				e.gameSocketReady = !1
			}),
			this.game_socket.on(CONST.CommonCommand.io_error, function() {
				e.gameSocketReady = !1,
				console.error("game socket error"),
				setTimeout(function() {
					e.firstInit()
				}, 3e3)
			}),
			this.game_socket.on(CONST.GameCommand.new_banker, function(t) {
				e.getBankers()
			}),
			this.game_socket.on(CONST.GameCommand.off_banker, function(t) {
				e.getBankers()
			}),
			this.game_socket.on(CONST.GameCommand.new_round, function(t) {
				e.getBankers(),
				e._klineMasterBar.removeSettleGroup(),
				t = JSON.parse(t),
				null != t.online_num && e.updateOnlineNum(t.online_num),
				e.initBetTotalAmount(null),
				e.initMyBetAmount(),
				null != t && (e.round_id = t.id,
				e.server_time = t.server_time,
				e.start_time = t.start_time,
				e.end_time = t.end_time,
				e.updateTimer(e, null, null),
				e.showStartBetNotice(e))
			}),
			this.game_socket.on(CONST.GameCommand.new_trade_grab, function(t) {
				t = JSON.parse(t),
				null != t && e.updateBetTotalAmount(t)
			}),
			this.game_socket.on(CONST.GameCommand.create_trade, function(i) {
				i = i.body,
				i = JSON.parse(i),
				1 == i.status ? (e.betChipAnima(e.lb_my_balance.x, e.lb_my_balance.y, i.trade_amount, i.capital_odds_id),
				e.updateMyBetAmount(i.capital_odds_id, i.trade_amount),
				e.updateBetTotalAmountForSelf(i.capital_odds_id, i.trade_amount),
				e.gold_balance = i.balance,
				e.lb_my_balance.text = Utils.moneyFormat(e.gold_balance, 2).toString(),
				e._headerBar.updateBalance(e.gold_balance)) : 0 == i.status ? Toast.launch(i.message, -100) : -1 == i.status && (e.destoryAll(),
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN))
			}),
			this.game_socket.on(CONST.GameCommand.seat_trade, function(t) {
				if (t = t.body,
				t = JSON.parse(t),
				1 == t.status) {
					var i = t.user_id
					  , n = t.seat_type
					  , a = e.group_sit_array[n - 1].getChildByName("seat_balance");
					i != e.user_id ? (e.betChipAnima(e.group_sit_array[n - 1].x, e.group_sit_array[n - 1].y, t.trade_amount, t.capital_odds_id),
					e.updateBetTotalAmountForSelf(t.capital_odds_id, t.trade_amount),
					null != a && (a.text = Utils.moneyFormat(t.balance, 2))) : null != a && (a.text = Utils.moneyFormat(e.gold_balance, 2))
				}
			}),
			this.game_socket.on(CONST.GameCommand.begin_settle_grab, function(t) {
				t = JSON.parse(t),
				null != t && (t.burst_banker && e.showBurstBankerNotice(),
				e.seats_trade = t.seats_trade,
				e.win_total_amount = t.win_total_amount,
				e.lose_total_amount = t.lose_total_amount,
				e.total_bet_amount = t.total_bet_amount,
				e.win_odds = t.win_odds,
				e.win_total_net_amount = t.win_total_net_amount,
				e.chipFromBetToBanker(e.win_odds))
			}),
			this.game_socket.on(CONST.GameCommand.new_settle_grab, function(t) {
				if (t = JSON.parse(t),
				null != t) {
					var i = t.profit;
					if (i > 0) {
						Utils.moneyFormat(i, 2)
					}
					e.win_amount = i,
					e.getEwallet()
				}
			}),
			this.game_socket.on(CONST.GameCommand.big_winner, function(i) {
				i = JSON.parse(i),
				null != i.big_winner && (t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_BIG_WINNER, i.big_winner),
				setTimeout(function() {
					t.AppFacade.getInstance().sendNotification(PanelNotify.CLOSE_BIG_WINNER)
				}, 8e3),
				e.calculateProfit(e.win_odds, i.big_winner))
			}),
			this.game_socket.on(CONST.GameCommand.apply_banker, function(t) {
				e.getBankers()
			}),
			this.game_socket.on(CONST.GameCommand.off_banker_queue, function(t) {
				e.getBankers()
			}),
			this.game_socket.on(CONST.GameCommand.get_pots, function(t) {
				null != t && (t = t.body,
				t = JSON.parse(t),
				1 == t.status && (null != t.result ? (e.pots_balance = t.result.balance,
				e.showPots()) : e.pots_balance = 0))
			}),
			this.game_socket.on(CONST.GameCommand.get_banker, function(t) {
				if (null != t) {
					if (t = t.body,
					t = JSON.parse(t),
					e.current_banker = null,
					e.banker_queue_data = null,
					e.banker_queue_data = new Array,
					1 == t.status) {
						var i = t.result.bankers;
						if (null != i && i.length > 0) {
							e.my_banker_queue_order = 0;
							for (var n = 0; n < i.length; n++) {
								var a = i[n];
								a.status == e.BANKER_STATUS_APPLY_OFF_BANKER || a.status == e.BANKER_STATUS_BANKING ? e.current_banker = a : a.status == e.BANKER_STATUS_PENDING && (e.banker_queue_data.push({
									balance: a.balance,
									user_name: a.name,
									user_avatar: a.avatar_url,
									vip_grade: a.vip_grade
								}),
								a.user_id == e.user_id && (e.my_banker_queue_order = n))
							}
						}
						e.is_banker = !1;
						var s = null;
						null != t.result.status && "" != t.result.status && (s = t.result.status.status),
						null != s && "" != s ? s == e.BANKER_STATUS_PENDING ? (e.btn_banker.img.texture = RES.getRes("btn_off_banker_png"),
						e.btn_banker.name = "1",
						0 == e.my_banker_queue_order && (e.my_banker_queue_order = 11)) : s == e.BANKER_STATUS_BANKING ? (e.btn_banker.img.texture = RES.getRes("btn_off_banker_png"),
						e.is_banker = !0,
						e.btn_banker.name = "1") : s == e.BANKER_STATUS_APPLY_OFF_BANKER && (e.btn_banker.img.texture = RES.getRes("btn_apply_banker_png"),
						e.is_banker = !0,
						e.btn_banker.name = "0") : (e.btn_banker.img.texture = RES.getRes("btn_apply_banker_png"),
						e.btn_banker.name = "0")
					} else
						e.btn_banker.img.texture = RES.getRes("btn_apply_banker_png"),
						e.btn_banker.name = "0";
					null != e.current_banker ? e.showBanker() : e.getPots(),
					e.getEwallet()
				}
			}),
			this.game_socket.on(CONST.GameCommand.get_ewallet, function(t) {
				if (null != t && (t = t.body,
				t = JSON.parse(t),
				1 == t.status)) {
					var i = t.result;
					i.length > 0 && (e.gold_balance = i[0].balance,
					e.win_amount <= 0 ? e.lb_my_balance.text = Utils.moneyFormat(e.gold_balance, 2).toString() : e.showWinAmount(e),
					e._headerBar.updateBalance(i[0].balance))
				}
			}),
			this.game_socket.on(CONST.GameCommand.sitdown, function(t) {
				null != t && (t = t.body,
				t = JSON.parse(t),
				1 == t.status ? e.getEwallet() : Toast.launch(t.message, -100))
			}),
			this.game_socket.on(CONST.GameCommand.standup, function(t) {}),
			this.game_socket.on(CONST.GameCommand.get_seats, function(t) {
				null != t && (t = t.body,
				t = JSON.parse(t),
				1 == t.status ? e.seats_data = t.result : e.seats_data = null,
				e.refreshSeats())
			}),
			this.game_socket.on(CONST.GameCommand.capital_close, function(e) {
				e = JSON.parse(e),
				Toast.launch("该资产已休市，游戏关闭", 0),
				setTimeout(function() {
					t.SceneTrade.getInstance().stopGrabSound(),
					t.SceneTrade.getInstance().playBgSound(),
					t.AppFacade.getInstance().sendNotification(MainNotify.CLOSE_CLASSICAL);
					var i = {
						reload: !0,
						game_model_type: e.game_model_type
					};
					t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_CAPITAL_LIST, i),
					t.HeaderBar.getInstance(!0).loadEwallet()
				}, 3e3)
			})
		}
		,
		i.prototype.showWinAmount = function(t) {
			parseFloat(t.win_amount);
			t.win_amount > 0 && (t.lb_win_amount.text = parseFloat(parseFloat(t.win_amount).toFixed(0)).toString(),
			t.win_amount = 0)
		}
		,
		i.prototype.showYouWin = function(t, e) {
			var i = this;
			this.lb_you_win_name.visible = !0
			this.lb_you_win_amount_1.visible = !0
			this.lb_you_win_amount_2.visible = !0
			this.lb_you_win_amount_2.text = "+ " + parseFloat(t)
			null != e ? (this.lb_you_win_name.text = Utils.getLimitUserName(e.name, 12),
			null != e.profit && "" != e.profit ? this.lb_you_win_amount_1.text = "+" + parseFloat(e.profit) : this.lb_you_win_amount_1.text = "") : (this.lb_you_win_name.text = "",
			this.lb_you_win_amount_1.text = ""),
			this.lb_you_win_amount_1.x = this.lb_you_win_name.x + this.lb_you_win_name.width + 20,
			void 0 == e.avatar_url || null == e.avatar_url || "" == e.avatar_url ? (this.img_you_win_avatar.source = RES.getRes("person_png"),
			this.img_you_win_avatar.visible = !0) : this.loadYouWinImage(e.avatar_url),
			this.group_you_win.visible = !0,
			egret.Tween.get(this.bg_you_win).to({
				height: 350
			}, 150),
			setTimeout(function() {
				i.lb_you_win_name.visible = !1,
				i.img_you_win_avatar.visible = !1,
				i.lb_you_win_amount_1.visible = !1,
				i.lb_you_win_amount_2.visible = !1,
				egret.Tween.get(i.bg_you_win).to({
					height: 0
				}, 150).call(function() {
					i.group_you_win.visible = !1
				})
			}, 3e3, i)
		}
		,
		i.prototype.loadYouWinImage = function(t) {
			var e = new egret.ImageLoader;
			e.addEventListener(egret.Event.COMPLETE, this.youWinImageLoadCompleteHandler, this),
			e.load(t)
		}
		,
		i.prototype.youWinImageLoadCompleteHandler = function(t) {
			var e = t.currentTarget;
			this.img_you_win_avatar.bitmapData = e.data,
			this.img_you_win_avatar.visible = !0
		}
		,
		i.prototype.initKline = function() {
			this._klineMasterBar.setOptions({
				Capital: this.capital,
				Diff: 30,
				odds: this.capital_odds
			}),
			this._klineMasterBar.initSocket()
		}
		,
		i.prototype.updateKline = function() {
			var t = this._klineMasterBar.getOptions();
			this._klineMasterBar.setOptions({
				Capital: this.capital,
				Diff: t.Diff
			}),
			this._klineMasterBar.initKlineSocket(this.capital, t.Diff)
		}
		,
		i.prototype.initIntervalOdds = function() {
			if (null != this.capital_odds) {
				this.group_sit_array[0] = this.group_sit_0,
				this.group_sit_array[1] = this.group_sit_1,
				this.group_sit_array[2] = this.group_sit_2,
				this.group_sit_array[3] = this.group_sit_3,
				this.group_sit_array[4] = this.group_sit_4,
				this.group_sit_array[5] = this.group_sit_5;
				for (var t in this.group_sit_array)
					this.group_sit_array[t].addEventListener(egret.TouchEvent.TOUCH_TAP, this.sitDown, this);
				this.lb_bet_total_amount_array[this.capital_odds[0].id] = this.lb_bet_total_amount_0,
				this.lb_bet_total_amount_array[this.capital_odds[1].id] = this.lb_bet_total_amount_1,
				this.lb_bet_total_amount_array[this.capital_odds[2].id] = this.lb_bet_total_amount_2,
				this.lb_bet_total_amount_array[this.capital_odds[3].id] = this.lb_bet_total_amount_3,
				this.lb_bet_total_amount_array[this.capital_odds[4].id] = this.lb_bet_total_amount_4,
				this.lb_bet_total_amount_array[this.capital_odds[5].id] = this.lb_bet_total_amount_5,
				this.lb_bet_total_amount_array[this.capital_odds[6].id] = this.lb_bet_total_amount_6,
				this.bet_total_amount_array[this.capital_odds[0].id] = 0,
				this.bet_total_amount_array[this.capital_odds[1].id] = 0,
				this.bet_total_amount_array[this.capital_odds[2].id] = 0,
				this.bet_total_amount_array[this.capital_odds[3].id] = 0,
				this.bet_total_amount_array[this.capital_odds[4].id] = 0,
				this.bet_total_amount_array[this.capital_odds[5].id] = 0,
				this.bet_total_amount_array[this.capital_odds[6].id] = 0,
				this.lb_my_bet_amount_array[this.capital_odds[0].id] = this.lb_my_bet_0,
				this.lb_my_bet_amount_array[this.capital_odds[1].id] = this.lb_my_bet_1,
				this.lb_my_bet_amount_array[this.capital_odds[2].id] = this.lb_my_bet_2,
				this.lb_my_bet_amount_array[this.capital_odds[3].id] = this.lb_my_bet_3,
				this.lb_my_bet_amount_array[this.capital_odds[4].id] = this.lb_my_bet_4,
				this.lb_my_bet_amount_array[this.capital_odds[5].id] = this.lb_my_bet_5,
				this.lb_my_bet_amount_array[this.capital_odds[6].id] = this.lb_my_bet_6,
				this.my_bet_amount_array[this.capital_odds[0].id] = 0,
				this.my_bet_amount_array[this.capital_odds[1].id] = 0,
				this.my_bet_amount_array[this.capital_odds[2].id] = 0,
				this.my_bet_amount_array[this.capital_odds[3].id] = 0,
				this.my_bet_amount_array[this.capital_odds[4].id] = 0,
				this.my_bet_amount_array[this.capital_odds[5].id] = 0,
				this.my_bet_amount_array[this.capital_odds[6].id] = 0,
				this.group_odds_0.name = this.capital_odds[0].id,
				this.group_odds_1.name = this.capital_odds[1].id,
				this.group_odds_2.name = this.capital_odds[2].id,
				this.group_odds_3.name = this.capital_odds[3].id,
				this.group_odds_4.name = this.capital_odds[4].id,
				this.group_odds_5.name = this.capital_odds[5].id,
				this.group_odds_6.name = this.capital_odds[6].id,
				this.group_odds_array[this.capital_odds[0].id] = this.group_odds_0,
				this.group_odds_array[this.capital_odds[1].id] = this.group_odds_1,
				this.group_odds_array[this.capital_odds[2].id] = this.group_odds_2,
				this.group_odds_array[this.capital_odds[3].id] = this.group_odds_3,
				this.group_odds_array[this.capital_odds[4].id] = this.group_odds_4,
				this.group_odds_array[this.capital_odds[5].id] = this.group_odds_5,
				this.group_odds_array[this.capital_odds[6].id] = this.group_odds_6,
				this.group_bet_array[this.capital_odds[0].id] = this.group_odds_0,
				this.group_bet_array[this.capital_odds[1].id] = this.group_odds_1,
				this.group_bet_array[this.capital_odds[2].id] = this.group_odds_2,
				this.group_bet_array[this.capital_odds[3].id] = this.group_odds_3,
				this.group_bet_array[this.capital_odds[4].id] = this.group_odds_4,
				this.group_bet_array[this.capital_odds[5].id] = this.group_odds_5,
				this.group_bet_array[this.capital_odds[6].id] = this.group_odds_6;
				for (var e in this.group_bet_array)
					this.group_bet_array[e].addEventListener(egret.TouchEvent.TOUCH_TAP, this.bet, this);
				this.lb_bet_total_amount_0.name = this.capital_odds[0].id,
				this.lb_bet_total_amount_1.name = this.capital_odds[1].id,
				this.lb_bet_total_amount_2.name = this.capital_odds[2].id,
				this.lb_bet_total_amount_3.name = this.capital_odds[3].id,
				this.lb_bet_total_amount_4.name = this.capital_odds[4].id,
				this.lb_bet_total_amount_5.name = this.capital_odds[5].id,
				this.lb_bet_total_amount_6.name = this.capital_odds[6].id,
				this.lb_my_bet_0.name = this.capital_odds[0].id,
				this.lb_my_bet_1.name = this.capital_odds[1].id,
				this.lb_my_bet_2.name = this.capital_odds[2].id,
				this.lb_my_bet_3.name = this.capital_odds[3].id,
				this.lb_my_bet_4.name = this.capital_odds[4].id,
				this.lb_my_bet_5.name = this.capital_odds[5].id,
				this.lb_my_bet_6.name = this.capital_odds[6].id,
				this.profit_8_array[0] = [],
				this.profit_8_array[1] = [],
				this.profit_8_array[2] = [],
				this.profit_8_array[3] = [],
				this.profit_8_array[4] = [],
				this.profit_8_array[5] = [],
				this.profit_8_array[6] = [],
				this.profit_8_array[7] = []
			}
		}
		,
		i.prototype.startBet = function(t) {
			t.can_bet = !0
		}
		,
		i.prototype.stopBet = function(t) {
			t.can_bet = !1
		}
		,
		i.prototype.initBetTotalAmount = function(t) {
			for (var e in this.lb_bet_total_amount_array)
				this.lb_bet_total_amount_array[e].text = "";
			for (var i in this.bet_total_amount_array)
				this.bet_total_amount_array[i] = 0;
			if (this.totalBetAmount = 0,
			this.clearChip(),
			null != t)
				for (var n = 0; n < t.length; n++) {
					var a = t[n];
					if (this.bet_total_amount_array[a.capital_odds_id] = parseFloat(this.bet_total_amount_array[a.capital_odds_id]) + parseFloat(a.total_amount),
					this.lb_bet_total_amount_array[a.capital_odds_id].text = Utils.moneyFormat(this.bet_total_amount_array[a.capital_odds_id], 2),
					this.totalBetAmount += parseFloat(a.total_amount),
					a.total_amount > 0)
						for (var s = this.splitTradeChip(null, null, null, null, a.total_amount, a.capital_odds_id), o = 0; o < s.length; o++) {
							var r = s[o];
							r.x = r.end_x,
							r.y = r.end_y,
							this.group_bet.addChild(r)
						}
				}
			this._klineMasterBar.updateTotalBetAmount(this.totalBetAmount)
		}
		,
		i.prototype.updateBetTotalAmount = function(t) {
			if (null != t && t.length > 0) {
				this.totalBetAmount = 0;
				for (var e in t) {
					var i = t[e].id
					  , n = t[e].amount;
					if (this.totalBetAmount = this.totalBetAmount + parseFloat(n),
					(null == this.bet_total_amount_array[i] || "" == this.bet_total_amount_array[i]) && (this.bet_total_amount_array[i] = 0),
					n > this.bet_total_amount_array[i]) {
						this.onlineGroupBetAnima();
						var a = this.splitTradeChip(this.group_online.x, this.group_online.y, null, null, n - this.bet_total_amount_array[i], i)
						  , s = 0;
						this.flyChipArray(a, this.group_bet, 0, s, !1, 400, null)
					}
					this.bet_total_amount_array[i] = parseFloat(n),
					null != this.lb_bet_total_amount_array[i] && (this.lb_bet_total_amount_array[i].text = Utils.moneyFormat(this.bet_total_amount_array[i], 2))
				}
				this._klineMasterBar.updateTotalBetAmount(this.totalBetAmount)
			}
		}
		,
		i.prototype.updateBetTotalAmountForSelf = function(t, e) {
			this.bet_total_amount_array[t] = parseFloat(this.bet_total_amount_array[t]) + parseFloat(e),
			null != this.lb_bet_total_amount_array[t] && (this.lb_bet_total_amount_array[t].text = Utils.moneyFormat(this.bet_total_amount_array[t], 2))
		}
		,
		i.prototype.initMyBetAmount = function() {
			for (var t in this.lb_my_bet_amount_array)
				this.lb_my_bet_amount_array[t].text = "";
			for (var e in this.my_bet_amount_array)
				this.my_bet_amount_array[e] = 0
		}
		,
		i.prototype.updateMyBetAmount = function(t, e) {
			this.my_bet_amount_array[t] = parseFloat(this.my_bet_amount_array[t]) + parseFloat(e),
			this.lb_my_bet_amount_array[t].text = Utils.moneyFormat(this.my_bet_amount_array[t], 2)
		}
		,
		i.prototype.showBanker = function() {
			if (this.group_pots.visible = !1,
			this.group_banker_detail.visible = !0,
			this.group_banker_avatar.visible = !0,
			null != this.current_banker) {
				if (void 0 == this.current_banker.avatar_url || null == this.current_banker.avatar_url || "" == this.current_banker.avatar_url) {
					var t = new egret.Bitmap(RES.getRes("person_png"));
					this.showAvatar(t)
				} else
					this.loadBankerImage(this.current_banker.avatar_url);
				this.banker_name.text = Utils.getLimitUserName(this.current_banker.name, 12),
				this.banker_balance.text = parseFloat(this.current_banker.banker_balance).toFixed(0);
				var e = this.current_banker.vip_grade;
				this.banker_vip.visible = !1,
				e > 0 && (this.banker_vip.visible = !0,
				this.banker_vip.source = RES.getRes("icon_vip_" + e + "_png"),
				this.banker_vip.x = (this.group_banker_name.width - this.banker_name.width) / 2 - 23)
			}
		}
		,
		i.prototype.showPots = function() {
			this.group_banker_detail.visible = !1,
			this.group_banker_avatar.visible = !1,
			this.group_pots.visible = !0,
			null == this.pots_balance && "" == this.pots_balance && (this.pots_balance = 0),
			this.lb_pots_balance.text = parseFloat(this.pots_balance).toFixed(0)
		}
		,
		i.prototype.loadBankerImage = function(t) {
			var e = new egret.ImageLoader;
			e.addEventListener(egret.Event.COMPLETE, this.bankerImageLoadCompleteHandler, this),
			e.load(t)
		}
		,
		i.prototype.bankerImageLoadCompleteHandler = function(t) {
			var e = t.currentTarget
			  , i = new egret.Bitmap(e.data);
			this.showAvatar(i)
		}
		,
		i.prototype.showAvatar = function(t) {
			t.x = 16,
			t.y = 30,
			t.width = 98,
			t.height = 98,
			this.group_banker_avatar.addChild(t);
			var e = new egret.Shape;
			e.graphics.beginFill(255),
			e.graphics.drawCircle(49, 49, 49),
			e.graphics.endFill(),
			e.x = 16,
			e.y = 30,
			this.group_banker_avatar.addChild(e),
			t.mask = e;
			var i = new eui.Image;
			i.source = RES.getRes("bg_classical_banker_avatar_png"),
			i.width = 114,
			i.height = 109,
			i.x = 7,
			i.y = 24,
			this.group_banker_avatar.addChild(i),
			this.group_banker_avatar.setChildIndex(this.group_banker_name, 1e3),
			this.group_bet.setChildIndex(this.btn_banker, 1e3)
		}
		,
		i.prototype.getBankers = function() {
			this.game_socket && this.game_socket.request(CONST.GameCommand.get_banker, {
				user_id: this.user_id,
				game_room_id: this.room_id
			})
		}
		,
		i.prototype.getPots = function() {
			this.game_socket && this.game_socket.request(CONST.GameCommand.get_pots, {
				user_id: this.user_id,
				game_room_id: this.room_id,
				token: this.token
			})
		}
		,
		i.prototype.clickDragon = function() {
			this.btn_banker.dispatchEventWith(egret.TouchEvent.TOUCH_TAP, !1, !1, !1)
		}
		,
		i.prototype.Banker = function(e) {
			var i = e.currentTarget.name;
			if (t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
			"0" == i) {
				var n = this
				  , a = {
					callback: function() {
						n.applyBanker()
					},
					balance: this.gold_balance,
					banker_queue: this.banker_queue_data
				};
				t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_CLASSICAL_BANKER_QUEUE, a)
			} else
				"1" == i && (this.is_banker ? this.offBanker() : this.offBankerQueue())
		}
		,
		i.prototype.applyBanker = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1);
			var e = new eui.ArrayCollection;
			e.addItem({
				key: "game_room_id",
				value: this.room_id
			}),
			e.addItem({
				key: "round_id",
				value: this.round_id
			}),
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "trade/applyBanker", e, this.onApplyBankerComplete, this.onApplyBankerIOError, this.onApplyBankerProgress, this)
		}
		,
		i.prototype.onApplyBankerComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_APPLY_BANKER_SUCCESS) {
				if (this.btn_banker.img.texture = RES.getRes("btn_off_banker_png"),
				this.btn_banker.name = "1",
				"banker" == n.message)
					var a = [{
						text: "上庄成功!",
						style: {
							textColor: 16777215,
							size: 50
						}
					}]
					  , s = [{
						text: "提示：",
						style: {
							textColor: 16777215,
							size: 28
						}
					}, {
						text: "按携带金币数量排序，金币最多者选为本期庄家",
						style: {
							textColor: 16597776,
							size: 28
						}
					}];
				else if ("51" == n.message)
					var a = [{
						text: "申请成功!\n",
						style: {
							textColor: 16777215,
							size: 50
						}
					}, {
						text: "(排序 >50 )",
						style: {
							textColor: 16597776,
							size: 28
						}
					}]
					  , s = [{
						text: "提示：",
						style: {
							textColor: 16777215,
							size: 28
						}
					}, {
						text: "按携带金币数量排序，金币最多者选为本期庄家",
						style: {
							textColor: 16597776,
							size: 28
						}
					}];
				else
					var a = [{
						text: "申请成功!\n",
						style: {
							textColor: 16777215,
							size: 50
						}
					}, {
						text: "(排序 " + n.message + " )",
						style: {
							textColor: 16597776,
							size: 28
						}
					}]
					  , s = [{
						text: "提示：",
						style: {
							textColor: 16777215,
							size: 28
						}
					}, {
						text: "按携带金币数量排序，金币最多者选为本期庄家",
						style: {
							textColor: 16597776,
							size: 28
						}
					}];
				var o = new eui.Group;
				o.name = "childGroupTips",
				o.width = 520,
				o.height = 240,
				o.x = 75,
				o.y = 120;
				var r = new eui.Label
				  , l = new eui.Label;
				r.width = o.width,
				r.textAlign = egret.HorizontalAlign.CENTER,
				r.textFlow = a,
				l.width = o.width,
				l.textAlign = egret.HorizontalAlign.LEFT,
				l.multiline = !0,
				l.lineSpacing = 8,
				l.textFlow = s,
				r.y = (o.height - r.height - l.height) / 2,
				l.height > 0 && (r.y = r.y - 15),
				l.y = r.y + 30 + r.height,
				o.addChild(r),
				o.addChild(l),
				this.showTip(o, "")
			} else {
				if (403 == n.type)
					return this.destoryAll(),
					void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				if (n.type == MessageCode.CODE_LESS_THAN_BANKER_MIN_AMOUNT)
					return void (this.groupBankerTip.visible = !0);
				var h = n.message
				  , a = [{
					text: "上庄失败!\n",
					style: {
						textColor: 16777215,
						size: 50
					}
				}, {
					text: "(" + h + ")",
					style: {
						textColor: 16597776,
						size: 28
					}
				}]
				  , s = []
				  , o = new eui.Group;
				o.name = "childGroupTips",
				o.width = 520,
				o.height = 240,
				o.x = 75,
				o.y = 120;
				var r = new eui.Label
				  , l = new eui.Label;
				r.width = o.width,
				r.textAlign = egret.HorizontalAlign.CENTER,
				r.textFlow = a,
				l.width = o.width,
				l.textAlign = egret.HorizontalAlign.LEFT,
				l.multiline = !0,
				l.lineSpacing = 8,
				l.textFlow = s,
				r.y = (o.height - r.height - l.height) / 2,
				l.height > 0 && (r.y = r.y - 15),
				l.y = r.y + 30 + r.height,
				o.addChild(r),
				o.addChild(l),
				this.showTip(o, "")
			}
		}
		,
		i.prototype.onApplyBankerIOError = function(t) {
			this.closeLoading(this),
			Toast.launch("网络异常,请检查您的网络设置.", -100)
		}
		,
		i.prototype.onApplyBankerProgress = function(t) {}
		,
		i.prototype.offBanker = function() {
			if (t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
			this.can_bet) {
				var e = [{
					text: "下庄失败!",
					style: {
						textColor: 16777215,
						size: 50
					}
				}]
				  , i = [{
					text: "提示：",
					style: {
						textColor: 16777215,
						size: 28
					}
				}, {
					text: "下注期间不能下庄，请在结算时间申请下庄，结算结束自动下庄。",
					style: {
						textColor: 16597776,
						size: 28
					}
				}]
				  , n = new eui.Group;
				n.name = "childGroupTips",
				n.width = 520,
				n.height = 240,
				n.x = 75,
				n.y = 120;
				var a = new eui.Label
				  , s = new eui.Label;
				return a.width = n.width,
				a.textAlign = egret.HorizontalAlign.CENTER,
				a.textFlow = e,
				s.width = n.width,
				s.textAlign = egret.HorizontalAlign.LEFT,
				s.multiline = !0,
				s.lineSpacing = 8,
				s.textFlow = i,
				a.y = (n.height - a.height - s.height) / 2,
				s.height > 0 && (a.y = a.y - 15),
				s.y = a.y + 30 + a.height,
				n.addChild(a),
				n.addChild(s),
				void this.showTip(n, "")
			}
			var o = new eui.ArrayCollection;
			o.addItem({
				key: "round_id",
				value: this.round_id
			}),
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "trade/offBanker", o, this.onOffBankerComplete, this.onOffBankerIOError, this.onOffBankerProgress, this)
		}
		,
		i.prototype.onOffBankerComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type != MessageCode.CODE_OFF_BANKER_SUCCESS) {
				if (403 == n.type)
					return this.destoryAll(),
					void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				var a = n.message
				  , s = [{
					text: "下庄失败!\n",
					style: {
						textColor: 16777215,
						size: 50
					}
				}, {
					text: "(" + a + ")",
					style: {
						textColor: 16597776,
						size: 28
					}
				}]
				  , o = []
				  , r = new eui.Group;
				r.name = "childGroupTips",
				r.width = 520,
				r.height = 240,
				r.x = 75,
				r.y = 120;
				var l = new eui.Label
				  , h = new eui.Label;
				return l.width = r.width,
				l.textAlign = egret.HorizontalAlign.CENTER,
				l.textFlow = s,
				h.width = r.width,
				h.textAlign = egret.HorizontalAlign.LEFT,
				h.multiline = !0,
				h.lineSpacing = 8,
				h.textFlow = o,
				l.y = (r.height - l.height - h.height) / 2,
				h.height > 0 && (l.y = l.y - 15),
				h.y = l.y + 30 + l.height,
				r.addChild(l),
				r.addChild(h),
				void this.showTip(r, "")
			}
			this.btn_banker.img.texture = RES.getRes("btn_apply_banker_png"),
			this.btn_banker.name = "0";
			var s = [{
				text: "下庄成功!\n",
				style: {
					textColor: 16777215,
					size: 50
				}
			}, {
				text: "(您已离开排庄队列)",
				style: {
					textColor: 16597776,
					size: 28
				}
			}]
			  , o = []
			  , r = new eui.Group;
			r.name = "childGroupTips",
			r.width = 520,
			r.height = 240,
			r.x = 75,
			r.y = 120;
			var l = new eui.Label
			  , h = new eui.Label;
			l.width = r.width,
			l.textAlign = egret.HorizontalAlign.CENTER,
			l.textFlow = s,
			h.width = r.width,
			h.textAlign = egret.HorizontalAlign.LEFT,
			h.multiline = !0,
			h.lineSpacing = 8,
			h.textFlow = o,
			l.y = (r.height - l.height - h.height) / 2,
			h.height > 0 && (l.y = l.y - 15),
			h.y = l.y + 30 + l.height,
			r.addChild(l),
			r.addChild(h),
			this.showTip(r, "")
		}
		,
		i.prototype.onOffBankerIOError = function(t) {
			this.closeLoading(this),
			Toast.launch("网络异常,请检查您的网络设置.", -100)
		}
		,
		i.prototype.onOffBankerProgress = function(t) {}
		,
		i.prototype.offBankerQueue = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1);
			var e = new eui.ArrayCollection;
			e.addItem({
				key: "game_room_id",
				value: this.room_id
			}),
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "trade/offBankerQueue", e, this.onoffBankerQueueComplete, this.onoffBankerQueueIOError, this.onoffBankerQueueProgress, this)
		}
		,
		i.prototype.onoffBankerQueueComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_OFF_BANKER_QUEUE_SUCCESS) {
				this.is_banker = !1,
				this.btn_banker.img.texture = RES.getRes("btn_apply_banker_png"),
				this.btn_banker.name = "0";
				var a = [{
					text: "下庄成功!\n",
					style: {
						textColor: 16777215,
						size: 50
					}
				}, {
					text: "(您已离开排庄队列)",
					style: {
						textColor: 16597776,
						size: 28
					}
				}]
				  , s = []
				  , o = new eui.Group;
				o.name = "childGroupTips",
				o.width = 520,
				o.height = 240,
				o.x = 75,
				o.y = 120;
				var r = new eui.Label
				  , l = new eui.Label;
				r.width = o.width,
				r.textAlign = egret.HorizontalAlign.CENTER,
				r.textFlow = a,
				l.width = o.width,
				l.textAlign = egret.HorizontalAlign.LEFT,
				l.multiline = !0,
				l.lineSpacing = 8,
				l.textFlow = s,
				r.y = (o.height - r.height - l.height) / 2,
				l.height > 0 && (r.y = r.y - 15),
				l.y = r.y + 30 + r.height,
				o.addChild(r),
				o.addChild(l),
				this.showTip(o, "")
			} else {
				if (403 == n.type)
					return this.destoryAll(),
					void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				var h = n.message
				  , a = [{
					text: "下庄失败!\n",
					style: {
						textColor: 16777215,
						size: 50
					}
				}, {
					text: "(" + h + ")",
					style: {
						textColor: 16597776,
						size: 28
					}
				}]
				  , s = []
				  , o = new eui.Group;
				o.name = "childGroupTips",
				o.width = 520,
				o.height = 240,
				o.x = 75,
				o.y = 120;
				var r = new eui.Label
				  , l = new eui.Label;
				r.width = o.width,
				r.textAlign = egret.HorizontalAlign.CENTER,
				r.textFlow = a,
				l.width = o.width,
				l.textAlign = egret.HorizontalAlign.LEFT,
				l.multiline = !0,
				l.lineSpacing = 8,
				l.textFlow = s,
				r.y = (o.height - r.height - l.height) / 2,
				l.height > 0 && (r.y = r.y - 15),
				l.y = r.y + 30 + r.height,
				o.addChild(r),
				o.addChild(l),
				this.showTip(o, "")
			}
		}
		,
		i.prototype.onoffBankerQueueIOError = function(t) {
			this.closeLoading(this),
			Toast.launch("网络异常,请检查您的网络设置.", -100)
		}
		,
		i.prototype.onoffBankerQueueProgress = function(t) {}
		,
		i.prototype.getLatestRoundDetail = function() {
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "game_room_id",
				value: this.room_id
			})
			this.gameRoundReady = !1,
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "round/getLatestRoundDetail", t, this.onGetLatestRoundDetailComplete, this.onGetLatestRoundDetailIOError, this.onGetLatestRoundDetailProgress, this)
		}
		,
		i.prototype.onGetLatestRoundDetailComplete = function(e) {
			this.gameRoundReady = !0;
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_ROUND_FOUND) {
				n = n.results;
				var a = n.round
				  , s = n.banker_trade_detail
				  , o = n.my_trade
				  , r = n.online_num;
				if (null != r && this.updateOnlineNum(r),
				null != a && (this.round_id = a.id,
				this.start_time = a.start_time,
				this.end_time = a.end_time,
				this.server_time = n.server_time,
				this.updateTimer(this, null, null)),
				this.initBetTotalAmount(s),
				this.initMyBetAmount(),
				null != o)
					for (var l in o) {
						var h = o[l].capital_odds_id
						  , d = o[l].trade_amount;
						this.my_bet_amount_array[h] = parseFloat(this.my_bet_amount_array[h]) + parseFloat(d),
						this.lb_my_bet_amount_array[h].text = Utils.moneyFormat(this.my_bet_amount_array[h], 2)
					}
			} else {
				if (403 == n.type)
					return this.destoryAll(),
					void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				var _ = this;
				this.closeStatus || setTimeout(function() {
					_.getLatestRoundDetail()
				}, 2e3, _)
			}
		}
		,
		i.prototype.onGetLatestRoundDetailIOError = function(t) {
			this.closeLoading(this),
			Toast.launch("网络异常,请检查您的网络设置.", -100)
		}
		,
		i.prototype.onGetLatestRoundDetailProgress = function(t) {}
		,
		i.prototype.getCapitalOddsList = function() {
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "capital_key",
				value: this.capital
			})
			t.addItem({
				key: "game_model_type",
				value: 1
			})
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "trade/getCapitalOdds", t, this.onGetCapitalOddsListComplete, this.onGetCapitalOddsListIOError, this.onGetCapitalOddsListProgress, this)
		}
		,
		i.prototype.onGetCapitalOddsListComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_CAPITAL_ODDS_FOUND)
				this.capital_odds = n.results,
				this.initIntervalOdds(),
				this.getLatestRoundDetail(),
				this.initKline();
			else {
				if (403 == n.type)
					return this.destoryAll(),
					void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				var a = n.message;
				Toast.launch(a, -100)
			}
		}
		,
		i.prototype.onGetCapitalOddsListIOError = function(t) {
			this.closeLoading(this),
			Toast.launch("网络异常,请检查您的网络设置.", -100)
		}
		,
		i.prototype.onGetCapitalOddsListProgress = function(t) {}
		,
		i.prototype.checkTradeData = function(e) {
			var i = this;
			if (!this.can_bet)
				return !1;
			if (this.gold_balance < this.bet_amount) {
				var n = "您的余额不足，我们将为您充值18888模拟币！"
				  , a = [{
					text: n,
					style: {
						textColor: 16777215,
						size: 32
					}
				}]
				  , s = []
				  , o = new eui.Group;
				o.name = "childGroupTips",
				o.width = 460,
				o.height = 240,
				o.x = 93,
				o.y = 120;
				var r = new eui.Label
				  , l = new eui.Label;
				r.width = o.width,
				r.horizontalCenter = "0",
				r.textFlow = a,
				l.width = o.width,
				l.textAlign = egret.HorizontalAlign.LEFT,
				l.multiline = !0,
				l.lineSpacing = 8,
				l.textFlow = s,
				r.y = (o.height - r.height - l.height - 5) / 2,
				l.height > 0 && (r.y = r.y - 15),
				r.height > 0 ? l.y = r.y + r.height : l.y = r.y + 30 + r.height,
				o.addChild(r),
				o.addChild(l);
				var h = {
					group: o,
					params: "",
					cancelable: !0,
					callback: function(t) {
						i.topupSimEwallet()
					}
				};
				return t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_TIP, h),
				!1
			}
			return null == this.round_id || "" == this.round_id ? (Toast.launch("未找到最新回合,请等待最新回合", -100),
			!1) : null == e || "" == e ? (Toast.launch("未找到该赔率", -100),
			!1) : !0
		}
		,
		i.prototype.topupSimEwallet = function() {
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "user/topupSimEwallet", null, this.onTopupSimEwalletComplete, this.onTopupSimEwalletIOError, this.onTopupSimEwalletProgress, this)
		}
		,
		i.prototype.onTopupSimEwalletComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_GET_REWARD_SUCCESS)
				this.getEwallet();
			else if (403 == n.type)
				this.destoryAll(),
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			else {
				n.message
			}
		}
		,
		i.prototype.onTopupSimEwalletIOError = function(t) {
			this.closeLoading(this),
			Toast.launch("网络异常,请检查您的网络设置.", -100)
		}
		,
		i.prototype.onTopupSimEwalletProgress = function(t) {}
		,
		i.prototype.getMessageList = function() {
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "user/getUserNotice", null, this.onGetMessageComplete, this.onGetMessageIOError, this.onGetMessageProgress, this)
		}
		,
		i.prototype.onGetMessageComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_GET_MESSAGE_SUCCESS)
				for (var a = n.results, s = a.length - 1; s >= 0; s--) {
					var o = a[s];
					Main.noticeList.push({
						user_id: o.user_id,
						message: o.message,
						name: o.name,
						type: o.type,
						is_show: !1
					})
				}
			else if (403 == n.type)
				this.destoryAll(),
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			else {
				n.message
			}
		}
		,
		i.prototype.onGetMessageIOError = function(t) {
			this.closeLoading(this),
			Toast.launch("网络异常,请检查您的网络设置.", -100)
		}
		,
		i.prototype.onGetMessageProgress = function(t) {}
		,
		i.prototype.sitDown = function(e) {
			var i = 0;
			for (var n in this.group_sit_array) {
				if (this.group_sit_array[n].name == this.user_id)
					return;
				if (e.currentTarget == this.group_sit_array[n]) {
					if (null != this.group_sit_array[n].name && "" != this.group_sit_array[n].name && "null" != this.group_sit_array[n].name)
						return;
					i = parseFloat(n) + 1
				}
			}
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().sit_sound_ready && t.SceneTrade.getInstance().sit_sound.play(0, 1),
			this.game_socket && i > 0 && this.game_socket.request(CONST.GameCommand.sitdown, {
				token: this.user_info.access_token,
				user_id: this.user_id,
				game_room_id: this.room_id,
				seat_type: i
			})
		}
		,
		i.prototype.standup = function(t) {
			var e = 0;
			for (var i in this.group_sit_array)
				if (t.currentTarget == this.group_sit_array[i]) {
					e = parseFloat(i) + 1;
					break
				}
			this.game_socket && this.game_socket.request(CONST.GameCommand.standup, {
				token: this.user_info.access_token,
				user_id: this.user_id,
				game_room_id: this.room_id,
				seat_type: e
			})
		}
		,
		i.prototype.getSeats = function() {
			this.game_socket && this.game_socket.request(CONST.GameCommand.get_seats, {
				token: this.user_info.access_token,
				user_id: this.user_id,
				game_room_id: this.room_id
			})
		}
		,
		i.prototype.refreshSeats = function() {
			if (console.log("refreshSeats====>", this.seats_data),
			null != this.seats_data)
				for (var t = 0; t < this.seats_data.length; t++) {
					var e = this.seats_data[t]
					  , i = e.user_id
					  , n = e.seat_type;
					if (null != i) {
						var a = e.name
						  , s = e.avatar_url;
						if (this.group_sit_array[n - 1].name == i) {
							var o = this.group_sit_array[n - 1].getChildByName("seat_balance");
							null != o && (o.text = Utils.moneyFormat(e.balance, 2).toString());
							continue
						}
						this.group_sit_array[n - 1].removeChildren(),
						this.group_sit_array[n - 1].name = i;
						var r = new eui.Image;
						r.source = RES.getRes("bg_banker_queue_png"),
						r.alpha = .7,
						r.width = 80,
						r.height = 20,
						r.x = 0,
						r.y = -20,
						r.visible = !1,
						this.group_sit_array[n - 1].addChild(r);
						var l = new eui.Label;
						l.text = a,
						l.size = 18,
						l.fontFamily = "Microsoft YaHei",
						l.horizontalCenter = "0",
						l.multiline = !1,
						l.textColor = 13294568,
						l.width = 80,
						l.height = 20,
						l.textAlign = "center",
						l.verticalAlign = "middle",
						l.x = r.x,
						l.y = r.y,
						this.group_sit_array[n - 1].addChild(l);
						var h = new eui.Image;
						h.source = RES.getRes("bg_seat_balance_png"),
						h.alpha = .7,
						h.width = 80,
						h.height = 20,
						h.x = 0,
						h.y = this.group_sit_array[n - 1].height - 10,
						this.group_sit_array[n - 1].addChild(h);
						var d = new eui.Label;
						if (d.text = parseFloat(e.balance).toString(),
						d.size = 18,
						d.textColor = 16366631,
						d.horizontalCenter = "0",
						d.multiline = !1,
						d.width = 80,
						d.height = 20,
						d.textAlign = "center",
						d.verticalAlign = "middle",
						d.x = h.x,
						d.y = h.y,
						d.name = "seat_balance",
						this.group_sit_array[n - 1].addChild(d),
						void 0 == s || null == s || "" == s) {
							var _ = new egret.Bitmap(RES.getRes("person_png"));
							this.showUserAvatar(_, this.group_sit_array[n - 1], r, l, h, d)
						} else
							this.loadImage(s, this.group_sit_array[n - 1], r, l, h, d)
					} else
						null != this.group_sit_array[n - 1] && (this.group_sit_array[n - 1].removeChildren(),
						this.group_sit_array[n - 1].name = null)
				}
		}
		,
		i.prototype.loadImage = function(t, e, i, n, a, s) {
			var o = this
			  , r = new egret.ImageLoader;
			r.addEventListener(egret.Event.COMPLETE, function(t) {
				var r = t.currentTarget
				  , l = new egret.Bitmap(r.data);
				o.showUserAvatar(l, e, i, n, a, s)
			}, this),
			r.load(t)
		}
		,
		i.prototype.ImageLoadCompleteHandler = function(t) {
			var e = t.currentTarget;
			new egret.Bitmap(e.data)
		}
		,
		i.prototype.showUserAvatar = function(t, e, i, n, a, s) {
			t.x = 1.5,
			t.y = 1.5,
			t.width = 76,
			t.height = 76,
			e.addChild(t);
			var o = new egret.Shape;
			o.graphics.beginFill(255),
			o.graphics.drawCircle(38, 38, 38),
			o.graphics.endFill(),
			o.x = 1.5,
			o.y = 1.5,
			e.addChild(o),
			t.mask = o,
			e.contains(t) && e.setChildIndex(t, 1),
			e.contains(o) && e.setChildIndex(o, 1),
			e.contains(i) && e.setChildIndex(i, 1e3),
			e.contains(n) && e.setChildIndex(n, 1001),
			e.contains(a) && e.setChildIndex(a, 1e3),
			e.contains(s) && e.setChildIndex(s, 1001)
		}
		,
		i.prototype.bet = function(e) {
			var i = e.currentTarget.name;
			this.checkTradeData(i) ? (t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().classical_bet_sound_ready && t.SceneTrade.getInstance().classical_bet_sound.play(0, 1),
			this.trade(this.bet_amount, i)) : t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().classical_un_bet_sound_ready && t.SceneTrade.getInstance().classical_un_bet_sound.play(0, 1)
		}
		,
		i.prototype.trade = function(t, e) {
			if (this.checkTradeData(e) && this.game_socket) {
				var i = null;
				null != this.current_banker && (i = this.current_banker.id),
				this.game_socket.request(CONST.GameCommand.create_trade, {
					token: this.user_info.access_token,
					user_id: this.user_id,
					round_id: this.round_id,
					trade_amount: t,
					banker_id: i,
					capital_odds_id: e,
					game_model_type: this.game_model_type
				})
			}
		}
		,
		i.prototype.getEwallet = function() {
			this.game_socket && ("Y" == this.is_sim ? this.game_socket.request(CONST.GameCommand.get_ewallet, {
				user_id: this.user_id,
				ewallet_type: "S"
			}) : this.game_socket.request(CONST.GameCommand.get_ewallet, {
				user_id: this.user_id,
				ewallet_type: "G"
			}))
		}
		,
		i.prototype.updateBalance = function(t) {
			this.lb_my_balance.text = parseFloat(parseFloat(t).toFixed(2)).toString(),
			this.gold_balance = t
		}
		,
		i.prototype.showShop = function(e) {
			t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_SHOP, e)
		}
		,
		i.prototype.updateTimer = function(e, i, n) {
			null == i && (i = e.server_time);
			var a = 1e3 * e.start_time
			  , s = 1e3 * e.end_time;
			if ("" != i) {
				null !== e.timer && void 0 !== e.timer && clearInterval(e.timer);
				var o = (new Date).getTime()
				  , r = i - o
				  , l = 0;
				if (a > i && null == n ? (e.startBet(e),
				l = a - i,
				e._klineMasterBar.removeSettleGroup()) : s >= i ? (e.stopBet(e),
				l = s - i,
				e._klineMasterBar.removeTradeGroup(e.capital)) : l = 0,
				l = Math.round(l / 1e3),
				l > 0) {
					var o = (new Date).getTime() + r;
					e._klineMasterBar.setTime(o),
					e.timer_label.text = l.toString(),
					e._klineMasterBar.updateTimeLabel(l.toString()),
					null !== e.timer && void 0 !== e.timer && clearInterval(e.timer),
					e.timer = setInterval(function() {
						o = (new Date).getTime() + r,
						e._klineMasterBar.setTime(o),
						l -= 1,
						l >= 0 && (e.timer_label.text = l.toString(),
						e._klineMasterBar.updateTimeLabel(l),
						e.can_bet ? e._klineMasterBar.drawLineTradeTimer(l) : e._klineMasterBar.drawLineInterval(l, !1)),
						3 == l && null == n && 1 == e.can_bet && e.showTimeDownNotice(e),
						10 >= l && l >= 0 && 0 == e.can_bet && e.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().count_down_10_sound_ready && t.SceneTrade.getInstance().count_down_10_sound.play(0, 1),
						0 >= l && s - 5e3 > o && (e.updateTimer(e, o, 1),
						e.showStopBetNotice(e))
					}, 1e3)
				}
			}
		}
		,
		i.prototype.showTip = function(e, i) {
			var n = {
				group: e,
				params: "",
				cancelable: !0,
				callback: function(e) {
					setTimeout(function() {
						"Shop" == i && t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_SHOP)
					}, 200)
				}
			};
			t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_TIP, n)
		}
		,
		i.prototype.updateOnlineNum = function(t) {
			this.lb_online_num.text = t,
			this._klineMasterBar.lb_online_num.text = t
		}
		,
		i.prototype.betChipAnima = function(t, e, i, n) {
			var a = this.createNewChip(t, e, null, null, i, n);
			this.flyChip(a, this.group_bet, 500)
		}
		,
		i.prototype.chipFromBetToBanker = function(e) {
			for (var i = this, n = Array(), a = 0; a < this.capital_odds.length; a++)
				n.push(this.capital_odds[a]);
			for (var s = 0; s < e.length; s++)
				for (var o = 0; o < n.length; o++)
					if (n[o].id == e[s].id) {
						n.splice(o, 1);
						break
					}
			for (var r = this.group_banker_avatar.x + this.group_banker_avatar.width / 2 - 30, l = this.group_banker_avatar.y + this.group_banker_avatar.height / 2, h = !1, d = !1, _ = 0; _ < n.length; _++) {
				var p = n[_]
				  , u = [];
				if (null != this.chip_array[p.id])
					for (var g = 0; g < this.chip_array[p.id].length; g++) {
						var c = this.chip_array[p.id][g];
						u.push(c),
						c.start_x = c.end_x,
						c.start_y = c.end_y,
						c.end_x = r,
						c.end_y = l
					}
				if (0 != u.length) {
					h || (h = !0,
					this.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().receive_chip_sound_ready && t.SceneTrade.getInstance().receive_chip_sound.play(0, 1));
					var m = 10;
					i.chip_array[p.id] = null,
					this.flyChipArray(u, this.group_bet, 0, m, !0, 400, function() {
						setTimeout(function() {
							d || (d = !0,
							i.chipFromBankerToBet(e))
						}, 700)
					})
				}
			}
		}
		,
		i.prototype.chipFromBankerToBet = function(e) {
			for (var i = this, n = this.group_banker_avatar.x + this.group_banker_avatar.width / 2 - 30, a = this.group_banker_avatar.y + this.group_banker_avatar.height / 2, s = !1, o = 0; o < e.length; o++) {
				var r = 0;
				if (null != e[o].bet_total_amount && (r = e[o].bet_total_amount),
				r > 0) {
					var l = e[o].odds
					  , h = r * l - r
					  , d = this.splitTradeChip(n, a, null, null, h, e[o].id);
					this.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().receive_chip_sound_ready && t.SceneTrade.getInstance().receive_chip_sound.play(0, 1);
					var _ = 10;
					this.flyChipArray(d, this.group_bet, 0, _, !1, 400, function() {
						setTimeout(function() {
							s || (s = !0,
							i.chipFromBetToUser(e))
						}, 800)
					})
				}
			}
		}
		,
		i.prototype.chipFromBetToUser = function(t) {
			var e = this;
			e.showProfitAmount(),
			e.clearChip()
		}
		,
		i.prototype.showProfitAmount = function() {
			for (var t = 0; t < this.profit_8_array.length; t++) {
				var e = this.profit_8_array[t]
				  , i = 0;
				if (null != e)
					for (var n in e) {
						var a = e[n];
						i += a
					}
				var s = 0
				  , o = 0;
				t >= 0 && 5 >= t ? (s = this.group_sit_array[t].x,
				o = this.group_sit_array[t].y - 20) : 6 == t ? (s = this.lb_my_balance.x,
				o = this.lb_my_balance.y - 20) : (s = this.group_online.x,
				o = this.group_online.y - 20),
				i > 0 && this.flyAmount(s, o, i, this.group_bet)
			}
		}
		,
		i.prototype.calculateProfit = function(t, e) {
			var i = this;
			this.initProfit8Array();
			var n = 0
			  , a = 0;
			a = null != this.current_banker ? this.current_banker.banker_balance : this.pots_balance;
			var s = 0;
			if (a + this.total_bet_amount >= this.win_total_amount) {
				var o = 0;
				if (null != this.seats_trade)
					for (var r = 0; r < this.seats_trade.length; r++)
						for (var l = 0; l < this.group_sit_array.length; l++)
							if (this.group_sit_array[l].name == this.seats_trade[r].user_id && this.seats_trade[r].user_id != this.user_id) {
								var h = this.seats_trade[r].capital_odds_id
								  , d = this.seats_trade[r].pre_profit;
								o += d,
								this.profit_8_array[l][h] = d * (1 - n)
							}
				for (var r = 0; r < t.length; r++) {
					var h = t[r].id
					  , _ = this.my_bet_amount_array[h] * t[r].odds;
					this.profit_8_array[6][h] = _ * (1 - n),
					s += _
				}
				var p = this.win_total_amount - o - s;
				p > 0 && (this.profit_8_array[7][t[0].id] = p * (1 - n))
			} else {
				var o = 0;
				if (null != this.seats_trade)
					for (var r = 0; r < this.seats_trade.length; r++)
						for (var l = 0; l < this.group_sit_array.length; l++)
							if (this.group_sit_array[l].name == this.seats_trade[r].user_id && this.seats_trade[r].user_id != this.user_id) {
								for (var h = this.seats_trade[r].capital_odds_id, u = this.seats_trade[r].pre_profit, g = 0; g < this.win_odds.length; g++)
									if (h == this.win_odds[g].id) {
										var c = (this.win_odds[g].bet_total_amount * this.win_odds[g].odds - this.win_odds[g].bet_total_amount) / this.win_total_net_amount * (a + this.lose_total_amount)
										  , m = this.seats_trade[r].trade_amount / this.win_odds[g].bet_total_amount * c;
										u = m + this.seats_trade[r].trade_amount;
										var y = u * n;
										u -= y;
										break
									}
								o += u,
								this.profit_8_array[l][h] = u * (1 - n)
							}
				for (var r = 0; r < t.length; r++) {
					var h = t[r].id;
					u = this.my_bet_amount_array[h] * t[r].odds;
					for (var g = 0; g < this.win_odds.length; g++)
						if (h == this.win_odds[g].id) {
							var c = (this.win_odds[g].bet_total_amount * this.win_odds[g].odds - this.win_odds[g].bet_total_amount) / this.win_total_net_amount * (a + this.lose_total_amount)
							  , m = this.my_bet_amount_array[h] / this.win_odds[g].bet_total_amount * c;
							u = m + this.my_bet_amount_array[h];
							var y = u * n;
							u -= y;
							break
						}
					s += u
				}
				var p = a + this.total_bet_amount - o - s;
				p > 0 && (this.profit_8_array[7][t[0].id] = p * (1 - n))
			}
			s > 0 && setTimeout(function() {
				i.showYouWin(s, e)
			}, 800)
		}
		,
		i.prototype.createNewChip = function(e, i, n, a, s, o) {
			var r = new t.Chip(e,i,s);
			return r.end_x = n,
			r.end_y = a,
			null == n && (n = this.getBetGroupRandomX(o, r),
			r.end_x = n),
			null == a && (a = this.getBetGroupRandomY(o, r),
			r.end_y = a),
			null == e && (r.start_x = n),
			null == i && (r.start_y = a),
			null == this.chip_array[o] && (this.chip_array[o] = []),
			this.chip_array[o].push(r),
			r
		}
		,
		i.prototype.splitTradeChip = function(t, e, i, n, a, s) {
			for (var o = Array(); a >= 1e4; ) {
				var r = 1e4;
				a -= 1e4;
				var l = this.createNewChip(t, e, i, n, r, s);
				o.push(l)
			}
			for (; a >= 5e3; ) {
				var r = 5e3;
				a -= 5e3;
				var l = this.createNewChip(t, e, i, n, r, s);
				o.push(l)
			}
			for (; a >= 1e3; ) {
				var r = 1e3;
				a -= 1e3;
				var l = this.createNewChip(t, e, i, n, r, s);
				o.push(l)
			}
			for (; a >= 500; ) {
				var r = 500;
				a -= 500;
				var l = this.createNewChip(t, e, i, n, r, s);
				o.push(l)
			}
			for (; a >= 100; ) {
				var r = 100;
				a -= 100;
				var l = this.createNewChip(t, e, i, n, r, s);
				o.push(l)
			}
			for (; a >= 50; ) {
				var r = 50;
				a -= 50;
				var l = this.createNewChip(t, e, i, n, r, s);
				o.push(l)
			}
			for (; a >= 10; ) {
				var r = 10;
				a -= 10;
				var l = this.createNewChip(t, e, i, n, r, s);
				o.push(l)
			}
			return o
		}
		,
		i.prototype.getBetGroupRandomX = function(t, e) {
			var i = this.RandomBetGroupXY(this.group_odds_array[t].x + 10, this.group_odds_array[t].x + this.group_odds_array[t].width - e.width - 10);
			return i
		}
		,
		i.prototype.getBetGroupRandomY = function(t, e) {
			var i = this.RandomBetGroupXY(this.group_odds_array[t].y + 30, this.group_odds_array[t].y + this.group_odds_array[t].height - e.height - 30);
			return i
		}
		,
		i.prototype.RandomBetGroupXY = function(t, e) {
			var i = t - e
			  , n = Math.random()
			  , a = e + Math.round(n * i);
			return a
		}
		,
		i.prototype.flyChip = function(t, e, i) {
			e.contains(t) || e.addChild(t),
			egret.Tween.get(t).to({
				x: t.end_x,
				y: t.end_y
			}, i, egret.Ease.cubicOut)
		}
		,
		i.prototype.flyChipArray = function(t, e, i, n, a, s, o) {
			var r = this
			  , l = t.length;
			t.length > n && 0 != n && (l = n),
			setTimeout(function() {
				if (l > i)
					r.flyChip(t[i], e, s),
					i++,
					r.flyChipArray(t, e, i, n, a, s, o);
				else if (null != o) {
					if (a)
						for (var h = 0; h < t.length; h++)
							r.group_bet.contains(t[h]) && r.group_bet.removeChild(t[h]);
					o()
				}
			}, 10)
		}
		,
		i.prototype.clearChip = function() {
			for (var t = 0; t < this.capital_odds.length; t++) {
				var e = this.capital_odds[t].id;
				if (null != this.chip_array[e]) {
					for (var i = 0; i < this.chip_array[e].length; i++) {
						var n = this.chip_array[e][i];
						this.group_bet.contains(n) && this.group_bet.removeChild(n)
					}
					this.chip_array[e] = null
				}
			}
		}
		,
		i.prototype.initProfit8Array = function() {
			for (var t = 0; t < this.profit_8_array.length; t++)
				this.profit_8_array[t] = []
		}
		,
		i.prototype.onlineGroupBetAnima = function() {
			var t = this
			  , e = this.group_online.y;
			egret.Tween.get(this.group_online).to({
				y: e - 25
			}, 150, egret.Ease.cubicOut).call(function() {
				egret.Tween.get(t.group_online).to({
					y: e
				}, 150, egret.Ease.cubicOut)
			})
		}
		,
		i.prototype.flyAmount = function(e, i, n, a) {
			this.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().win_amount_sound_ready && t.SceneTrade.getInstance().win_amount_sound.play(0, 1);
			var s = this
			  , o = new eui.Label;
			n > 0 ? o.text = "+" + parseFloat(n) : o.text = "-" + parseFloat(n),
			o.width = 180,
			o.height = 20,
			o.x = e,
			o.y = i,
			o.textColor = 16366631,
			o.bold = !0,
			o.stroke = 1,
			o.strokeColor = 3482880,
			a.addChild(o),
			o.alpha = 1,
			egret.Tween.get(o, {
				loop: !1
			}).to({
				y: o.y - 28
			}, 2e3).call(function(t) {
				egret.Tween.get(o, {
					loop: !1
				}).to({
					alpha: 0
				}, 1500).call(function(t) {
					a.removeChild(o)
				})
			}, s)
		}
		,
		i.prototype.partAdded = function(t, i) {
			e.prototype.partAdded.call(this, t, i)
		}
		,
		i.prototype.childrenCreated = function() {
			e.prototype.childrenCreated.call(this)
		}
		,
		i.prototype.rectAnimation = function(t) {
			null != this.rect1 && (1 == this.type ? this.rect1.alpha <= 1 && this.rect1.alpha > .2 ? (this.rect1.alpha = parseFloat((this.rect1.alpha - .04).toFixed(2)),
			null != this.rect2 && (this.rect2.alpha = this.rect1.alpha)) : this.type = 0 : 0 == this.type && (this.rect1.alpha < 1 && this.rect1.alpha >= .2 ? (this.rect1.alpha = parseFloat((this.rect1.alpha + .04).toFixed(2)),
			null != this.rect2 && (this.rect2.alpha = this.rect1.alpha)) : this.type = 1))
		}
		,
		i
	}(eui.Component);
	t.GameClassicalSimUI = e,
	__reflect(e.prototype, "game.GameClassicalSimUI", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i(t) {
			var i = e.call(this) || this;
			return i.BANKER_TIMES = 10,
			i.BANKER_STATUS_APPLY_OFF_BANKER = 1,
			i.BANKER_STATUS_BANKING = 2,
			i.BANKER_STATUS_PENDING = 3,
			i.BANKER_STATUS_QUIT = 4,
			i.BANKER_STATUS_REPLACED = 5,
			i.BANKER_STATUS_EXCEED_LIMIT = 6,
			i.BANKER_STATUS_CANCEL_APPLY = 7,
			i.currentNoticeIndex = 0,
			i.group_sit_array = Array(),
			i.group_odds_array = Array(),
			i.lb_bet_total_amount_array = Array(),
			i.bet_total_amount_array = Array(),
			i.lb_my_bet_amount_array = Array(),
			i.my_bet_amount_array = Array(),
			i.group_bet_array = Array(),
			i.can_bet = !1,
			i.win_amount = 0,
			i.host = GameConfig.SOCKET_HOST,
			i.port = GameConfig.SOCKET_PORT,
			i.diff = 30,
			i.change_inform = !1,
			i.bet_amount = 100,
			i.banker_queue_data = new Array,
			i.my_banker_queue_order = 0,
			i.is_banker = !1,
			i.gameSocketReady = !1,
			i.gameRoundReady = !1,
			i.timerCheckReadStatus = null,
			i.closeStatus = !1,
			i.userNoticeTimer = null,
			i.playNoticeSound = !0,
			i.totalBetAmount = 0,
			i.firstLoadingComplete = !1,
			i.checkBalanceTimer = null,
			i.canReconnect = !0,
			i.seats_trade = null,
			i.win_total_amount = 0,
			i.lose_total_amount = 0,
			i.total_bet_amount = 0,
			i.win_total_net_amount = 0,
			i.win_odds = null,
			i.seats_data = Array(),
			i.chip_array = [],
			i.type = 1,
			i.profit_8_array = [],
			i.setRoomType(t),
			i.addEventListener(eui.UIEvent.COMPLETE, i.uiCompHandler, i),
			i.skinName = "resource/ui/main/GameClassicalUISkin.exml",
			i
		}
		return __extends(i, e),
		i.getInstance = function(t, e) {
			return this._instance || t && (this._instance = new i(e)),
			this._instance
		}
		,
		i.prototype.setRoomType = function(t) {
			null != t && (this.game_model_type = t.game_model_type,
			this.room_id = t.game_room_id,
			this.capital = t.capital,
			this.is_sim = t.is_sim,
			this.change_inform = t.change_inform)
		}
		,
		i.prototype.uiCompHandler = function(t) {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this);
			window.removeEventListener("offline", this.offlineEvent),
			window.addEventListener("offline", this.offlineEvent),
			this.setClickListener(),
			this.subInit()
		}
		,
		i.prototype.offlineEvent = function() {
			Toast.launch("您当前的网络状态不稳定", -100),
			t.AppFacade.getInstance().sendNotification(MainNotify.CLOSE_GRAB);
			var e = {
				reload: !1,
				game_model_type: this.game_model_type
			};
			t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_CAPITAL_LIST, e)
		}
		,
		i.prototype.enterRoomFailed = function() {
			var t = this;
			t.closeLoading(t),
			t.destoryAll(),
			GameLayerManager.gameLayer().mainLayer.$children.length > 1 && GameLayerManager.gameLayer().mainLayer.removeChildAt(0),
			Toast.launch("进入房间失败,请稍后再试", -100)
		}
		,
		i.prototype.destoryAll = function() {
			console.log("classical destoryAll"),
			t.AppFacade.getInstance().sendNotification(PanelNotify.CLOSE_BIG_WINNER),
			null != this.stage && this.stage.removeEventListener(egret.Event.ACTIVATE, this.onResume, this),
			this.firstLoadingComplete = !1,
			this.gameSocketReady = !1,
			this.gameRoundReady = !1,
			this._klineMasterBar.kline_socket && (this._klineMasterBar.kline_socket.klineSocketReady = !1),
			this._chatBar && (this._chatBar.chatSocketReady = !1),
			this.totalBetAmount = 0,
			this.host = GameConfig.SOCKET_HOST,
			this.port = GameConfig.SOCKET_PORT,
			this.groupHeader.removeChildren(),
			null != this.timerCheckReadStatus && void 0 != this.timerCheckReadStatus && clearInterval(this.timerCheckReadStatus),
			null != this.userNoticeTimer && void 0 != this.userNoticeTimer && clearInterval(this.userNoticeTimer),
			this.disconnectGameSocket(),
			null != this._klineMasterBar.kline_socket && void 0 != this._klineMasterBar.kline_socket && (this._klineMasterBar.kline_socket.disconnect(),
			this._klineMasterBar.kline_socket = null),
			this._klineMasterBar.removeSettleGroup(),
			null != this._chatBar.chat_socket && void 0 != this._chatBar.chat_socket && (this._chatBar.chat_socket.disconnect(),
			this._chatBar.chat_socket = null),
			this._chatBar.chat_data.shift(),
			this._chatBar.chat_data = new Array,
			this.closeStatus = !0,
			clearInterval(this.timer),
			this.timer = null,
			this.playNoticeSound = !1,
			this.current_banker = null,
			this.initBetTotalAmount(null),
			this.initMyBetAmount(),
			i._instance = null,
			t.KlineMasterBar._instance = null
		}
		,
		i.prototype.disconnectGameSocket = function() {
			null != this.game_socket && void 0 != this.game_socket && (this.canReconnect = !1,
			this.game_socket.disconnect(),
			this.game_socket = null)
		}
		,
		i.prototype.reOpen = function(t) {
			this.setRoomType(t),
			this.subInit(),
			this.closeStatus = !1
		}
		,
		i.prototype.subInit = function() {
			return this.user_info = Utils.getStorageObj(Keys.FK_UserInfo),
			null == this.user_info || void 0 == this.user_info || "" == this.user_info ? (this.destoryAll(),
			void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN)) : (this.user_id = this.user_info.user_id,
			this.token = this.user_info.access_token,
			null == this.user_id || null == this.token ? (this.destoryAll(),
			void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN)) : (this.lb_my_name.text = this.user_info.name,
			this.initSocket(),
			this.playNoticeSound = !0,
			this.showLoading(this),
			this._headerBar = t.HeaderBarV3.getInstance(!0),
			this._headerBar.game_model_type = this.game_model_type,
			this._headerBar.capital = this.capital,
			this._headerBar.setIsSim(this.is_sim),
			this.groupHeader.addChild(this._headerBar),
			this._headerBar.loadUserInfo(),
			this._headerBar.loadHeaderImage(),
			this._klineMasterBar = t.KlineMasterBar.getInstance(!0),
			this._klineMasterBar.user_id = this.user_id,
			this._klineMasterBar.token = this.token,
			this._klineMasterBar.x = 4,
			this._klineMasterBar.y = 0,
			this.kline_group.addChild(this._klineMasterBar),
			this.content_group.setChildIndex(this.kline_group, 99),
			this.content_group.setChildIndex(this.group_bet, 110),
			this.content_group.setChildIndex(this.group_you_win, 120),
			this._chatBar = t.ChatBar.getInstance(!0),
			this._chatBar.setOptions({
				room_id: this.room_id,
				user_info: this.user_info,
				user_id: this.user_id,
				token: this.user_info.access_token
			}),
			this._chatBar.initSocket(),
			this.showUserNotice(),
			this.content_group.setChildIndex(this.group_message_norice, 100),
			this.timerCheckReadStatus = setInterval(function(e) {
				e.gameSocketReady && e.gameRoundReady && e._klineMasterBar.kline_socket.getKlineSocketStatus() ? (GameLayerManager.gameLayer().mainLayer.$children.length > 1 && (GameLayerManager.gameLayer().mainLayer.removeChildAt(1),
				t.HeaderBarV3.getInstance(!0).showTopupAnimation()),
				e.firstLoadingComplete || (e.firstLoadingComplete = !0,
				e.getBankers(),
				e.getSeats(),
				e.getEwallet(),
				e.change_inform && e.showChangeInform()),
				e.closeLoading(e)) : e.showLoading(e)
			}, 1e3, this),
			this.userNoticeTimer = setInterval(function(t) {
				t.showUserNotice()
			}, 5500, this),
			this.getCapitalOddsList(),
			this.initBetAmount(),
			void this.getMessageList()))
		}
		,
		i.prototype.showChangeInform = function() {
			var e = "您已成功切换到实盘"
			  , i = [{
				text: e,
				style: {
					textColor: 16777215,
					size: 32
				}
			}]
			  , n = []
			  , a = new eui.Group;
			a.name = "childGroupTips",
			a.width = 520,
			a.height = 240,
			a.x = 75,
			a.y = 120;
			var s = new eui.Label
			  , o = new eui.Label;
			s.width = a.width,
			s.textAlign = egret.HorizontalAlign.CENTER,
			s.textFlow = i,
			o.width = a.width,
			o.textAlign = egret.HorizontalAlign.LEFT,
			o.multiline = !0,
			o.lineSpacing = 8,
			o.textFlow = n,
			s.y = (a.height - s.height - o.height - 5) / 2,
			o.height > 0 && (s.y = s.y - 15),
			s.height > 0 ? o.y = s.y + s.height : o.y = s.y + 30 + s.height,
			a.addChild(s),
			a.addChild(o);
			var r = {
				group: a,
				params: "",
				cancelable: !0
			};
			t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_TIP, r)
		}
		,
		i.prototype.initBetAmount = function() {
			this.bet_amount = Utils.getStorageObj(Keys.FK_BET_AMOUNT),
			null == this.bet_amount && this.bet_amount <= 0 && (this.bet_amount = 100),
			this.bet_amount > 5e3 && (this.bet_amount = 100),
			10 == this.bet_amount ? (this.btn_bet_amount_1.enabled = !1,
			this.btn_bet_amount_2.enabled = !0,
			this.btn_bet_amount_3.enabled = !0,
			this.btn_bet_amount_4.enabled = !0,
			this.lb_bet_amount_1.y = 522) : 100 == this.bet_amount ? (this.btn_bet_amount_1.enabled = !0,
			this.btn_bet_amount_2.enabled = !1,
			this.btn_bet_amount_3.enabled = !0,
			this.btn_bet_amount_4.enabled = !0,
			this.lb_bet_amount_2.y = 522) : 1e3 == this.bet_amount ? (this.btn_bet_amount_1.enabled = !0,
			this.btn_bet_amount_2.enabled = !0,
			this.btn_bet_amount_3.enabled = !1,
			this.btn_bet_amount_4.enabled = !0,
			this.lb_bet_amount_3.y = 522) : 5e3 == this.bet_amount && (this.btn_bet_amount_1.enabled = !0,
			this.btn_bet_amount_2.enabled = !0,
			this.btn_bet_amount_3.enabled = !0,
			this.btn_bet_amount_4.enabled = !1,
			this.lb_bet_amount_4.y = 522)
		}
		,
		i.prototype.showUserNotice = function() {
			var t = this
			  , e = null;
			return 0 == Main.noticeList.length ? void (this.currentNoticeIndex = 0) : (this.currentNoticeIndex >= Main.noticeList.length && (this.currentNoticeIndex = 0),
			e = Main.noticeList[this.currentNoticeIndex],
			void (null != e && (1 == e.type ? this.lb_notice.text = e.name + ": " + e.message : this.lb_notice.text = e.message,
			this.lb_notice.x = 719,
			egret.Tween.get(this.lb_notice, {
				loop: !1
			}).to({
				x: -1 * this.lb_notice.width
			}, 5e3).call(function() {
				if (null != Main.noticeList[t.currentNoticeIndex] && (Main.noticeList[t.currentNoticeIndex].is_show = !0,
				t.currentNoticeIndex++,
				Main.noticeList.length > 20))
					for (var e = 0; e < Main.noticeList.length - 20; e++)
						Main.noticeList[e].is_show && Main.noticeList.splice(e, 1)
			}))))
		}
		,
		i.prototype.setClickListener = function() {
			var e = this;
			this.btn_banker.addEventListener(egret.TouchEvent.TOUCH_TAP, this.Banker, this),
			this.img_dragon.addEventListener(egret.TouchEvent.TOUCH_TAP, this.clickDragon, this),
			this.btn_bet_amount_1.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeBetAmount, this),
			this.btn_bet_amount_2.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeBetAmount, this),
			this.btn_bet_amount_3.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeBetAmount, this),
			this.btn_bet_amount_4.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeBetAmount, this),
			this.group_banker_help.addEventListener(egret.TouchEvent.TOUCH_END, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
				t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_HEPL_DIALOG)
			}, this),
			this.img_notice.addEventListener(egret.TouchEvent.TOUCH_BEGIN, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
				t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_USER_NOTICE)
			}, this),
			this.btnBankerTipToup.addEventListener(egret.TouchEvent.TOUCH_BEGIN, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
				e.groupBankerTip.visible = !1,
				t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_SHOP, "G")
			}, this),
			this.imgBankerTipClose.addEventListener(egret.TouchEvent.TOUCH_BEGIN, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
				e.groupBankerTip.visible = !1
			}, this),
			this.img_history.addEventListener(egret.TouchEvent.TOUCH_BEGIN, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1);
				var e = "N";
				t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_MY_CLASSICAL_SETTLE_HISTORY, e)
			}, this),
			this.group_history.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1);
				var i = {
					room_id: e.room_id
				};
				t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_CLASSICAL_HISTORY, i)
			}, this)
		}
		,
		i.prototype.changeBetAmount = function(e) {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().change_bet_amount_sound_ready && t.SceneTrade.getInstance().change_bet_amount_sound.play(0, 1),
			this.bet_amount = e.currentTarget.name,
			10 == this.bet_amount ? (this.btn_bet_amount_1.enabled = !1,
			this.btn_bet_amount_2.enabled = !0,
			this.btn_bet_amount_3.enabled = !0,
			this.btn_bet_amount_4.enabled = !0,
			this.lb_bet_amount_1.y = 522,
			this.lb_bet_amount_2.y = 512,
			this.lb_bet_amount_3.y = 512,
			this.lb_bet_amount_4.y = 512) : 100 == this.bet_amount ? (this.btn_bet_amount_1.enabled = !0,
			this.btn_bet_amount_2.enabled = !1,
			this.btn_bet_amount_3.enabled = !0,
			this.btn_bet_amount_4.enabled = !0,
			this.lb_bet_amount_1.y = 512,
			this.lb_bet_amount_2.y = 522,
			this.lb_bet_amount_3.y = 512,
			this.lb_bet_amount_4.y = 512) : 1e3 == this.bet_amount ? (this.btn_bet_amount_1.enabled = !0,
			this.btn_bet_amount_2.enabled = !0,
			this.btn_bet_amount_3.enabled = !1,
			this.btn_bet_amount_4.enabled = !0,
			this.lb_bet_amount_1.y = 512,
			this.lb_bet_amount_2.y = 512,
			this.lb_bet_amount_3.y = 522,
			this.lb_bet_amount_4.y = 512) : 5e3 == this.bet_amount && (this.btn_bet_amount_1.enabled = !0,
			this.btn_bet_amount_2.enabled = !0,
			this.btn_bet_amount_3.enabled = !0,
			this.btn_bet_amount_4.enabled = !1,
			this.lb_bet_amount_1.y = 512,
			this.lb_bet_amount_2.y = 512,
			this.lb_bet_amount_3.y = 512,
			this.lb_bet_amount_4.y = 522)
		}
		,
		i.prototype.addActivate = function() {
			null != this.stage && (this.stage.removeEventListener(egret.Event.ACTIVATE, this.onResume, this),
			this.stage.addEventListener(egret.Event.ACTIVATE, this.onResume, this),
			this.stage.addEventListener(egret.Event.DEACTIVATE, this.onStop, this))
		}
		,
		i.prototype.onStop = function() {
			this.clearChip()
		}
		,
		i.prototype.onResume = function() {
			this.getLatestRoundDetail(),
			this.getBankers()
		}
		,
		i.prototype.getSettleResult = function(t) {
			var e = (t.period,
			t.win_odds);
			this.showSettleResult(e)
		}
		,
		i.prototype.showSettleResult = function(e, i) {
			void 0 === i && (i = !0),
			this.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().settle_result_sound_ready && t.SceneTrade.getInstance().settle_result_sound.play(0, 1);
			for (var n = this, a = null, s = null, o = 0; o < e.length; o++) {
				var r = e[o].order;
				0 == o ? a = e[o].id : s = e[o].id;
				var l = ""
				  , h = 0
				  , d = 0;
				if (0 == r || 2 == r ? (l = "rect_red_green_png",
				h = 219,
				d = 232) : 1 == r ? (l = "rect_equal_png",
				h = 131,
				d = 144) : (l = "rect_single_double_png",
				h = 151,
				d = 234),
				null == this.rect1) {
					this.rect1 = new eui.Image,
					this.rect1.source = RES.getRes(l),
					this.rect1.width = h,
					this.rect1.height = d,
					this.rect1.x = -8,
					this.rect1.y = -10,
					1 == r && (this.rect1.x = -3,
					this.rect1.y = -2),
					this.rect1.name = "rect";
					var _ = this.group_odds_array[e[o].id];
					_.addChild(this.rect1)
				} else {
					this.rect2 = new eui.Image,
					this.rect2.source = RES.getRes(l),
					this.rect2.width = h,
					this.rect2.height = d,
					this.rect2.x = -8,
					this.rect2.y = -10,
					1 == r && (this.rect1.x = -3,
					this.rect1.y = -2),
					this.rect2.name = "rect";
					var _ = this.group_odds_array[e[o].id];
					_.addChild(this.rect2)
				}
			}
			for (var p in this.group_bet_array) {
				var u = new eui.Image;
				p == a || p == s ? (u.source = RES.getRes("icon_classical_win_png"),
				u.width = 67,
				u.height = 75) : (u.source = RES.getRes("icon_classical_lose_png"),
				u.width = 49,
				u.height = 78),
				u.x = (this.group_bet_array[p].width - u.width) / 2,
				u.y = (this.group_bet_array[p].height - u.height) / 2,
				u.name = "img_settle",
				this.group_bet_array[p].addChild(u)
			}
			this.addEventListener(egret.Event.ENTER_FRAME, this.rectAnimation, this),
			setTimeout(function() {
				n.removeEventListener(egret.Event.ENTER_FRAME, this.rectAnimation, this);
				for (var t = 0; t < e.length; t++) {
					var i = n.group_odds_array[e[t].id];
					null != n.rect1 && i.contains(n.rect1) && (i.removeChild(n.rect1),
					n.rect1 = null),
					null != n.rect2 && i.contains(n.rect2) && (i.removeChild(n.rect2),
					n.rect2 = null)
				}
				for (var a in n.group_bet_array) {
					var s = n.group_bet_array[a].getChildByName("img_settle");
					null != s && n.group_bet_array[a].removeChild(s)
				}
			}, 5e3)
		}
		,
		i.prototype.showLoading = function(t) {
			if (null == t.loading_group) {
				t.loading_group = new eui.Group,
				t.loading_group.width = 719,
				t.loading_group.height = 1199,
				t.loading_group.verticalCenter = .5,
				t.loading_group.horizontalCenter = .5;
				var e = new egret.Sprite;
				e.graphics.clear(),
				e.graphics.beginFill(0, .6),
				e.graphics.drawRect(0, 0, GameConfig.curWidth(), GameConfig.curHeight()),
				e.graphics.endFill(),
				e.width = GameConfig.curWidth(),
				e.height = GameConfig.curHeight(),
				e.touchEnabled = !0,
				egret.Tween.get(e).to({
					alpha: 1
				}, 150),
				e.visible = !0,
				t.loading_group.addChild(e),
				null == t.loading_image && (t.loading_image = new eui.Image),
				t.loading_image.verticalCenter = .5,
				t.loading_image.horizontalCenter = .5,
				t.loading_image.source = RES.getRes("loading_run_png"),
				t.loading_image.anchorOffsetX = .5 * t.loading_image.width,
				t.loading_image.anchorOffsetY = .5 * t.loading_image.height,
				t.loading_group.addChild(t.loading_image)
			}
			GameLayerManager.gameLayer().effectLayer.contains(t.loading_group) || (GameLayerManager.gameLayer().effectLayer.addChild(t.loading_group),
			GameLayerManager.gameLayer().effectLayer.addEventListener(egret.Event.ENTER_FRAME, t.runLoading, t))
		}
		,
		i.prototype.runLoading = function(t) {
			this.loading_image.rotation += 3
		}
		,
		i.prototype.closeLoading = function(t) {
			GameLayerManager.gameLayer().effectLayer.contains(t.loading_group) && GameLayerManager.gameLayer().effectLayer.removeChild(t.loading_group),
			GameLayerManager.gameLayer().effectLayer.removeEventListener(egret.Event.ENTER_FRAME, t.runLoading, t)
		}
		,
		i.prototype.showStartBetNotice = function(e) {
			this.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().start_bet_sound_ready && t.SceneTrade.getInstance().start_bet_sound.play(0, 1);
			var i = new eui.Group
			  , n = new eui.Image;
			n.source = RES.getRes("icon_start_bet_png"),
			n.horizontalCenter = .5,
			n.verticalCenter = .5,
			n.height = 0,
			i.addChild(n),
			i.horizontalCenter = .5,
			i.y = 500,
			i.height = 642,
			i.width = 153,
			e.addChild(i),
			e.setChildIndex(i, 100),
			e.setChildIndex(e.groupBankerTip, 101),
			egret.Tween.get(n).to({
				height: 153
			}, 150),
			setTimeout(function(t) {
				egret.Tween.get(n).to({
					height: 0
				}, 150).call(function() {
					t.removeChild(i)
				})
			}, 1500, e)
		}
		,
		i.prototype.showTimeDownNotice = function(e) {
			var i = new eui.Group
			  , n = new eui.Image;
			n.source = RES.getRes("timer_down_num_3_png"),
			n.horizontalCenter = .5,
			n.verticalCenter = .5,
			n.height = 0,
			n.width = 330,
			i.addChild(n),
			i.horizontalCenter = .5,
			i.y = 180,
			i.height = 330,
			i.width = 330,
			e.addChild(i),
			e.setChildIndex(i, 100),
			e.setChildIndex(e.groupBankerTip, 101),
			e.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().count_down_sound_ready && t.SceneTrade.getInstance().count_down_sound.play(0, 1),
			egret.Tween.get(n).to({
				height: 330
			}, 150),
			setTimeout(function(e) {
				egret.Tween.get(n).to({
					height: 0
				}, 150).call(function() {
					e.removeChild(i),
					n.source = RES.getRes("timer_down_num_2_png"),
					i.addChild(n),
					e.addChild(i),
					e.setChildIndex(i, 100),
					e.setChildIndex(e.groupBankerTip, 101),
					e.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().count_down_sound_ready && t.SceneTrade.getInstance().count_down_sound.play(0, 1),
					egret.Tween.get(n).to({
						height: 330
					}, 150),
					setTimeout(function(e) {
						egret.Tween.get(n).to({
							height: 0
						}, 150).call(function() {
							e.removeChild(i),
							n.source = RES.getRes("timer_down_num_1_png"),
							i.addChild(n),
							e.addChild(i),
							e.setChildIndex(i, 100),
							e.setChildIndex(e.groupBankerTip, 101),
							e.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().count_down_sound_ready && t.SceneTrade.getInstance().count_down_sound.play(0, 1),
							egret.Tween.get(n).to({
								height: 330
							}, 150),
							setTimeout(function(t) {
								egret.Tween.get(n).to({
									height: 0
								}, 150).call(function() {
									t.removeChild(i)
								})
							}, 850, e)
						})
					}, 850, e)
				})
			}, 850, e)
		}
		,
		i.prototype.showStopBetNotice = function(e) {
			e.lb_win_amount.text = "0",
			this.contains(this.stopbet_group) && this.removeChild(this.stopbet_group),
			this.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().stop_bet_sound_ready && (t.SceneTrade.getInstance().stop_bet_clock.play(0, 1),
			t.SceneTrade.getInstance().stop_bet_sound.play(0, 1)),
			this.stopbet_group = new eui.Group;
			var i = new eui.Image;
			i.source = RES.getRes("icon_stop_bet_png"),
			i.horizontalCenter = .5,
			i.verticalCenter = .5,
			i.height = 0,
			this.stopbet_group.addChild(i),
			this.stopbet_group.horizontalCenter = .5,
			this.stopbet_group.y = 500,
			this.stopbet_group.height = 642,
			this.stopbet_group.width = 153,
			this.addChild(this.stopbet_group),
			this.setChildIndex(this.stopbet_group, 100),
			this.setChildIndex(this.groupBankerTip, 101),
			egret.Tween.get(i).to({
				height: 153
			}, 150),
			setTimeout(function(t) {
				egret.Tween.get(i).to({
					height: 0
				}, 150).call(function() {
					t.contains(t.stopbet_group) && t.removeChild(t.stopbet_group)
				})
			}, 1500, e)
		}
		,
		i.prototype.showBurstBankerNotice = function() {
			this.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().burst_banker_sound_ready && t.SceneTrade.getInstance().burst_banker_sound.play(0, 1);
			var e = this
			  , i = new eui.Image;
			i.source = RES.getRes("burst_png"),
			i.alpha = 0,
			i.scaleX = .5,
			i.scaleY = .5,
			i.width = 600,
			i.height = 624,
			i.x = (this.width - i.width) / 2,
			i.y = (this.height - i.height) / 2,
			i.horizontalCenter = "0",
			i.verticalCenter = "0",
			e.addChild(i),
			e.setChildIndex(i, 100),
			e.setChildIndex(e.groupBankerTip, 101),
			egret.Tween.get(i).to({
				alpha: 1,
				scaleX: 1,
				scaleY: 1
			}, 700, egret.Ease.backOut),
			setTimeout(function(t) {
				t.removeChild(i)
			}, 700, e)
		}
		,
		i.prototype.initSocket = function() {
			console.log("initSocket");
			var t = this;
			this.queryEntry(this.user_id, function(e, i) {
				t.host = e,
				t.port = i,
				t.firstInit()
			})
		}
		,
		i.prototype.queryEntry = function(t, e) {
			var i = new pomeloClient.Pomelo;
			i.on(CONST.CommonCommand.io_error, function() {}),
			i.init({
				host: GameConfig.SOCKET_HOST,
				port: GameConfig.SOCKET_PORT
			}, function() {
				var n = {
					uid: t,
					type: "game"
				};
				i.request(CONST.CommonCommand.gate, n),
				i.on(CONST.CommonCommand.gate, function(t) {
					i.disconnect(),
					500 != t.code && e(t.host, t.port)
				})
			})
		}
		,
		i.prototype.firstInit = function() {
			console.log("firstInit");
			var e = this;
			(null == this.game_socket || 0 == this.game_socket.connected()) && (null != this.game_socket && (this.game_socket.removeAllListeners(),
			this.disconnectGameSocket()),
			this.game_socket = new pomeloClient.Pomelo),
			this.game_socket.init({
				host: this.host,
				port: this.port
			}, function() {
				e.game_socket.request(CONST.GameCommand.init, {
					room_id: e.room_id,
					user_id: e.user_id,
					token: e.user_info.access_token
				})
			}),
			this.game_socket.on(CONST.GameCommand.init, function(t) {
				200 == t.code ? (e.gameSocketReady = !0,
				console.log("game ready"),
				e.canReconnect = !0,
				e.getLatestRoundDetail()) : e.enterRoomFailed()
			}),
			this.game_socket.on(CONST.CommonCommand.close, function() {
				e.gameSocketReady = !1,
				console.log("game socket closed"),
				e.canReconnect && setTimeout(function() {
					e.firstInit()
				}, 3e3)
			}),
			this.game_socket.on(CONST.CommonCommand.heartbeat_timeout, function() {
				e.gameSocketReady = !1
			}),
			this.game_socket.on(CONST.CommonCommand.io_error, function() {
				e.gameSocketReady = !1,
				console.error("game socket error"),
				setTimeout(function() {
					e.firstInit()
				}, 3e3)
			}),
			this.game_socket.on(CONST.GameCommand.new_banker, function(t) {
				e.getBankers()
			}),
			this.game_socket.on(CONST.GameCommand.off_banker, function(t) {
				e.getBankers()
			}),
			this.game_socket.on(CONST.GameCommand.new_round, function(t) {
				e.getBankers(),
				e._klineMasterBar.removeSettleGroup(),
				t = JSON.parse(t),
				null != t.online_num && e.updateOnlineNum(t.online_num),
				e.initBetTotalAmount(null),
				e.initMyBetAmount(),
				null != t && (e.round_id = t.id,
				e.server_time = t.server_time,
				e.start_time = t.start_time,
				e.end_time = t.end_time,
				e.updateTimer(e, null, null),
				e.showStartBetNotice(e))
			}),
			this.game_socket.on(CONST.GameCommand.new_trade_grab, function(t) {
				t = JSON.parse(t),
				null != t && e.updateBetTotalAmount(t)
			}),
			this.game_socket.on(CONST.GameCommand.create_trade, function(i) {
				i = i.body,
				i = JSON.parse(i),
				1 == i.status ? (e.betChipAnima(e.lb_my_balance.x, e.lb_my_balance.y, i.trade_amount, i.capital_odds_id),
				e.updateMyBetAmount(i.capital_odds_id, i.trade_amount),
				e.updateBetTotalAmountForSelf(i.capital_odds_id, i.trade_amount),
				e.gold_balance = i.balance,
				e.lb_my_balance.text = Utils.moneyFormat(e.gold_balance, 2).toString(),
				e._headerBar.updateBalance(e.gold_balance)) : 0 == i.status ? Toast.launch(i.message, -100) : -1 == i.status && (e.destoryAll(),
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN))
			}),
			this.game_socket.on(CONST.GameCommand.seat_trade, function(t) {
				if (t = t.body,
				t = JSON.parse(t),
				1 == t.status) {
					var i = t.user_id
					  , n = t.seat_type
					  , a = e.group_sit_array[n - 1].getChildByName("seat_balance");
					i != e.user_id ? (e.betChipAnima(e.group_sit_array[n - 1].x, e.group_sit_array[n - 1].y, t.trade_amount, t.capital_odds_id),
					e.updateBetTotalAmountForSelf(t.capital_odds_id, t.trade_amount),
					null != a && (a.text = Utils.moneyFormat(t.balance, 2))) : null != a && (a.text = Utils.moneyFormat(e.gold_balance, 2))
				}
			}),
			this.game_socket.on(CONST.GameCommand.begin_settle_grab, function(t) {
				t = JSON.parse(t),
				null != t && (t.burst_banker && e.showBurstBankerNotice(),
				e.seats_trade = t.seats_trade,
				e.win_total_amount = t.win_total_amount,
				e.lose_total_amount = t.lose_total_amount,
				e.total_bet_amount = t.total_bet_amount,
				e.win_odds = t.win_odds,
				e.win_total_net_amount = t.win_total_net_amount,
				e.chipFromBetToBanker(e.win_odds))
			}),
			this.game_socket.on(CONST.GameCommand.new_settle_grab, function(t) {
				if (t = JSON.parse(t),
				null != t) {
					var i = t.profit;
					if (i > 0) {
						Utils.moneyFormat(i, 2)
					}
					e.win_amount = i,
					e.getEwallet()
				}
			}),
			this.game_socket.on(CONST.GameCommand.big_winner, function(i) {
				i = JSON.parse(i),
				null != i.big_winner && (t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_BIG_WINNER, i.big_winner),
				setTimeout(function() {
					t.AppFacade.getInstance().sendNotification(PanelNotify.CLOSE_BIG_WINNER)
				}, 8e3),
				e.calculateProfit(e.win_odds, i.big_winner))
			}),
			this.game_socket.on(CONST.GameCommand.apply_banker, function(t) {
				e.getBankers()
			}),
			this.game_socket.on(CONST.GameCommand.off_banker_queue, function(t) {
				e.getBankers()
			}),
			this.game_socket.on(CONST.GameCommand.get_pots, function(t) {
				null != t && (t = t.body,
				t = JSON.parse(t),
				1 == t.status && (e.pots_balance = t.result.balance,
				e.showPots()))
			}),
			this.game_socket.on(CONST.GameCommand.get_banker, function(t) {
				if (null != t) {
					if (t = t.body,
					t = JSON.parse(t),
					e.current_banker = null,
					e.banker_queue_data = null,
					e.banker_queue_data = new Array,
					1 == t.status) {
						var i = t.result.bankers;
						if (null != i && i.length > 0) {
							e.my_banker_queue_order = 0;
							for (var n = 0; n < i.length; n++) {
								var a = i[n];
								a.status == e.BANKER_STATUS_APPLY_OFF_BANKER || a.status == e.BANKER_STATUS_BANKING ? e.current_banker = a : a.status == e.BANKER_STATUS_PENDING && (e.banker_queue_data.push({
									balance: a.balance,
									user_name: a.name,
									user_avatar: a.avatar_url,
									vip_grade: a.vip_grade
								}),
								a.user_id == e.user_id && (e.my_banker_queue_order = n))
							}
						}
						e.is_banker = !1;
						var s = null;
						null != t.result.status && "" != t.result.status && (s = t.result.status.status),
						null != s && "" != s ? s == e.BANKER_STATUS_PENDING ? (e.btn_banker.img.texture = RES.getRes("btn_off_banker_png"),
						e.btn_banker.name = "1",
						0 == e.my_banker_queue_order && (e.my_banker_queue_order = 11)) : s == e.BANKER_STATUS_BANKING ? (e.btn_banker.img.texture = RES.getRes("btn_off_banker_png"),
						e.is_banker = !0,
						e.btn_banker.name = "1") : s == e.BANKER_STATUS_APPLY_OFF_BANKER && (e.btn_banker.img.texture = RES.getRes("btn_apply_banker_png"),
						e.is_banker = !0,
						e.btn_banker.name = "0") : (e.btn_banker.img.texture = RES.getRes("btn_apply_banker_png"),
						e.btn_banker.name = "0")
					} else
						e.btn_banker.img.texture = RES.getRes("btn_apply_banker_png"),
						e.btn_banker.name = "0";
					null != e.current_banker ? e.showBanker() : e.getPots(),
					e.getEwallet()
				}
			}),
			this.game_socket.on(CONST.GameCommand.get_ewallet, function(t) {
				if (null != t && (t = t.body,
				t = JSON.parse(t),
				1 == t.status)) {
					var i = t.result;
					i.length > 0 && (e.gold_balance = i[0].balance,
					e.win_amount <= 0 ? e.lb_my_balance.text = Utils.moneyFormat(e.gold_balance, 2).toString() : e.showWinAmount(e),
					e._headerBar.updateBalance(i[0].balance))
				}
			}),
			this.game_socket.on(CONST.GameCommand.sitdown, function(t) {
				null != t && (t = t.body,
				t = JSON.parse(t),
				1 == t.status ? e.getEwallet() : Toast.launch(t.message, -100))
			}),
			this.game_socket.on(CONST.GameCommand.standup, function(t) {}),
			this.game_socket.on(CONST.GameCommand.get_seats, function(t) {
				null != t && (t = t.body,
				t = JSON.parse(t),
				1 == t.status ? e.seats_data = t.result : e.seats_data = null,
				e.refreshSeats())
			}),
			this.game_socket.on(CONST.GameCommand.capital_close, function(e) {
				e = JSON.parse(e),
				Toast.launch("该资产已休市，游戏关闭", 0),
				setTimeout(function() {
					t.SceneTrade.getInstance().stopGrabSound(),
					t.SceneTrade.getInstance().playBgSound(),
					t.AppFacade.getInstance().sendNotification(MainNotify.CLOSE_CLASSICAL);
					var i = {
						reload: !0,
						game_model_type: e.game_model_type
					};
					t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_CAPITAL_LIST, i),
					t.HeaderBar.getInstance(!0).loadEwallet()
				}, 3e3)
			}),
			this.game_socket.on(CONST.GameCommand.game_notice, function(t) {})
		}
		,
		i.prototype.showWinAmount = function(t) {
			parseFloat(t.win_amount);
			t.win_amount > 0 && (t.lb_win_amount.text = parseFloat(parseFloat(t.win_amount).toFixed(0)).toString(),
			t.win_amount = 0)
		}
		,
		i.prototype.showYouWin = function(t, e) {
			var i = this;
			this.lb_you_win_name.visible = !0,
			this.lb_you_win_amount_1.visible = !0,
			this.lb_you_win_amount_2.visible = !0,
			this.lb_you_win_amount_2.text = "+ " + parseFloat(t),
			null != e ? (this.lb_you_win_name.text = Utils.getLimitUserName(e.name, 12),
			null != e.profit && "" != e.profit ? this.lb_you_win_amount_1.text = "+" + parseFloat(e.profit) : this.lb_you_win_amount_1.text = "") : (this.lb_you_win_name.text = "",
			this.lb_you_win_amount_1.text = ""),
			this.lb_you_win_amount_1.x = this.lb_you_win_name.x + this.lb_you_win_name.width + 20,
			void 0 == e.avatar_url || null == e.avatar_url || "" == e.avatar_url ? (this.img_you_win_avatar.source = RES.getRes("person_png"),
			this.img_you_win_avatar.visible = !0) : this.loadYouWinImage(e.avatar_url),
			this.group_you_win.visible = !0,
			egret.Tween.get(this.bg_you_win).to({
				height: 350
			}, 150),
			setTimeout(function() {
				i.lb_you_win_name.visible = !1,
				i.img_you_win_avatar.visible = !1,
				i.lb_you_win_amount_1.visible = !1,
				i.lb_you_win_amount_2.visible = !1,
				egret.Tween.get(i.bg_you_win).to({
					height: 0
				}, 150).call(function() {
					i.group_you_win.visible = !1
				})
			}, 3e3, i)
		}
		,
		i.prototype.loadYouWinImage = function(t) {
			var e = new egret.ImageLoader;
			e.addEventListener(egret.Event.COMPLETE, this.youWinImageLoadCompleteHandler, this),
			e.load(t)
		}
		,
		i.prototype.youWinImageLoadCompleteHandler = function(t) {
			var e = t.currentTarget;
			this.img_you_win_avatar.bitmapData = e.data,
			this.img_you_win_avatar.visible = !0
		}
		,
		i.prototype.initKline = function() {
			this._klineMasterBar.setOptions({
				Capital: this.capital,
				Diff: 30,
				odds: this.capital_odds
			}),
			this._klineMasterBar.initSocket()
		}
		,
		i.prototype.updateKline = function() {
			var t = this._klineMasterBar.getOptions();
			this._klineMasterBar.setOptions({
				Capital: this.capital,
				Diff: t.Diff
			}),
			this._klineMasterBar.initKlineSocket(this.capital, t.Diff)
		}
		,
		i.prototype.initIntervalOdds = function() {
			if (null != this.capital_odds) {
				this.group_sit_array[0] = this.group_sit_0,
				this.group_sit_array[1] = this.group_sit_1,
				this.group_sit_array[2] = this.group_sit_2,
				this.group_sit_array[3] = this.group_sit_3,
				this.group_sit_array[4] = this.group_sit_4,
				this.group_sit_array[5] = this.group_sit_5;
				for (var t in this.group_sit_array)
					this.group_sit_array[t].addEventListener(egret.TouchEvent.TOUCH_TAP, this.sitDown, this);
				this.lb_bet_total_amount_array[this.capital_odds[0].id] = this.lb_bet_total_amount_0,
				this.lb_bet_total_amount_array[this.capital_odds[1].id] = this.lb_bet_total_amount_1,
				this.lb_bet_total_amount_array[this.capital_odds[2].id] = this.lb_bet_total_amount_2,
				this.lb_bet_total_amount_array[this.capital_odds[3].id] = this.lb_bet_total_amount_3,
				this.lb_bet_total_amount_array[this.capital_odds[4].id] = this.lb_bet_total_amount_4,
				this.lb_bet_total_amount_array[this.capital_odds[5].id] = this.lb_bet_total_amount_5,
				this.lb_bet_total_amount_array[this.capital_odds[6].id] = this.lb_bet_total_amount_6,
				this.bet_total_amount_array[this.capital_odds[0].id] = 0,
				this.bet_total_amount_array[this.capital_odds[1].id] = 0,
				this.bet_total_amount_array[this.capital_odds[2].id] = 0,
				this.bet_total_amount_array[this.capital_odds[3].id] = 0,
				this.bet_total_amount_array[this.capital_odds[4].id] = 0,
				this.bet_total_amount_array[this.capital_odds[5].id] = 0,
				this.bet_total_amount_array[this.capital_odds[6].id] = 0,
				this.lb_my_bet_amount_array[this.capital_odds[0].id] = this.lb_my_bet_0,
				this.lb_my_bet_amount_array[this.capital_odds[1].id] = this.lb_my_bet_1,
				this.lb_my_bet_amount_array[this.capital_odds[2].id] = this.lb_my_bet_2,
				this.lb_my_bet_amount_array[this.capital_odds[3].id] = this.lb_my_bet_3,
				this.lb_my_bet_amount_array[this.capital_odds[4].id] = this.lb_my_bet_4,
				this.lb_my_bet_amount_array[this.capital_odds[5].id] = this.lb_my_bet_5,
				this.lb_my_bet_amount_array[this.capital_odds[6].id] = this.lb_my_bet_6,
				this.my_bet_amount_array[this.capital_odds[0].id] = 0,
				this.my_bet_amount_array[this.capital_odds[1].id] = 0,
				this.my_bet_amount_array[this.capital_odds[2].id] = 0,
				this.my_bet_amount_array[this.capital_odds[3].id] = 0,
				this.my_bet_amount_array[this.capital_odds[4].id] = 0,
				this.my_bet_amount_array[this.capital_odds[5].id] = 0,
				this.my_bet_amount_array[this.capital_odds[6].id] = 0,
				this.group_odds_0.name = this.capital_odds[0].id,
				this.group_odds_1.name = this.capital_odds[1].id,
				this.group_odds_2.name = this.capital_odds[2].id,
				this.group_odds_3.name = this.capital_odds[3].id,
				this.group_odds_4.name = this.capital_odds[4].id,
				this.group_odds_5.name = this.capital_odds[5].id,
				this.group_odds_6.name = this.capital_odds[6].id,
				this.group_odds_array[this.capital_odds[0].id] = this.group_odds_0,
				this.group_odds_array[this.capital_odds[1].id] = this.group_odds_1,
				this.group_odds_array[this.capital_odds[2].id] = this.group_odds_2,
				this.group_odds_array[this.capital_odds[3].id] = this.group_odds_3,
				this.group_odds_array[this.capital_odds[4].id] = this.group_odds_4,
				this.group_odds_array[this.capital_odds[5].id] = this.group_odds_5,
				this.group_odds_array[this.capital_odds[6].id] = this.group_odds_6,
				this.group_bet_array[this.capital_odds[0].id] = this.group_odds_0,
				this.group_bet_array[this.capital_odds[1].id] = this.group_odds_1,
				this.group_bet_array[this.capital_odds[2].id] = this.group_odds_2,
				this.group_bet_array[this.capital_odds[3].id] = this.group_odds_3,
				this.group_bet_array[this.capital_odds[4].id] = this.group_odds_4,
				this.group_bet_array[this.capital_odds[5].id] = this.group_odds_5,
				this.group_bet_array[this.capital_odds[6].id] = this.group_odds_6;
				for (var e in this.group_bet_array)
					this.group_bet_array[e].addEventListener(egret.TouchEvent.TOUCH_TAP, this.bet, this);
				this.lb_bet_total_amount_0.name = this.capital_odds[0].id,
				this.lb_bet_total_amount_1.name = this.capital_odds[1].id,
				this.lb_bet_total_amount_2.name = this.capital_odds[2].id,
				this.lb_bet_total_amount_3.name = this.capital_odds[3].id,
				this.lb_bet_total_amount_4.name = this.capital_odds[4].id,
				this.lb_bet_total_amount_5.name = this.capital_odds[5].id,
				this.lb_bet_total_amount_6.name = this.capital_odds[6].id,
				this.lb_my_bet_0.name = this.capital_odds[0].id,
				this.lb_my_bet_1.name = this.capital_odds[1].id,
				this.lb_my_bet_2.name = this.capital_odds[2].id,
				this.lb_my_bet_3.name = this.capital_odds[3].id,
				this.lb_my_bet_4.name = this.capital_odds[4].id,
				this.lb_my_bet_5.name = this.capital_odds[5].id,
				this.lb_my_bet_6.name = this.capital_odds[6].id,
				this.profit_8_array[0] = [],
				this.profit_8_array[1] = [],
				this.profit_8_array[2] = [],
				this.profit_8_array[3] = [],
				this.profit_8_array[4] = [],
				this.profit_8_array[5] = [],
				this.profit_8_array[6] = [],
				this.profit_8_array[7] = []
			}
		}
		,
		i.prototype.startBet = function(t) {
			t.can_bet = !0
		}
		,
		i.prototype.stopBet = function(t) {
			t.can_bet = !1
		}
		,
		i.prototype.initBetTotalAmount = function(t) {
			for (var e in this.lb_bet_total_amount_array)
				this.lb_bet_total_amount_array[e].text = "";
			for (var i in this.bet_total_amount_array)
				this.bet_total_amount_array[i] = 0;
			if (this.totalBetAmount = 0,
			this.clearChip(),
			null != t)
				for (var n = 0; n < t.length; n++) {
					var a = t[n];
					if (this.bet_total_amount_array[a.capital_odds_id] = parseFloat(this.bet_total_amount_array[a.capital_odds_id]) + parseFloat(a.total_amount),
					this.lb_bet_total_amount_array[a.capital_odds_id].text = Utils.moneyFormat(this.bet_total_amount_array[a.capital_odds_id], 2),
					this.totalBetAmount += parseFloat(a.total_amount),
					a.total_amount > 0)
						for (var s = this.splitTradeChip(null, null, null, null, a.total_amount, a.capital_odds_id), o = 0; o < s.length; o++) {
							var r = s[o];
							r.x = r.end_x,
							r.y = r.end_y,
							this.group_bet.addChild(r)
						}
				}
			this._klineMasterBar.updateTotalBetAmount(this.totalBetAmount)
		}
		,
		i.prototype.updateBetTotalAmount = function(t) {
			if (null != t && t.length > 0) {
				this.totalBetAmount = 0;
				for (var e in t) {
					var i = t[e].id
					  , n = t[e].amount;
					if (this.totalBetAmount = this.totalBetAmount + parseFloat(n),
					(null == this.bet_total_amount_array[i] || "" == this.bet_total_amount_array[i]) && (this.bet_total_amount_array[i] = 0),
					n > this.bet_total_amount_array[i]) {
						this.onlineGroupBetAnima();
						var a = this.splitTradeChip(this.group_online.x, this.group_online.y, null, null, n - this.bet_total_amount_array[i], i)
						  , s = 0;
						this.flyChipArray(a, this.group_bet, 0, s, !1, 400, null)
					}
					this.bet_total_amount_array[i] = parseFloat(n),
					null != this.lb_bet_total_amount_array[i] && (this.lb_bet_total_amount_array[i].text = Utils.moneyFormat(this.bet_total_amount_array[i], 2))
				}
				this._klineMasterBar.updateTotalBetAmount(this.totalBetAmount)
			}
		}
		,
		i.prototype.updateBetTotalAmountForSelf = function(t, e) {
			this.bet_total_amount_array[t] = parseFloat(this.bet_total_amount_array[t]) + parseFloat(e),
			null != this.lb_bet_total_amount_array[t] && (this.lb_bet_total_amount_array[t].text = Utils.moneyFormat(this.bet_total_amount_array[t], 2))
		}
		,
		i.prototype.initMyBetAmount = function() {
			for (var t in this.lb_my_bet_amount_array)
				this.lb_my_bet_amount_array[t].text = "";
			for (var e in this.my_bet_amount_array)
				this.my_bet_amount_array[e] = 0
		}
		,
		i.prototype.updateMyBetAmount = function(t, e) {
			this.my_bet_amount_array[t] = parseFloat(this.my_bet_amount_array[t]) + parseFloat(e),
			this.lb_my_bet_amount_array[t].text = Utils.moneyFormat(this.my_bet_amount_array[t], 2)
		}
		,
		i.prototype.showBanker = function() {
			if (this.group_pots.visible = !1,
			this.group_banker_detail.visible = !0,
			this.group_banker_avatar.visible = !0,
			null != this.current_banker) {
				if (void 0 == this.current_banker.avatar_url || null == this.current_banker.avatar_url || "" == this.current_banker.avatar_url) {
					var t = new egret.Bitmap(RES.getRes("person_png"));
					this.showAvatar(t)
				} else
					this.loadBankerImage(this.current_banker.avatar_url);
				this.banker_name.text = Utils.getLimitUserName(this.current_banker.name, 12),
				this.banker_balance.text = parseFloat(this.current_banker.banker_balance).toFixed(0);
				var e = this.current_banker.vip_grade;
				this.banker_vip.visible = !1,
				e > 0 && (this.banker_vip.visible = !0,
				this.banker_vip.source = RES.getRes("icon_vip_" + e + "_png"),
				this.banker_vip.x = (this.group_banker_name.width - this.banker_name.width) / 2 - 23)
			}
		}
		,
		i.prototype.showPots = function() {
			this.group_banker_detail.visible = !1,
			this.group_banker_avatar.visible = !1,
			this.group_pots.visible = !0,
			null == this.pots_balance && "" == this.pots_balance && (this.pots_balance = 0),
			this.lb_pots_balance.text = parseFloat(this.pots_balance).toFixed(0)
		}
		,
		i.prototype.loadBankerImage = function(t) {
			var e = new egret.ImageLoader;
			e.addEventListener(egret.Event.COMPLETE, this.bankerImageLoadCompleteHandler, this),
			e.load(t)
		}
		,
		i.prototype.bankerImageLoadCompleteHandler = function(t) {
			var e = t.currentTarget
			  , i = new egret.Bitmap(e.data);
			this.showAvatar(i)
		}
		,
		i.prototype.showAvatar = function(t) {
			t.x = 16,
			t.y = 30,
			t.width = 98,
			t.height = 98,
			this.group_banker_avatar.addChild(t);
			var e = new egret.Shape;
			e.graphics.beginFill(255),
			e.graphics.drawCircle(49, 49, 49),
			e.graphics.endFill(),
			e.x = 16,
			e.y = 30,
			this.group_banker_avatar.addChild(e),
			t.mask = e;
			var i = new eui.Image;
			i.source = RES.getRes("bg_classical_banker_avatar_png"),
			i.width = 114,
			i.height = 109,
			i.x = 7,
			i.y = 24,
			this.group_banker_avatar.addChild(i),
			this.group_banker_avatar.setChildIndex(this.group_banker_name, 1e3),
			this.group_bet.setChildIndex(this.btn_banker, 1e3)
		}
		,
		i.prototype.getBankers = function() {
			this.game_socket && this.game_socket.request(CONST.GameCommand.get_banker, {
				user_id: this.user_id,
				game_room_id: this.room_id
			})
		}
		,
		i.prototype.getPots = function() {
			this.game_socket && this.game_socket.request(CONST.GameCommand.get_pots, {
				user_id: this.user_id,
				game_room_id: this.room_id,
				token: this.token
			})
		}
		,
		i.prototype.clickDragon = function() {
			this.btn_banker.dispatchEventWith(egret.TouchEvent.TOUCH_TAP, !1, !1, !1)
		}
		,
		i.prototype.Banker = function(e) {
			var i = e.currentTarget.name;
			if (t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
			"0" == i) {
				var n = this
				  , a = {
					callback: function() {
						n.applyBanker()
					},
					balance: this.gold_balance,
					banker_queue: this.banker_queue_data
				};
				t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_CLASSICAL_BANKER_QUEUE, a)
			} else
				"1" == i && (this.is_banker ? this.offBanker() : this.offBankerQueue())
		}
		,
		i.prototype.applyBanker = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1);
			var e = new eui.ArrayCollection;
			e.addItem({
				key: "game_room_id",
				value: this.room_id
			}),
			e.addItem({
				key: "round_id",
				value: this.round_id
			}),
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "trade/applyBanker", e, this.onApplyBankerComplete, this.onApplyBankerIOError, this.onApplyBankerProgress, this)
		}
		,
		i.prototype.onApplyBankerComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_APPLY_BANKER_SUCCESS) {
				if (this.btn_banker.img.texture = RES.getRes("btn_off_banker_png"),
				this.btn_banker.name = "1",
				"banker" == n.message)
					var a = [{
						text: "上庄成功!",
						style: {
							textColor: 16777215,
							size: 50
						}
					}]
					  , s = [{
						text: "提示：",
						style: {
							textColor: 16777215,
							size: 28
						}
					}, {
						text: "按携带金币数量排序，金币最多者选为本期庄家",
						style: {
							textColor: 16597776,
							size: 28
						}
					}];
				else if ("51" == n.message)
					var a = [{
						text: "申请成功!\n",
						style: {
							textColor: 16777215,
							size: 50
						}
					}, {
						text: "(排序 >50 )",
						style: {
							textColor: 16597776,
							size: 28
						}
					}]
					  , s = [{
						text: "提示：",
						style: {
							textColor: 16777215,
							size: 28
						}
					}, {
						text: "按携带金币数量排序，金币最多者选为本期庄家",
						style: {
							textColor: 16597776,
							size: 28
						}
					}];
				else
					var a = [{
						text: "申请成功!\n",
						style: {
							textColor: 16777215,
							size: 50
						}
					}, {
						text: "(排序 " + n.message + " )",
						style: {
							textColor: 16597776,
							size: 28
						}
					}]
					  , s = [{
						text: "提示：",
						style: {
							textColor: 16777215,
							size: 28
						}
					}, {
						text: "按携带金币数量排序，金币最多者选为本期庄家",
						style: {
							textColor: 16597776,
							size: 28
						}
					}];
				var o = new eui.Group;
				o.name = "childGroupTips",
				o.width = 520,
				o.height = 240,
				o.x = 75,
				o.y = 120;
				var r = new eui.Label
				  , l = new eui.Label;
				r.width = o.width,
				r.textAlign = egret.HorizontalAlign.CENTER,
				r.textFlow = a,
				l.width = o.width,
				l.textAlign = egret.HorizontalAlign.LEFT,
				l.multiline = !0,
				l.lineSpacing = 8,
				l.textFlow = s,
				r.y = (o.height - r.height - l.height) / 2,
				l.height > 0 && (r.y = r.y - 15),
				l.y = r.y + 30 + r.height,
				o.addChild(r),
				o.addChild(l),
				this.showTip(o, "")
			} else {
				if (403 == n.type)
					return this.destoryAll(),
					void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				if (n.type == MessageCode.CODE_LESS_THAN_BANKER_MIN_AMOUNT)
					return void (this.groupBankerTip.visible = !0);
				var h = n.message
				  , a = [{
					text: "上庄失败!\n",
					style: {
						textColor: 16777215,
						size: 50
					}
				}, {
					text: "(" + h + ")",
					style: {
						textColor: 16597776,
						size: 28
					}
				}]
				  , s = []
				  , o = new eui.Group;
				o.name = "childGroupTips",
				o.width = 520,
				o.height = 240,
				o.x = 75,
				o.y = 120;
				var r = new eui.Label
				  , l = new eui.Label;
				r.width = o.width,
				r.textAlign = egret.HorizontalAlign.CENTER,
				r.textFlow = a,
				l.width = o.width,
				l.textAlign = egret.HorizontalAlign.LEFT,
				l.multiline = !0,
				l.lineSpacing = 8,
				l.textFlow = s,
				r.y = (o.height - r.height - l.height) / 2,
				l.height > 0 && (r.y = r.y - 15),
				l.y = r.y + 30 + r.height,
				o.addChild(r),
				o.addChild(l),
				this.showTip(o, "")
			}
		}
		,
		i.prototype.onApplyBankerIOError = function(t) {
			this.closeLoading(this),
			Toast.launch("网络异常,请检查您的网络设置.", -100)
		}
		,
		i.prototype.onApplyBankerProgress = function(t) {}
		,
		i.prototype.offBanker = function() {
			if (t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
			this.can_bet) {
				var e = [{
					text: "下庄失败!",
					style: {
						textColor: 16777215,
						size: 50
					}
				}]
				  , i = [{
					text: "提示：",
					style: {
						textColor: 16777215,
						size: 28
					}
				}, {
					text: "下注期间不能下庄，请在结算时间申请下庄，结算结束自动下庄。",
					style: {
						textColor: 16597776,
						size: 28
					}
				}]
				  , n = new eui.Group;
				n.name = "childGroupTips",
				n.width = 520,
				n.height = 240,
				n.x = 75,
				n.y = 120;
				var a = new eui.Label
				  , s = new eui.Label;
				return a.width = n.width,
				a.textAlign = egret.HorizontalAlign.CENTER,
				a.textFlow = e,
				s.width = n.width,
				s.textAlign = egret.HorizontalAlign.LEFT,
				s.multiline = !0,
				s.lineSpacing = 8,
				s.textFlow = i,
				a.y = (n.height - a.height - s.height) / 2,
				s.height > 0 && (a.y = a.y - 15),
				s.y = a.y + 30 + a.height,
				n.addChild(a),
				n.addChild(s),
				void this.showTip(n, "")
			}
			var o = new eui.ArrayCollection;
			o.addItem({
				key: "round_id",
				value: this.round_id
			}),
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "trade/offBanker", o, this.onOffBankerComplete, this.onOffBankerIOError, this.onOffBankerProgress, this)
		}
		,
		i.prototype.onOffBankerComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type != MessageCode.CODE_OFF_BANKER_SUCCESS) {
				if (403 == n.type)
					return this.destoryAll(),
					void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				var a = n.message
				  , s = [{
					text: "下庄失败!\n",
					style: {
						textColor: 16777215,
						size: 50
					}
				}, {
					text: "(" + a + ")",
					style: {
						textColor: 16597776,
						size: 28
					}
				}]
				  , o = []
				  , r = new eui.Group;
				r.name = "childGroupTips",
				r.width = 520,
				r.height = 240,
				r.x = 75,
				r.y = 120;
				var l = new eui.Label
				  , h = new eui.Label;
				return l.width = r.width,
				l.textAlign = egret.HorizontalAlign.CENTER,
				l.textFlow = s,
				h.width = r.width,
				h.textAlign = egret.HorizontalAlign.LEFT,
				h.multiline = !0,
				h.lineSpacing = 8,
				h.textFlow = o,
				l.y = (r.height - l.height - h.height) / 2,
				h.height > 0 && (l.y = l.y - 15),
				h.y = l.y + 30 + l.height,
				r.addChild(l),
				r.addChild(h),
				void this.showTip(r, "")
			}
			this.btn_banker.img.texture = RES.getRes("btn_apply_banker_png"),
			this.btn_banker.name = "0";
			var s = [{
				text: "下庄成功!\n",
				style: {
					textColor: 16777215,
					size: 50
				}
			}, {
				text: "(您已离开排庄队列)",
				style: {
					textColor: 16597776,
					size: 28
				}
			}]
			  , o = []
			  , r = new eui.Group;
			r.name = "childGroupTips",
			r.width = 520,
			r.height = 240,
			r.x = 75,
			r.y = 120;
			var l = new eui.Label
			  , h = new eui.Label;
			l.width = r.width,
			l.textAlign = egret.HorizontalAlign.CENTER,
			l.textFlow = s,
			h.width = r.width,
			h.textAlign = egret.HorizontalAlign.LEFT,
			h.multiline = !0,
			h.lineSpacing = 8,
			h.textFlow = o,
			l.y = (r.height - l.height - h.height) / 2,
			h.height > 0 && (l.y = l.y - 15),
			h.y = l.y + 30 + l.height,
			r.addChild(l),
			r.addChild(h),
			this.showTip(r, "")
		}
		,
		i.prototype.onOffBankerIOError = function(t) {}
		,
		i.prototype.onOffBankerProgress = function(t) {}
		,
		i.prototype.offBankerQueue = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1);
			var e = new eui.ArrayCollection;
			e.addItem({
				key: "game_room_id",
				value: this.room_id
			}),
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "trade/offBankerQueue", e, this.onoffBankerQueueComplete, this.onoffBankerQueueIOError, this.onoffBankerQueueProgress, this)
		}
		,
		i.prototype.onoffBankerQueueComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_OFF_BANKER_QUEUE_SUCCESS) {
				this.is_banker = !1,
				this.btn_banker.img.texture = RES.getRes("btn_apply_banker_png"),
				this.btn_banker.name = "0";
				var a = [{
					text: "下庄成功!\n",
					style: {
						textColor: 16777215,
						size: 50
					}
				}, {
					text: "(您已离开排庄队列)",
					style: {
						textColor: 16597776,
						size: 28
					}
				}]
				  , s = []
				  , o = new eui.Group;
				o.name = "childGroupTips",
				o.width = 520,
				o.height = 240,
				o.x = 75,
				o.y = 120;
				var r = new eui.Label
				  , l = new eui.Label;
				r.width = o.width,
				r.textAlign = egret.HorizontalAlign.CENTER,
				r.textFlow = a,
				l.width = o.width,
				l.textAlign = egret.HorizontalAlign.LEFT,
				l.multiline = !0,
				l.lineSpacing = 8,
				l.textFlow = s,
				r.y = (o.height - r.height - l.height) / 2,
				l.height > 0 && (r.y = r.y - 15),
				l.y = r.y + 30 + r.height,
				o.addChild(r),
				o.addChild(l),
				this.showTip(o, "")
			} else {
				if (403 == n.type)
					return this.destoryAll(),
					void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				var h = n.message
				  , a = [{
					text: "下庄失败!\n",
					style: {
						textColor: 16777215,
						size: 50
					}
				}, {
					text: "(" + h + ")",
					style: {
						textColor: 16597776,
						size: 28
					}
				}]
				  , s = []
				  , o = new eui.Group;
				o.name = "childGroupTips",
				o.width = 520,
				o.height = 240,
				o.x = 75,
				o.y = 120;
				var r = new eui.Label
				  , l = new eui.Label;
				r.width = o.width,
				r.textAlign = egret.HorizontalAlign.CENTER,
				r.textFlow = a,
				l.width = o.width,
				l.textAlign = egret.HorizontalAlign.LEFT,
				l.multiline = !0,
				l.lineSpacing = 8,
				l.textFlow = s,
				r.y = (o.height - r.height - l.height) / 2,
				l.height > 0 && (r.y = r.y - 15),
				l.y = r.y + 30 + r.height,
				o.addChild(r),
				o.addChild(l),
				this.showTip(o, "")
			}
		}
		,
		i.prototype.onoffBankerQueueIOError = function(t) {
			this.closeLoading(this),
			Toast.launch("网络异常,请检查您的网络设置.", -100)
		}
		,
		i.prototype.onoffBankerQueueProgress = function(t) {}
		,
		i.prototype.getLatestRoundDetail = function() {
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "game_room_id",
				value: this.room_id
			})
			this.gameRoundReady = !1,
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "round/getLatestRoundDetail", t, this.onGetLatestRoundDetailComplete, this.onGetLatestRoundDetailIOError, this.onGetLatestRoundDetailProgress, this)
		}
		,
		i.prototype.onGetLatestRoundDetailComplete = function(e) {
			this.gameRoundReady = !0;
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_ROUND_FOUND) {
				n = n.results;
				var a = n.round
				  , s = n.banker_trade_detail
				  , o = n.my_trade
				  , r = n.online_num;
				if (null != r && this.updateOnlineNum(r),
				null != a && (this.round_id = a.id,
				this.start_time = a.start_time,
				this.end_time = a.end_time,
				this.server_time = n.server_time,
				this.updateTimer(this, null, null)),
				this.initBetTotalAmount(s),
				this.initMyBetAmount(),
				null != o)
					for (var l in o) {
						var h = o[l].capital_odds_id
						  , d = o[l].trade_amount;
						this.my_bet_amount_array[h] = parseFloat(this.my_bet_amount_array[h]) + parseFloat(d),
						this.lb_my_bet_amount_array[h].text = Utils.moneyFormat(this.my_bet_amount_array[h], 2)
					}
			} else {
				if (403 == n.type)
					return this.destoryAll(),
					void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				var _ = this;
				this.closeStatus || setTimeout(function() {
					_.getLatestRoundDetail()
				}, 2e3, _)
			}
		}
		,
		i.prototype.onGetLatestRoundDetailIOError = function(t) {
			this.gameRoundReady = !0,
			this.closeLoading(this),
			Toast.launch("网络异常,请检查您的网络设置.", -100)
		}
		,
		i.prototype.onGetLatestRoundDetailProgress = function(t) {}
		,
		i.prototype.getCapitalOddsList = function() {
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "capital_key",
				value: this.capital
			})
			t.addItem({
				key: "game_model_type",
				value: 1
			})
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "trade/getCapitalOdds", t, this.onGetCapitalOddsListComplete, this.onGetCapitalOddsListIOError, this.onGetCapitalOddsListProgress, this)
		}
		,
		i.prototype.onGetCapitalOddsListComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_CAPITAL_ODDS_FOUND)
				this.capital_odds = n.results,
				this.initIntervalOdds(),
				this.getLatestRoundDetail(),
				this.initKline();
			else {
				if (403 == n.type)
					return this.destoryAll(),
					void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				var a = n.message;
				Toast.launch(a, -100)
			}
		}
		,
		i.prototype.onGetCapitalOddsListIOError = function(t) {
			this.closeLoading(this),
			Toast.launch("网络异常,请检查您的网络设置.", -100)
		}
		,
		i.prototype.onGetCapitalOddsListProgress = function(t) {}
		,
		i.prototype.checkTradeData = function(e) {
			return this.can_bet ? this.gold_balance < this.bet_amount ? (t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_FIRST_TOPUP),
			Toast.launch("余额不足", -100),
			!1) : null == this.round_id || "" == this.round_id ? (Toast.launch("未找到最新回合,请等待最新回合", -100),
			!1) : null == e || "" == e ? (Toast.launch("未找到该赔率", -100),
			!1) : !0 : !1
		}
		,
		i.prototype.getMessageList = function() {
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "user/getUserNotice", null, this.onGetMessageComplete, this.onGetMessageIOError, this.onGetMessageProgress, this)
		}
		,
		i.prototype.onGetMessageComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_GET_MESSAGE_SUCCESS)
				for (var a = n.results, s = a.length - 1; s >= 0; s--) {
					var o = a[s];
					Main.noticeList.push({
						user_id: o.user_id,
						message: o.message,
						name: o.name,
						type: o.type,
						is_show: !1
					})
				}
			else if (403 == n.type)
				this.destoryAll(),
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			else {
				n.message
			}
		}
		,
		i.prototype.onGetMessageIOError = function(t) {}
		,
		i.prototype.onGetMessageProgress = function(t) {}
		,
		i.prototype.sitDown = function(e) {
			var i = 0;
			for (var n in this.group_sit_array) {
				if (this.group_sit_array[n].name == this.user_id)
					return;
				if (e.currentTarget == this.group_sit_array[n]) {
					if (null != this.group_sit_array[n].name && "" != this.group_sit_array[n].name && "null" != this.group_sit_array[n].name)
						return;
					i = parseFloat(n) + 1
				}
			}
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().sit_sound_ready && t.SceneTrade.getInstance().sit_sound.play(0, 1),
			this.game_socket && i > 0 && this.game_socket.request(CONST.GameCommand.sitdown, {
				token: this.user_info.access_token,
				user_id: this.user_id,
				game_room_id: this.room_id,
				seat_type: i
			})
		}
		,
		i.prototype.standup = function(t) {
			var e = 0;
			for (var i in this.group_sit_array)
				if (t.currentTarget == this.group_sit_array[i]) {
					e = parseFloat(i) + 1;
					break
				}
			this.game_socket && this.game_socket.request(CONST.GameCommand.standup, {
				token: this.user_info.access_token,
				user_id: this.user_id,
				game_room_id: this.room_id,
				seat_type: e
			})
		}
		,
		i.prototype.getSeats = function() {
			this.game_socket && this.game_socket.request(CONST.GameCommand.get_seats, {
				token: this.user_info.access_token,
				user_id: this.user_id,
				game_room_id: this.room_id
			})
		}
		,
		i.prototype.refreshSeats = function() {
			if (null != this.seats_data)
				for (var t = 0; t < this.seats_data.length; t++) {
					var e = this.seats_data[t]
					  , i = e.user_id
					  , n = e.seat_type;
					if (null != i) {
						var a = e.name
						  , s = e.avatar_url;
						if (this.group_sit_array[n - 1].name == i) {
							var o = this.group_sit_array[n - 1].getChildByName("seat_balance");
							null != o && (o.text = Utils.moneyFormat(e.balance, 2).toString());
							continue
						}
						this.group_sit_array[n - 1].removeChildren(),
						this.group_sit_array[n - 1].name = i;
						var r = new eui.Image;
						r.source = RES.getRes("bg_banker_queue_png"),
						r.alpha = .7,
						r.width = 80,
						r.height = 20,
						r.x = 0,
						r.y = -20,
						r.visible = !1,
						this.group_sit_array[n - 1].addChild(r);
						var l = new eui.Label;
						l.text = a,
						l.size = 18,
						l.fontFamily = "Microsoft YaHei",
						l.horizontalCenter = "0",
						l.multiline = !1,
						l.textColor = 13294568,
						l.width = 80,
						l.height = 20,
						l.textAlign = "center",
						l.verticalAlign = "middle",
						l.x = r.x,
						l.y = r.y,
						this.group_sit_array[n - 1].addChild(l);
						var h = new eui.Image;
						h.source = RES.getRes("bg_seat_balance_png"),
						h.alpha = .7,
						h.width = 80,
						h.height = 20,
						h.x = 0,
						h.y = this.group_sit_array[n - 1].height - 10,
						this.group_sit_array[n - 1].addChild(h);
						var d = new eui.Label;
						if (d.text = Utils.moneyFormat(e.balance, 2).toString(),
						d.size = 18,
						d.textColor = 16366631,
						d.horizontalCenter = "0",
						d.multiline = !1,
						d.width = 80,
						d.height = 20,
						d.textAlign = "center",
						d.verticalAlign = "middle",
						d.x = h.x,
						d.y = h.y,
						d.name = "seat_balance",
						this.group_sit_array[n - 1].addChild(d),
						void 0 == s || null == s || "" == s) {
							var _ = new egret.Bitmap(RES.getRes("person_png"));
							this.showUserAvatar(_, this.group_sit_array[n - 1], r, l, h, d)
						} else
							this.loadImage(s, this.group_sit_array[n - 1], r, l, h, d)
					} else
						null != this.group_sit_array[n - 1] && (this.group_sit_array[n - 1].removeChildren(),
						this.group_sit_array[n - 1].name = null)
				}
		}
		,
		i.prototype.loadImage = function(t, e, i, n, a, s) {
			var o = this
			  , r = new egret.ImageLoader;
			r.addEventListener(egret.Event.COMPLETE, function(t) {
				var r = t.currentTarget
				  , l = new egret.Bitmap(r.data);
				o.showUserAvatar(l, e, i, n, a, s)
			}, this),
			r.load(t)
		}
		,
		i.prototype.ImageLoadCompleteHandler = function(t) {
			var e = t.currentTarget;
			new egret.Bitmap(e.data)
		}
		,
		i.prototype.showUserAvatar = function(t, e, i, n, a, s) {
			t.x = 1.5,
			t.y = 1.5,
			t.width = 76,
			t.height = 76,
			e.addChild(t);
			var o = new egret.Shape;
			o.graphics.beginFill(255),
			o.graphics.drawCircle(38, 38, 38),
			o.graphics.endFill(),
			o.x = 1.5,
			o.y = 1.5,
			e.addChild(o),
			t.mask = o,
			e.contains(t) && e.setChildIndex(t, 1),
			e.contains(o) && e.setChildIndex(o, 1),
			e.contains(i) && e.setChildIndex(i, 1e3),
			e.contains(n) && e.setChildIndex(n, 1001),
			e.contains(a) && e.setChildIndex(a, 1e3),
			e.contains(s) && e.setChildIndex(s, 1001)
		}
		,
		i.prototype.bet = function(e) {
			var i = e.currentTarget.name;
			this.checkTradeData(i) ? (t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().classical_bet_sound_ready && t.SceneTrade.getInstance().classical_bet_sound.play(0, 1),
			this.trade(this.bet_amount, i)) : t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().classical_un_bet_sound_ready && t.SceneTrade.getInstance().classical_un_bet_sound.play(0, 1)
		}
		,
		i.prototype.trade = function(t, e) {
			if (this.checkTradeData(e) && this.game_socket) {
				var i = null;
				null != this.current_banker && (i = this.current_banker.id),
				this.game_socket.request(CONST.GameCommand.create_trade, {
					token: this.user_info.access_token,
					user_id: this.user_id,
					round_id: this.round_id,
					trade_amount: t,
					banker_id: i,
					capital_odds_id: e,
					game_model_type: this.game_model_type
				})
			}
		}
		,
		i.prototype.getEwallet = function() {
			this.game_socket && ("Y" == this.is_sim ? this.game_socket.request(CONST.GameCommand.get_ewallet, {
				user_id: this.user_id,
				ewallet_type: "S"
			}) : this.game_socket.request(CONST.GameCommand.get_ewallet, {
				user_id: this.user_id,
				ewallet_type: "G"
			}))
		}
		,
		i.prototype.updateBalance = function(t) {
			this.lb_my_balance.text = parseFloat(parseFloat(t).toFixed(2)).toString(),
			this.gold_balance = t
		}
		,
		i.prototype.showShop = function(e) {
			t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_SHOP, e)
		}
		,
		i.prototype.updateTimer = function(e, i, n) {
			null == i && (i = e.server_time);
			var a = 1e3 * e.start_time
			  , s = 1e3 * e.end_time;
			if ("" != i) {
				null !== e.timer && void 0 !== e.timer && clearInterval(e.timer);
				var o = (new Date).getTime()
				  , r = i - o
				  , l = 0;
				if (a > i && null == n ? (e.startBet(e),
				l = a - i,
				e._klineMasterBar.removeSettleGroup()) : s >= i ? (e.stopBet(e),
				l = s - i,
				e._klineMasterBar.removeTradeGroup(e.capital)) : l = 0,
				l = Math.round(l / 1e3),
				l > 0) {
					var o = (new Date).getTime() + r;
					e._klineMasterBar.setTime(o),
					e.timer_label.text = l.toString(),
					e._klineMasterBar.updateTimeLabel(l.toString()),
					null !== e.timer && void 0 !== e.timer && clearInterval(e.timer),
					e.timer = setInterval(function() {
						o = (new Date).getTime() + r,
						e._klineMasterBar.setTime(o),
						l -= 1,
						l >= 0 && (e.timer_label.text = l.toString(),
						e._klineMasterBar.updateTimeLabel(l),
						e.can_bet ? e._klineMasterBar.drawLineTradeTimer(l) : e._klineMasterBar.drawLineInterval(l, !1)),
						3 == l && null == n && 1 == e.can_bet && e.showTimeDownNotice(e),
						10 >= l && l >= 0 && 0 == e.can_bet && e.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().count_down_10_sound_ready && t.SceneTrade.getInstance().count_down_10_sound.play(0, 1),
						0 >= l && s - 5e3 > o && (e.updateTimer(e, o, 1),
						e.showStopBetNotice(e))
					}, 1e3)
				}
			}
		}
		,
		i.prototype.showTip = function(e, i) {
			var n = {
				group: e,
				params: "",
				cancelable: !0,
				callback: function(e) {
					setTimeout(function() {
						"Shop" == i && t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_SHOP)
					}, 200)
				}
			};
			t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_TIP, n)
		}
		,
		i.prototype.updateOnlineNum = function(t) {
			this.lb_online_num.text = t,
			this._klineMasterBar.lb_online_num.text = t
		}
		,
		i.prototype.betChipAnima = function(t, e, i, n) {
			var a = this.createNewChip(t, e, null, null, i, n);
			this.flyChip(a, this.group_bet, 500)
		}
		,
		i.prototype.chipFromBetToBanker = function(e) {
			for (var i = this, n = Array(), a = 0; a < this.capital_odds.length; a++)
				n.push(this.capital_odds[a]);
			for (var s = 0; s < e.length; s++)
				for (var o = 0; o < n.length; o++)
					if (n[o].id == e[s].id) {
						n.splice(o, 1);
						break
					}
			for (var r = this.group_banker_avatar.x + this.group_banker_avatar.width / 2 - 30, l = this.group_banker_avatar.y + this.group_banker_avatar.height / 2, h = !1, d = !1, _ = 0; _ < n.length; _++) {
				var p = n[_]
				  , u = [];
				if (null != this.chip_array[p.id])
					for (var g = 0; g < this.chip_array[p.id].length; g++) {
						var c = this.chip_array[p.id][g];
						u.push(c),
						c.start_x = c.end_x,
						c.start_y = c.end_y,
						c.end_x = r,
						c.end_y = l
					}
				if (0 != u.length) {
					h || (h = !0,
					this.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().receive_chip_sound_ready && t.SceneTrade.getInstance().receive_chip_sound.play(0, 1));
					var m = 10;
					i.chip_array[p.id] = null,
					this.flyChipArray(u, this.group_bet, 0, m, !0, 400, function() {
						setTimeout(function() {
							d || (d = !0,
							i.chipFromBankerToBet(e))
						}, 700)
					})
				}
			}
		}
		,
		i.prototype.chipFromBankerToBet = function(e) {
			for (var i = this, n = this.group_banker_avatar.x + this.group_banker_avatar.width / 2 - 30, a = this.group_banker_avatar.y + this.group_banker_avatar.height / 2, s = !1, o = 0; o < e.length; o++) {
				var r = 0;
				if (null != e[o].bet_total_amount && (r = e[o].bet_total_amount),
				r > 0) {
					var l = e[o].odds
					  , h = r * l - r
					  , d = this.splitTradeChip(n, a, null, null, h, e[o].id);
					this.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().receive_chip_sound_ready && t.SceneTrade.getInstance().receive_chip_sound.play(0, 1);
					var _ = 10;
					this.flyChipArray(d, this.group_bet, 0, _, !1, 400, function() {
						setTimeout(function() {
							s || (s = !0,
							i.chipFromBetToUser(e))
						}, 800)
					})
				}
			}
		}
		,
		i.prototype.chipFromBetToUser = function(t) {
			var e = this;
			e.showProfitAmount(),
			e.clearChip()
		}
		,
		i.prototype.showProfitAmount = function() {
			for (var t = 0; t < this.profit_8_array.length; t++) {
				var e = this.profit_8_array[t]
				  , i = 0;
				if (null != e)
					for (var n in e) {
						var a = e[n];
						i += a
					}
				var s = 0
				  , o = 0;
				t >= 0 && 5 >= t ? (s = this.group_sit_array[t].x,
				o = this.group_sit_array[t].y - 20) : 6 == t ? (s = this.lb_my_balance.x,
				o = this.lb_my_balance.y - 20) : (s = this.group_online.x,
				o = this.group_online.y - 20),
				i > 0 && this.flyAmount(s, o, i, this.group_bet)
			}
		}
		,
		i.prototype.calculateProfit = function(t, e) {
			var i = this;
			this.initProfit8Array();
			var n = 0
			  , a = 0;
			a = null != this.current_banker ? this.current_banker.banker_balance : this.pots_balance;
			var s = 0;
			if (a + this.total_bet_amount >= this.win_total_amount) {
				var o = 0;
				if (null != this.seats_trade)
					for (var r = 0; r < this.seats_trade.length; r++)
						for (var l = 0; l < this.group_sit_array.length; l++)
							if (this.group_sit_array[l].name == this.seats_trade[r].user_id && this.seats_trade[r].user_id != this.user_id) {
								var h = this.seats_trade[r].capital_odds_id
								  , d = this.seats_trade[r].pre_profit;
								o += d,
								this.profit_8_array[l][h] = d * (1 - n)
							}
				for (var r = 0; r < t.length; r++) {
					var h = t[r].id
					  , _ = this.my_bet_amount_array[h] * t[r].odds;
					this.profit_8_array[6][h] = _ * (1 - n),
					s += _
				}
				var p = this.win_total_amount - o - s;
				p > 0 && (this.profit_8_array[7][t[0].id] = p * (1 - n))
			} else {
				var o = 0;
				if (null != this.seats_trade)
					for (var r = 0; r < this.seats_trade.length; r++)
						for (var l = 0; l < this.group_sit_array.length; l++)
							if (this.group_sit_array[l].name == this.seats_trade[r].user_id && this.seats_trade[r].user_id != this.user_id) {
								for (var h = this.seats_trade[r].capital_odds_id, u = this.seats_trade[r].pre_profit, g = 0; g < this.win_odds.length; g++)
									if (h == this.win_odds[g].id) {
										var c = (this.win_odds[g].bet_total_amount * this.win_odds[g].odds - this.win_odds[g].bet_total_amount) / this.win_total_net_amount * (a + this.lose_total_amount)
										  , m = this.seats_trade[r].trade_amount / this.win_odds[g].bet_total_amount * c;
										u = m + this.seats_trade[r].trade_amount;
										var y = u * n;
										u -= y;
										break
									}
								o += u,
								this.profit_8_array[l][h] = u * (1 - n)
							}
				for (var r = 0; r < t.length; r++) {
					var h = t[r].id;
					u = this.my_bet_amount_array[h] * t[r].odds;
					for (var g = 0; g < this.win_odds.length; g++)
						if (h == this.win_odds[g].id) {
							var c = (this.win_odds[g].bet_total_amount * this.win_odds[g].odds - this.win_odds[g].bet_total_amount) / this.win_total_net_amount * (a + this.lose_total_amount)
							  , m = this.my_bet_amount_array[h] / this.win_odds[g].bet_total_amount * c;
							u = m + this.my_bet_amount_array[h];
							var y = u * n;
							u -= y;
							break
						}
					s += u
				}
				var p = a + this.total_bet_amount - o - s;
				p > 0 && (this.profit_8_array[7][t[0].id] = p * (1 - n))
			}
			s > 0 && setTimeout(function() {
				i.showYouWin(s, e)
			}, 500)
		}
		,
		i.prototype.createNewChip = function(e, i, n, a, s, o) {
			var r = new t.Chip(e,i,s);
			return r.end_x = n,
			r.end_y = a,
			null == n && (n = this.getBetGroupRandomX(o, r),
			r.end_x = n),
			null == a && (a = this.getBetGroupRandomY(o, r),
			r.end_y = a),
			null == e && (r.start_x = n),
			null == i && (r.start_y = a),
			null == this.chip_array[o] && (this.chip_array[o] = []),
			this.chip_array[o].push(r),
			r
		}
		,
		i.prototype.splitTradeChip = function(t, e, i, n, a, s) {
			for (var o = Array(); a >= 1e4; ) {
				var r = 1e4;
				a -= 1e4;
				var l = this.createNewChip(t, e, i, n, r, s);
				o.push(l)
			}
			for (; a >= 5e3; ) {
				var r = 5e3;
				a -= 5e3;
				var l = this.createNewChip(t, e, i, n, r, s);
				o.push(l)
			}
			for (; a >= 1e3; ) {
				var r = 1e3;
				a -= 1e3;
				var l = this.createNewChip(t, e, i, n, r, s);
				o.push(l)
			}
			for (; a >= 500; ) {
				var r = 500;
				a -= 500;
				var l = this.createNewChip(t, e, i, n, r, s);
				o.push(l)
			}
			for (; a >= 100; ) {
				var r = 100;
				a -= 100;
				var l = this.createNewChip(t, e, i, n, r, s);
				o.push(l)
			}
			for (; a >= 50; ) {
				var r = 50;
				a -= 50;
				var l = this.createNewChip(t, e, i, n, r, s);
				o.push(l)
			}
			for (; a >= 10; ) {
				var r = 10;
				a -= 10;
				var l = this.createNewChip(t, e, i, n, r, s);
				o.push(l)
			}
			return o
		}
		,
		i.prototype.getBetGroupRandomX = function(t, e) {
			var i = this.RandomBetGroupXY(this.group_odds_array[t].x + 10, this.group_odds_array[t].x + this.group_odds_array[t].width - e.width - 10);
			return i
		}
		,
		i.prototype.getBetGroupRandomY = function(t, e) {
			var i = this.RandomBetGroupXY(this.group_odds_array[t].y + 30, this.group_odds_array[t].y + this.group_odds_array[t].height - e.height - 30);
			return i
		}
		,
		i.prototype.RandomBetGroupXY = function(t, e) {
			var i = t - e
			  , n = Math.random()
			  , a = e + Math.round(n * i);
			return a
		}
		,
		i.prototype.flyChip = function(t, e, i) {
			e.contains(t) || e.addChild(t),
			egret.Tween.get(t).to({
				x: t.end_x,
				y: t.end_y
			}, i, egret.Ease.cubicOut)
		}
		,
		i.prototype.flyChipArray = function(t, e, i, n, a, s, o) {
			var r = this
			  , l = t.length;
			t.length > n && 0 != n && (l = n),
			setTimeout(function() {
				if (l > i)
					r.flyChip(t[i], e, s),
					i++,
					r.flyChipArray(t, e, i, n, a, s, o);
				else if (null != o) {
					if (a)
						for (var h = 0; h < t.length; h++)
							r.group_bet.contains(t[h]) && r.group_bet.removeChild(t[h]);
					o()
				}
			}, 10)
		}
		,
		i.prototype.clearChip = function() {
			for (var t = 0; t < this.capital_odds.length; t++) {
				var e = this.capital_odds[t].id;
				if (null != this.chip_array[e]) {
					for (var i = 0; i < this.chip_array[e].length; i++) {
						var n = this.chip_array[e][i];
						this.group_bet.contains(n) && this.group_bet.removeChild(n)
					}
					this.chip_array[e] = null
				}
			}
		}
		,
		i.prototype.initProfit8Array = function() {
			for (var t = 0; t < this.profit_8_array.length; t++)
				this.profit_8_array[t] = []
		}
		,
		i.prototype.onlineGroupBetAnima = function() {
			var t = this
			  , e = this.group_online.y;
			egret.Tween.get(this.group_online).to({
				y: e - 25
			}, 150, egret.Ease.cubicOut).call(function() {
				egret.Tween.get(t.group_online).to({
					y: 402
				}, 150, egret.Ease.cubicOut)
			})
		}
		,
		i.prototype.flyAmount = function(e, i, n, a) {
			this.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().win_amount_sound_ready && t.SceneTrade.getInstance().win_amount_sound.play(0, 1);
			var s = this
			  , o = new eui.Label;
			n > 0 ? o.text = "+" + parseFloat(n) : o.text = "-" + parseFloat(n),
			o.width = 180,
			o.height = 20,
			o.x = e,
			o.y = i,
			o.textColor = 16366631,
			o.bold = !0,
			o.stroke = 1,
			o.strokeColor = 3482880,
			a.addChild(o),
			o.alpha = 1,
			egret.Tween.get(o, {
				loop: !1
			}).to({
				y: o.y - 28
			}, 2e3).call(function(t) {
				egret.Tween.get(o, {
					loop: !1
				}).to({
					alpha: 0
				}, 1500).call(function(t) {
					a.removeChild(o)
				})
			}, s)
		}
		,
		i.prototype.partAdded = function(t, i) {
			e.prototype.partAdded.call(this, t, i)
		}
		,
		i.prototype.childrenCreated = function() {
			e.prototype.childrenCreated.call(this)
		}
		,
		i.prototype.rectAnimation = function(t) {
			null != this.rect1 && (1 == this.type ? this.rect1.alpha <= 1 && this.rect1.alpha > .2 ? (this.rect1.alpha = parseFloat((this.rect1.alpha - .04).toFixed(2)),
			null != this.rect2 && (this.rect2.alpha = this.rect1.alpha)) : this.type = 0 : 0 == this.type && (this.rect1.alpha < 1 && this.rect1.alpha >= .2 ? (this.rect1.alpha = parseFloat((this.rect1.alpha + .04).toFixed(2)),
			null != this.rect2 && (this.rect2.alpha = this.rect1.alpha)) : this.type = 1))
		}
		,
		i
	}(eui.Component);
	t.GameClassicalUI = e,
	__reflect(e.prototype, "game.GameClassicalUI", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i() {
			var t = e.call(this) || this;
			return t.img_lose_array = Array(),
			t.currentNoticeIndex = 0,
			t.totalBetAmount = 0,
			t.introducingKline = !1,
			t.numQi = "",
			t.bet_guide_btn_4_click = !1,
			t.bet_guide_btn_rise_group_click = !1,
			t.bet_guide_btn_10_click = !1,
			t.amountArray = [1e3, 1e4, 1e5, 1e6],
			t.type = 1,
			t.type1 = 1,
			t.type2 = 1,
			t.type3 = 1,
			t.type4 = 1,
			t.type5 = 1,
			t.lb_bet_total_amount_array = Array(),
			t.stopTyper = !1,
			t.is_new = !1,
			t.betMessageList = [{
				user_name: "孤城",
				user_avatar: "",
				message_type: "N",
				vip_grade: 2,
				message: "这把我觉得跌 0-6，你们怎么看"
			}, {
				user_name: "惘然遗失",
				user_avatar: "",
				message_type: "N",
				vip_grade: 6,
				message: "看走势,要涨啦!"
			}, {
				user_name: "summer",
				user_avatar: "",
				message_type: "N",
				vip_grade: 4,
				message: "我买涨啦!哈哈"
			}, {
				user_name: "孤城",
				user_avatar: "",
				message_type: "N",
				vip_grade: 2,
				message: "那我也买涨!哈哈"
			}],
			t.waitSettleMessageList = [{
				user_name: "孤城",
				user_avatar: "",
				message_type: "N",
				vip_grade: 2,
				message: "我买的涨10倍,求保佑!!"
			}, {
				user_name: "匿名情书°",
				user_avatar: "",
				message_type: "N",
				vip_grade: 6,
				message: "看来你要失望了!"
			}, {
				user_name: "summer",
				user_avatar: "",
				message_type: "N",
				vip_grade: 4,
				message: "看走势有希望的!"
			}, {
				user_name: "借风拥你",
				user_avatar: "",
				message_type: "N",
				vip_grade: 4,
				message: "啊!完了,又要涨啦"
			}, {
				user_name: "等不到的晴天",
				user_avatar: "",
				message_type: "N",
				vip_grade: 4,
				message: "我买的跌10倍,好惨."
			}, {
				user_name: "孤城",
				user_avatar: "",
				message_type: "N",
				vip_grade: 2,
				message: "好紧张啊!"
			}, {
				user_name: "孤城",
				user_avatar: "",
				message_type: "N",
				vip_grade: 2,
				message: "中啦!!哈哈哈!好刺激!"
			}],
			t.chat_data = new Array,
			t.settling = !1,
			t.beting = !1,
			t.diff = 30,
			t.capital_odds = [{
				id: "28",
				capital_key: "BTCCNY",
				interval_start: "0",
				interval_end: null,
				display: "涨",
				odds: "1.85",
				order: "0"
			}, {
				id: "5",
				capital_key: "BTCCNY",
				interval_start: "0",
				interval_end: "0",
				display: "平",
				odds: "30.00",
				order: "1"
			}, {
				id: "29",
				capital_key: "BTCCNY",
				interval_start: null,
				interval_end: "0",
				display: "跌",
				odds: "1.85",
				order: "2"
			}, {
				id: "9",
				capital_key: "BTCCNY",
				interval_start: "26",
				interval_end: null,
				display: "> 26",
				odds: "12.00",
				order: "3"
			}, {
				id: "8",
				capital_key: "BTCCNY",
				interval_start: "15",
				interval_end: "26",
				display: "15 - 26",
				odds: "10.00",
				order: "4"
			}, {
				id: "7",
				capital_key: "BTCCNY",
				interval_start: "6",
				interval_end: "15",
				display: "6 - 15",
				odds: "8.00",
				order: "5"
			}, {
				id: "6",
				capital_key: "BTCCNY",
				interval_start: "0",
				interval_end: "6",
				display: "0 - 6",
				odds: "6.00",
				order: "6"
			}, {
				id: "4",
				capital_key: "BTCCNY",
				interval_start: "-6",
				interval_end: "0",
				display: "0 - 6",
				odds: "6.00",
				order: "7"
			}, {
				id: "3",
				capital_key: "BTCCNY",
				interval_start: "-15",
				interval_end: "-6",
				display: "6 - 15",
				odds: "8.00",
				order: "8"
			}, {
				id: "2",
				capital_key: "BTCCNY",
				interval_start: "-26",
				interval_end: "-15",
				display: "15 - 26",
				odds: "10.00",
				order: "9"
			}, {
				id: "1",
				capital_key: "BTCCNY",
				interval_start: null,
				interval_end: "-26",
				display: "> 26",
				odds: "12.00",
				order: "10"
			}],
			t.closeStatus = !1,
			t.userNoticeTimer = null,
			t.seconds = 0,
			t.bet_amount = 1e3,
			t.btn_bet_array = Array(),
			t.is_bet = !1,
			t.params = null,
			t.addEventListener(eui.UIEvent.COMPLETE, t.uiCompHandler, t),
			t.skinName = "resource/ui/main/GameGrabGuideUISkin.exml",
			t
		}
		return __extends(i, e),
		i.getInstance = function() {
			return this._instance || (this._instance = new i),
			this._instance
		}
		,
		i.prototype.uiCompHandler = function(t) {
			var e = this;
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			this.setClickListener(),
			this.subInit(),
			this.icon_game_title.source = RES.getRes("icon_begin_bet_png"),
			this.addMessageToList({
				message_type: "S",
				message: "欢迎来到 (比特币) 抢庄竞猜!"
			}),
			eui.Watcher.watch(this.scroller_chat_list.viewport, ["contentHeight"], function() {
				e.chat_list.validateNow(),
				e.scroller_chat_list.viewport.contentHeight >= e.scroller_chat_list.height && (e.scroller_chat_list.viewport.scrollV = e.scroller_chat_list.viewport.contentHeight - e.scroller_chat_list.height + 5)
			}, this),
			this.chat_list.useVirtualLayout = !1,
			this.getMessageList()
		}
		,
		i.prototype.setClickListener = function() {
			var e = this;
			this.img_return.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				if (t.SceneTrade.getInstance().stopGrabSound(),
				t.SceneTrade.getInstance().playBgSound(),
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().return_sound_ready && t.SceneTrade.getInstance().return_sound.play(0, 1),
				e.destoryAll(),
				null != e.params) {
					var i = e.params.from;
					if ("game_grab" == i)
						return void t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_GRAB, e.params)
				}
				t.FooterBar.getInstance().goTo(t.FooterBar.getInstance().btns[0], !0)
			}, this),
			this.lb_killer.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				if (t.SceneTrade.getInstance().stopGrabSound(),
				t.SceneTrade.getInstance().playBgSound(),
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().return_sound_ready && t.SceneTrade.getInstance().return_sound.play(0, 1),
				e.destoryAll(),
				null != e.params) {
					var i = e.params.from;
					if ("game_grab" == i)
						return void t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_GRAB, e.params)
				}
				t.FooterBar.getInstance().goTo(t.FooterBar.getInstance().btns[0], !0)
			}, this),
			this.lb_start_study.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().return_sound_ready && t.SceneTrade.getInstance().return_sound.play(0, 1),
				e.groupNewUser.visible = !1,
				e.startGuide()
			}, this)
		}
		,
		i.prototype.destoryAll = function() {
			t.SceneTrade.is_new_user = !1,
			null != this.userNoticeTimer && void 0 != this.userNoticeTimer && clearInterval(this.userNoticeTimer),
			this.closeStatus = !0,
			this.timer && this.timer.removeEventListener(egret.TimerEvent.TIMER, this.timerFunc, this)
		}
		,
		i.prototype.reOpen = function() {
			this.subInit(),
			this.closeStatus = !1
		}
		,
		i.prototype.subInit = function() {
			return this.capital = "BTCCNY",
			this.user_info = Utils.getStorageObj(Keys.FK_UserInfo),
			null == this.user_info || void 0 == this.user_info || "" == this.user_info ? (this.destoryAll(),
			void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN)) : (this.user_id = this.user_info.uid,
			this.lbUserName.text = Utils.getLimitUserName(this.user_info.name, 12),
			this.img_vip.source = RES.getRes("icon_vip_" + this.user_info.vip_grade + "_png"),
			this.img_vip.x = this.lbUserName.x + this.lbUserName.width + 10,
			"" != this.user_info.avatar_url ? this.avatar_url = this.user_info.avatar_url : this.avatar_url = "",
			this.loadBankerImage("http://wx.qlogo.cn/mmopen/rJdcGSBib920Fib6icRdEx6aib3cLssVY94SEHjQpHuXRaPLswByfny5JoOicXb7qSPz4byiaW7HjCTHJ0JMGIIPbWG9RrwObzHOAT/0"),
			null == this.user_id ? (this.destoryAll(),
			void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN)) : (this.showLoading(this),
			this._klineMasterBar = new t.KlineMasterBarV3,
			this._klineMasterBar.user_id = this.user_id,
			this._klineMasterBar.x = 4,
			this._klineMasterBar.y = 0,
			this.kline_group.addChild(this._klineMasterBar),
			this.setChildIndex(this.kline_group, 99),
			this.loadHeaderImage(),
			this.loadEwallet(),
			void this.getCapitalOddsList()))
		}
		,
		i.prototype.getMessageList = function() {
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "user/getUserNotice", null, this.onGetMessageComplete, this.onGetMessageIOError, this.onGetMessageProgress, this)
		}
		,
		i.prototype.onGetMessageComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_GET_MESSAGE_SUCCESS) {
				for (var a = n.results, s = a.length - 1; s >= 0; s--) {
					var o = a[s];
					Main.noticeList.push({
						user_id: o.user_id,
						message: o.message,
						name: o.name,
						type: o.type,
						is_show: !1
					})
				}
				this.showUserNotice(),
				this.userNoticeTimer = setInterval(function(t) {
					t.showUserNotice()
				}, 5500, this)
			} else if (403 == n.type)
				this.destoryAll(),
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			else {
				n.message
			}
		}
		,
		i.prototype.onGetMessageIOError = function(t) {}
		,
		i.prototype.onGetMessageProgress = function(t) {}
		,
		i.prototype.showUserNotice = function() {
			var t = this
			  , e = null;
			return 0 == Main.noticeList.length ? void (this.currentNoticeIndex = 0) : (this.currentNoticeIndex >= Main.noticeList.length && (this.currentNoticeIndex = 0),
			e = Main.noticeList[this.currentNoticeIndex],
			void (null != e && (1 == e.type ? this.lb_notice.text = e.name + ": " + e.message : this.lb_notice.text = e.message,
			this.lb_notice.x = 719,
			egret.Tween.get(this.lb_notice, {
				loop: !1
			}).to({
				x: -1 * this.lb_notice.width
			}, 5e3).call(function() {
				if (null != Main.noticeList[t.currentNoticeIndex] && (Main.noticeList[t.currentNoticeIndex].is_show = !0,
				t.currentNoticeIndex++,
				Main.noticeList.length > 20))
					for (var e = 0; e < Main.noticeList.length - 20; e++)
						Main.noticeList[e].is_show && Main.noticeList.splice(e, 1)
			}))))
		}
		,
		Object.defineProperty(i.prototype, "labelWinAmount", {
			get: function() {
				var t = Utils.StringToFloat(this.label_win_amount.text, 0);
				return t
			},
			set: function(t) {
				this.label_win_amount.text = Utils.StringToFloat(t.toString(), 0).toString()
			},
			enumerable: !0,
			configurable: !0
		}),
		Object.defineProperty(i.prototype, "labelMyBalance", {
			get: function() {
				var t = Utils.StringToFloat(this.label_my_balance.text, 0);
				return t
			},
			set: function(t) {
				this.label_my_balance.text = Utils.StringToFloat(t.toString(), 0).toString()
			},
			enumerable: !0,
			configurable: !0
		}),
		i.prototype.getSettleResult = function() {
			this.showSettleResult(this.capital_odds[3])
		}
		,
		i.prototype.showLoading = function(t) {
			if (null == t.loading_group) {
				t.loading_group = new eui.Group,
				t.loading_group.width = 719,
				t.loading_group.height = 1199,
				t.loading_group.verticalCenter = .5,
				t.loading_group.horizontalCenter = .5;
				var e = new egret.Sprite;
				e.graphics.clear(),
				e.graphics.beginFill(0, .6),
				e.graphics.drawRect(0, 0, GameConfig.curWidth(), GameConfig.curHeight()),
				e.graphics.endFill(),
				e.width = GameConfig.curWidth(),
				e.height = GameConfig.curHeight(),
				e.touchEnabled = !0,
				egret.Tween.get(e).to({
					alpha: 1
				}, 150),
				e.visible = !0,
				t.loading_group.addChild(e),
				null == t.loading_image && (t.loading_image = new eui.Image),
				t.loading_image.verticalCenter = .5,
				t.loading_image.horizontalCenter = .5,
				t.loading_image.source = RES.getRes("loading_run_png"),
				t.loading_image.anchorOffsetX = .5 * t.loading_image.width,
				t.loading_image.anchorOffsetY = .5 * t.loading_image.height,
				t.loading_group.addChild(t.loading_image)
			}
			GameLayerManager.gameLayer().effectLayer.contains(t.loading_group) || (GameLayerManager.gameLayer().effectLayer.addChild(t.loading_group),
			GameLayerManager.gameLayer().effectLayer.addEventListener(egret.Event.ENTER_FRAME, t.runLoading, t))
		}
		,
		i.prototype.runLoading = function(t) {
			this.loading_image.rotation += 3
		}
		,
		i.prototype.closeLoading = function(t) {
			GameLayerManager.gameLayer().mainLayer.$children.length > 1 && GameLayerManager.gameLayer().mainLayer.removeChildAt(1),
			GameLayerManager.gameLayer().effectLayer.contains(t.loading_group) && GameLayerManager.gameLayer().effectLayer.removeChild(t.loading_group),
			GameLayerManager.gameLayer().effectLayer.removeEventListener(egret.Event.ENTER_FRAME, t.runLoading, t)
		}
		,
		i.prototype.showStartBetNotice = function(e) {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().start_bet_sound_ready && t.SceneTrade.getInstance().start_bet_sound.play(0, 1);
			var i = new eui.Group
			  , n = new eui.Image;
			n.source = RES.getRes("icon_start_bet_png"),
			n.horizontalCenter = .5,
			n.verticalCenter = .5,
			n.height = 0,
			i.addChild(n),
			i.horizontalCenter = .5,
			i.y = 267,
			i.height = 642,
			i.width = 153,
			e.addChild(i),
			e.setChildIndex(i, 2e3),
			egret.Tween.get(n).to({
				height: 153
			}, 150),
			setTimeout(function(t) {
				egret.Tween.get(n).to({
					height: 0
				}, 150).call(function() {
					t.removeChild(i)
				})
			}, 1500, e),
			e._klineMasterBar.removeSettleGroup()
		}
		,
		i.prototype.showTimeDownNotice = function(e) {
			var i = new eui.Group
			  , n = new eui.Image;
			n.source = RES.getRes("timer_down_num_3_png"),
			n.horizontalCenter = .5,
			n.verticalCenter = .5,
			n.height = 0,
			n.width = 330,
			i.addChild(n),
			i.horizontalCenter = .5,
			i.y = 180,
			i.height = 330,
			i.width = 330,
			e.addChild(i),
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().count_down_sound_ready && t.SceneTrade.getInstance().count_down_sound.play(0, 1),
			egret.Tween.get(n).to({
				height: 330
			}, 150),
			setTimeout(function(e) {
				egret.Tween.get(n).to({
					height: 0
				}, 150).call(function() {
					e.removeChild(i),
					n.source = RES.getRes("timer_down_num_2_png"),
					i.addChild(n),
					e.addChild(i),
					t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().count_down_sound_ready && t.SceneTrade.getInstance().count_down_sound.play(0, 1),
					egret.Tween.get(n).to({
						height: 330
					}, 150),
					setTimeout(function(e) {
						egret.Tween.get(n).to({
							height: 0
						}, 150).call(function() {
							e.removeChild(i),
							n.source = RES.getRes("timer_down_num_1_png"),
							i.addChild(n),
							e.addChild(i),
							t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().count_down_sound_ready && t.SceneTrade.getInstance().count_down_sound.play(0, 1),
							egret.Tween.get(n).to({
								height: 330
							}, 150),
							setTimeout(function(t) {
								egret.Tween.get(n).to({
									height: 0
								}, 150).call(function() {
									t.removeChild(i)
								})
							}, 850, e)
						})
					}, 850, e)
				})
			}, 850, e)
		}
		,
		i.prototype.showStopBetNotice = function(e) {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().stop_bet_sound_ready && (t.SceneTrade.getInstance().stop_bet_clock.play(0, 1),
			t.SceneTrade.getInstance().stop_bet_sound.play(0, 1)),
			this.icon_game_title.width = 106,
			this.icon_game_title.height = 30,
			this.addEventListener(egret.Event.ENTER_FRAME, this.gameTitleAnimation, this),
			this.stopGroup = new eui.Group;
			var i = new eui.Image;
			i.source = RES.getRes("icon_stop_bet_png"),
			i.horizontalCenter = .5,
			i.verticalCenter = .5,
			i.height = 0,
			this.stopGroup.addChild(i),
			this.stopGroup.horizontalCenter = .5,
			this.stopGroup.y = 267,
			this.stopGroup.height = 642,
			this.stopGroup.width = 153,
			e.addChild(this.stopGroup),
			e.setChildIndex(this.stopGroup, 3e3),
			egret.Tween.get(i).to({
				height: 153
			}, 150),
			setTimeout(function(t) {
				egret.Tween.get(i).to({
					height: 0
				}, 150).call(function() {
					t.step7(),
					t.removeChild(t.stopGroup)
				})
			}, 1500, e),
			e._klineMasterBar.removeTradeGroup(e.capital),
			this._klineMasterBar.clearTimer(1),
			this._klineMasterBar.newCandle(2)
		}
		,
		i.prototype.showWinAmount = function(t) {
			t.label_win_amount.text = "13850",
			t.winAmountTimer = setInterval(function() {
				t.label_win_amount.visible ? t.label_win_amount.visible = !1 : t.label_win_amount.visible = !0
			}, 500),
			t.label_win_amount.touchEnabled = !1
		}
		,
		i.prototype.showBigWinner = function(t) {
			var e = this;
			e.addMessageToList({
				message_type: "S",
				message_type_s: "you_win",
				amount: 13850
			}),
			e.addMessageToList({
				user_name: "我是庄家",
				message_type: "S",
				message_type_s: "banker_win",
				amount: "4590万"
			}),
			e.lb_big_winner_name.visible = !0,
			e.lb_big_winner_banker_name.visible = !0,
			e.lb_big_winner_amount.visible = !0,
			e.lb_big_winner_banker_amount.visible = !0,
			e.img_big_winner_banker_res.visible = !0,
			e.img_big_winner_res.visible = !0,
			e.img_big_winner_res.source = RES.getRes("icon_win_png"),
			e.lb_big_winner_name.text = t,
			e.lb_big_winner_amount.text = "890万",
			e.lb_big_winner_banker_name.text = "我是庄家",
			e.img_big_winner_banker_res.source = RES.getRes("icon_win_png"),
			e.lb_big_winner_banker_amount.text = "4590万";
			var i = new eui.BitmapLabel;
			i.name = "banker_fly_amount",
			i.font = "gold_28_fnt",
			i.text = "+4590万",
			i.width = 180,
			i.height = 20,
			i.x = 580,
			i.y = 650,
			e.addChild(i),
			e.setChildIndex(i, 111),
			i.alpha = 1,
			egret.Tween.get(i, {
				loop: !1
			}).to({
				y: i.y - 28,
				alpha: .1
			}, 1500).call(function() {
				e.removeChild(i)
			}, e),
			e.banker_balance.text = "6478万",
			e.img_bg_big_winner.height = 0,
			e.group_big_winner.visible = !0,
			this.setChildIndex(e.group_big_winner, 1001),
			egret.Tween.get(e.img_bg_big_winner).to({
				height: 280
			}, 150),
			setTimeout(function() {
				e.lb_big_winner_name.visible = !1,
				e.lb_big_winner_banker_name.visible = !1,
				e.lb_big_winner_amount.visible = !1,
				e.lb_big_winner_banker_amount.visible = !1,
				e.img_big_winner_banker_res.visible = !1,
				e.img_big_winner_res.visible = !1,
				egret.Tween.get(e.img_bg_big_winner).to({
					height: 0
				}, 150).call(function() {
					e.group_big_winner.visible = !1
				}),
				setTimeout(function() {
					e.showWinIntroduce()
				}, 1e3),
				e.showWinAmount(e)
			}, 1500, e)
		}
		,
		i.prototype.initIntervalOdds = function() {
			null != this.capital_odds && (this.lb_bet_total_amount_array[0] = this.label_bet_total_amount_0,
			this.lb_bet_total_amount_array[1] = this.label_bet_total_amount_1,
			this.lb_bet_total_amount_array[2] = this.label_bet_total_amount_2,
			this.lb_bet_total_amount_array[3] = this.label_bet_total_amount_3,
			this.lb_bet_total_amount_array[4] = this.label_bet_total_amount_4,
			this.lb_bet_total_amount_array[5] = this.label_bet_total_amount_5,
			this.lb_bet_total_amount_array[6] = this.label_bet_total_amount_6,
			this.lb_bet_total_amount_array[7] = this.label_bet_total_amount_7,
			this.lb_bet_total_amount_array[8] = this.label_bet_total_amount_8,
			this.lb_bet_total_amount_array[9] = this.label_bet_total_amount_9,
			this.lb_bet_total_amount_array[10] = this.label_bet_total_amount_10,
			this.btn_bet_array[this.capital_odds[0].id] = this.btn_odds_0,
			this.btn_bet_array[this.capital_odds[1].id] = this.btn_odds_1,
			this.btn_bet_array[this.capital_odds[2].id] = this.btn_odds_2,
			this.btn_bet_array[this.capital_odds[3].id] = this.btn_odds_3,
			this.btn_bet_array[this.capital_odds[4].id] = this.btn_odds_4,
			this.btn_bet_array[this.capital_odds[5].id] = this.btn_odds_5,
			this.btn_bet_array[this.capital_odds[6].id] = this.btn_odds_6,
			this.btn_bet_array[this.capital_odds[7].id] = this.btn_odds_7,
			this.btn_bet_array[this.capital_odds[8].id] = this.btn_odds_8,
			this.btn_bet_array[this.capital_odds[9].id] = this.btn_odds_9,
			this.btn_bet_array[this.capital_odds[10].id] = this.btn_odds_10,
			this.img_lose_array[0] = this.imgLose0,
			this.img_lose_array[1] = this.imgLose1,
			this.img_lose_array[2] = this.imgLose2,
			this.img_lose_array[3] = this.imgLose3,
			this.img_lose_array[4] = this.imgLose4,
			this.img_lose_array[5] = this.imgLose5,
			this.img_lose_array[6] = this.imgLose6,
			this.img_lose_array[7] = this.imgLose7,
			this.img_lose_array[8] = this.imgLose8,
			this.img_lose_array[9] = this.imgLose9,
			this.img_lose_array[10] = this.imgLose10,
			"XAUUSD" == this.capital ? (this.label_interval_3.size = 18,
			this.label_interval_4.size = 18,
			this.label_interval_5.size = 18,
			this.label_interval_6.size = 18,
			this.label_interval_7.size = 18,
			this.label_interval_8.size = 18,
			this.label_interval_9.size = 18,
			this.label_interval_10.size = 18) : "EURUSD" == this.capital || "GBPUSD" == this.capital ? (this.label_interval_3.size = 18,
			this.label_interval_4.size = 18,
			this.label_interval_5.size = 18,
			this.label_interval_6.size = 18,
			this.label_interval_7.size = 18,
			this.label_interval_8.size = 18,
			this.label_interval_9.size = 18,
			this.label_interval_10.size = 18) : "BTCCNY" == this.capital && (this.label_interval_3.size = 18,
			this.label_interval_4.size = 18,
			this.label_interval_5.size = 18,
			this.label_interval_6.size = 18,
			this.label_interval_7.size = 18,
			this.label_interval_8.size = 18,
			this.label_interval_9.size = 18,
			this.label_interval_10.size = 18))
		}
		,
		i.prototype.startBet = function(t) {
			t.icon_game_title.source = RES.getRes("icon_begin_bet_png"),
			t.can_bet = !0,
			t.auto_bet || t.enableBetBtn()
		}
		,
		i.prototype.disabledBetBtn = function() {
			for (var t in this.btn_bet_array)
				this.btn_bet_array[t].enabled = !1
		}
		,
		i.prototype.enableBetBtn = function() {
			for (var t in this.btn_bet_array)
				this.btn_bet_array[t].enabled = !0
		}
		,
		i.prototype.loadEwallet = function() {
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "ewallet_type",
				value: "G"
			})
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + API.balance, t, this.onGetEwalletComplete, this.onGetEwalletIOError, this.onGetEwalletProgress, this)
		}
		,
		i.prototype.onGetEwalletComplete = function(t) {
			debugger
			var e = t.currentTarget
			  , n = e.response? JSON.parse(e.response): {type: 1};
			if (i.status_code == MessageCode.CODE_EWALLET_FOUND) {
				var n = i.results
				  , a = n.balance;
				this.updateBalance(a)
			} else if (403 == i.status_code)
				;
			else {
				i.message
			}
		}
		,
		i.prototype.onGetEwalletIOError = function(t) {}
		,
		i.prototype.onGetEwalletProgress = function(t) {}
		,
		Object.defineProperty(i.prototype, "goldNumber", {
			get: function() {
				var t = Utils.moneyFormatBack(this.lbGold.text);
				return t
			},
			set: function(t) {
				var e = Utils.moneyFormat(t, 2);
				this.lbGold.text = e.toString()
			},
			enumerable: !0,
			configurable: !0
		}),
		i.prototype.updateBalance = function(t) {
			this.gold_balance = t,
			this.label_my_balance.text = parseFloat(parseFloat(this.gold_balance).toFixed(0)).toString(),
			egret.Tween.get(this).to({
				goldNumber: t
			}, 1e3)
		}
		,
		i.prototype.loadHeaderImage = function() {
			var t = new egret.ImageLoader;
			if (t.addEventListener(egret.Event.COMPLETE, this.headerImageLoadCompleteHandler, this),
			null == this.avatar_url || void 0 == this.avatar_url || "" == this.avatar_url) {
				var e = new egret.Bitmap(RES.getRes("person_png"));
				this.showAvatar(e)
			} else
				t.load(this.avatar_url)
		}
		,
		i.prototype.headerImageLoadCompleteHandler = function(t) {
			var e = t.currentTarget
			  , i = new egret.Bitmap(e.data);
			this.showAvatar(i)
		}
		,
		i.prototype.showAvatar = function(t) {
			t.fillMode = egret.BitmapFillMode.SCALE,
			t.x = 10,
			t.y = 15,
			t.width = 80,
			t.height = 80,
			this.addChild(t);
			var e = new egret.Shape;
			e.graphics.beginFill(255),
			e.graphics.drawCircle(40, 40, 40),
			e.graphics.endFill(),
			e.x = 10,
			e.y = 15,
			this.addChild(e),
			t.mask = e;
			var i = new eui.Image;
			i.source = RES.getRes("userphoto_png"),
			i.width = 95,
			i.height = 95,
			i.x = 2,
			i.y = 11,
			this.addChild(i),
			this.setChildIndex(t, 999),
			this.setChildIndex(e, 999),
			this.setChildIndex(i, 999),
			this.setChildIndex(this.groupNewUser, 1e3)
		}
		,
		i.prototype.loadBankerImage = function(t) {
			var e = new egret.ImageLoader;
			e.addEventListener(egret.Event.COMPLETE, this.bankerImageLoadCompleteHandler, this),
			e.load(t)
		}
		,
		i.prototype.bankerImageLoadCompleteHandler = function(t) {
			var e = t.currentTarget;
			this.banker_avatar.bitmapData = e.data
		}
		,
		i.prototype.getCapitalOddsList = function() {
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "capital_key",
				value: this.capital
			})
			t.addItem({
				key: "game_model_type",
				value: 2
			})
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "trade/getCapitalOdds", t, this.onGetCapitalOddsListComplete, this.onGetCapitalOddsListIOError, this.onGetCapitalOddsListProgress, this)
		}
		,
		i.prototype.onGetCapitalOddsListComplete = function(e) {
			this.closeLoading(this);
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_CAPITAL_ODDS_FOUND) {
				this.initIntervalOdds(),
				this._klineMasterBar.setOptions({
					Capital: this.capital,
					Diff: 30,
					odds: this.capital_odds
				}),
				this._klineMasterBar.Notification_Kline_Init(),
				this._klineMasterBar.newCandle(1);
				var a = (new Date).getTime();
				this.numQi = this._klineMasterBar.setTime(a)
			} else {
				if (403 == n.type)
					return this.destoryAll(),
					void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				var s = n.message;
				Toast.launch(s, -100)
			}
		}
		,
		i.prototype.onGetCapitalOddsListIOError = function(t) {
			this.closeLoading(this)
		}
		,
		i.prototype.onGetCapitalOddsListProgress = function(t) {}
		,
		i.prototype.showDark = function(t, e) {
			void 0 === e && (e = !1),
			this.darkSprite = new egret.Sprite,
			this.darkSprite.graphics.clear(),
			this.darkSprite.graphics.beginFill(0, t),
			this.darkSprite.graphics.drawRect(0, 0, GameConfig.curWidth(), GameConfig.curHeight()),
			this.darkSprite.graphics.endFill(),
			this.darkSprite.width = GameConfig.curWidth(),
			this.darkSprite.height = GameConfig.curHeight(),
			this.darkSprite.touchEnabled = !0,
			egret.Tween.get(this.darkSprite).to({
				alpha: 1
			}, 150),
			this.darkSprite.visible = !0,
			this.addChild(this.darkSprite),
			this.setChildIndex(this.group_message_norice, 999),
			this.setChildIndex(this.darkSprite, 1e3)
		}
		,
		i.prototype.highLightKlineGroup = function() {
			this.setChildIndex(this.kline_group, 1001),
			this.setChildIndex(this.group_message_norice, 1002),
			this.setChildIndex(this.img_return, 2e3)
		}
		,
		i.prototype.unHighLightKlineGroup = function() {
			this.setChildIndex(this.kline_group, 998),
			this.setChildIndex(this.group_message_norice, 999),
			this.setChildIndex(this.darkSprite, 1e3),
			this.setChildIndex(this.img_return, 2e3)
		}
		,
		i.prototype.highLightChatGroup = function() {
			this.setChildIndex(this.chat_banker_group, 1001),
			this.setChildIndex(this.img_return, 2e3)
		}
		,
		i.prototype.unHighLightChatGroup = function() {
			this.setChildIndex(this.chat_banker_group, 999),
			this.setChildIndex(this.darkSprite, 1e3),
			this.setChildIndex(this.img_return, 2e3)
		}
		,
		i.prototype.highLightBetGroup = function() {
			this.setChildIndex(this.bet_group, 1001),
			this.setChildIndex(this.img_return, 2e3)
		}
		,
		i.prototype.unHighLightBetGroup = function() {
			this.setChildIndex(this.bet_group, 999),
			this.setChildIndex(this.darkSprite, 1e3),
			this.setChildIndex(this.img_return, 2e3)
		}
		,
		i.prototype.highLightTimerGroup = function() {
			this.bet_title_group.contains(this.timer_group) && (this.bet_title_group.removeChild(this.timer_group),
			this.timer_group.y = this.bet_title_group.y + 18,
			this.addChild(this.timer_group)),
			this.setChildIndex(this.timer_group, 1001),
			this.setChildIndex(this.img_return, 2e3)
		}
		,
		i.prototype.unHighLightTimerGroup = function() {
			this.setChildIndex(this.timer_group, 999),
			this.setChildIndex(this.darkSprite, 1e3)
		}
		,
		i.prototype.highLightRiseBetBtnGroup = function() {
			this.setChildIndex(this.bet_guide_btn_rise_group, 1001),
			this.setChildIndex(this.img_return, 2e3)
		}
		,
		i.prototype.unHighLightRiseBetBtnGroup = function() {
			this.setChildIndex(this.bet_guide_btn_rise_group, 999),
			this.setChildIndex(this.darkSprite, 1e3),
			this.setChildIndex(this.img_return, 2e3)
		}
		,
		i.prototype.highLightBetBtnGroup = function() {
			this.setChildIndex(this.bet_guide_btn_group, 1001),
			this.setChildIndex(this.img_return, 2e3)
		}
		,
		i.prototype.unHighLightBetBtnGroup = function() {
			this.setChildIndex(this.bet_guide_btn_group, 999),
			this.setChildIndex(this.darkSprite, 1e3),
			this.setChildIndex(this.img_return, 2e3)
		}
		,
		i.prototype.highLightBetTitleGroup = function() {
			this.setChildIndex(this.bet_title_group, 1001),
			this.setChildIndex(this.img_return, 2e3)
		}
		,
		i.prototype.unHighLightBetTitleGroup = function() {
			this.setChildIndex(this.bet_title_group, 999),
			this.setChildIndex(this.darkSprite, 1e3),
			this.setChildIndex(this.img_return, 2e3)
		}
		,
		i.prototype.startGuide = function() {
			this.welcome()
		}
		,
		i.prototype.welcome = function() {
			this.showDark(.6);
			var t = this
			  , e = 710
			  , i = 280
			  , n = 5
			  , a = this.bet_title_group.y;
			this.addBgIntroduce(n, a, e, i),
			this.img_introduce_girl = new eui.Image,
			this.img_introduce_girl.source = RES.getRes("icon_introduce_girl_png"),
			this.img_introduce_girl.width = 282.7,
			this.img_introduce_girl.height = 295.3,
			this.img_introduce_girl.x = this.width,
			this.img_introduce_girl.y = this.bg_introduce.y - this.img_introduce_girl.height,
			this.addChild(this.img_introduce_girl),
			setTimeout(function() {
				egret.Tween.get(t.img_introduce_girl).to({
					x: t.width - t.img_introduce_girl.width - 20
				}, 500, egret.Ease.cubicOut).call(function() {
					t.bg_introduce.visible = !0;
					var e = 20
					  , i = t.bg_introduce.y + 40
					  , n = "欢迎来到 抢庄竞猜 模式\n当前资产房间为 (比特币)\n下面跟我一起来完成新手任务吧！";
					t.txtbetBtnsIntroduce1 = t.showIntroduceText(t.txtbetBtnsIntroduce1, e, i, n, 33, 0, 150, t, function() {
						t.showNextText(t.bg_introduce.y + t.bg_introduce.height - 40),
						t.darkSprite.addEventListener(egret.TouchEvent.TOUCH_TAP, t.welcomeStep1, t)
					})
				}, t)
			}, 500)
		}
		,
		i.prototype.welcomeStep1 = function() {
			var t = this;
			this.darkSprite.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.welcomeStep1, t),
			this.highLightKlineGroup(),
			this.highLightBetGroup(),
			this.highLightBetTitleGroup(),
			this.setChildIndex(this.bg_introduce, 1001),
			this.setChildIndex(this.img_introduce_girl, 1002),
			this.setChildIndex(this.bet_group, 1003),
			this.setChildIndex(this.bet_title_group, 1004),
			egret.Tween.get(t.bg_introduce).to({
				y: this.chat_banker_group.y + 10,
				width: 500,
				height: this.chat_banker_group.height - 20
			}, 700, egret.Ease.cubicOut).call(function() {
				t.bg_text_group = new eui.Group;
				var e = 200
				  , i = 90
				  , n = (t.width - e) / 2
				  , a = t.kline_group.y + 200;
				t.bg_text_group.x = n,
				t.bg_text_group.y = a,
				t.addChild(t.bg_text_group),
				n = 0,
				a = 0,
				t.addBgIntroduce(n, a, e, i, t.bg_text_group),
				t.drawText(24, 25, "K线区域", 40, t.bg_text_group, 0, 5, 1),
				t.setChildIndex(t.bg_text_group, 1004);
				var n = 20
				  , a = t.chat_banker_group.y + 45
				  , s = "上方为K线区域\n用来判断走势和观察开奖结果";
				t.setChildIndex(t.txtbetBtnsIntroduce1, 1002),
				t.txtbetBtnsIntroduce1 = t.showIntroduceText(t.txtbetBtnsIntroduce1, n, a, s, 30, 0, 150, t, function() {
					t.showNextText(t.bet_title_group.y - 40),
					t.darkSprite.addEventListener(egret.TouchEvent.TOUCH_TAP, t.welcomeStep2, t)
				})
			}),
			egret.Tween.get(t.img_introduce_girl).to({
				y: this.img_introduce_girl.y + 7
			}, 200, egret.Ease.cubicOut).call(function() {});
			var e = this.kline_group.x + 4
			  , i = this.kline_group.y
			  , n = this.kline_group.width - 10
			  , a = this.kline_group.height
			  , s = 16379715;
			this.showIntroduceRect(e, i, n, a, s, this, 1, 5),
			this.setChildIndex(this.introduceRect, 1001),
			this.setChildIndex(this.img_introduce_girl, 1002)
		}
		,
		i.prototype.welcomeStep2 = function() {
			this.removeNextText();
			var t = this;
			this.darkSprite.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.welcomeStep2, t);
			var e = 20
			  , i = t.chat_banker_group.y + 40
			  , n = "下方为下注区域\n选择涨跌方向，点击任意点差\n区间按钮，完成下注";
			t.txtbetBtnsIntroduce1 = t.showIntroduceText(t.txtbetBtnsIntroduce1, e, i, n, 30, 0, 150, t, function() {
				t.showNextText(t.bet_title_group.y - 40),
				t.darkSprite.addEventListener(egret.TouchEvent.TOUCH_TAP, t.welcomeStep3, t)
			}),
			this.removeChild(this.bg_text_group),
			this.bg_text_group = new eui.Group;
			var a = 200
			  , s = 90
			  , e = (this.width - a) / 2
			  , i = this.bet_group.y + 150;
			this.bg_text_group.x = e,
			this.bg_text_group.y = i - 30,
			this.addChild(this.bg_text_group),
			e = 0,
			i = 0,
			this.addBgIntroduce(e, i, a, s, this.bg_text_group),
			this.drawText(20, 25, "下注区域", 40, this.bg_text_group, 0, 5, 1),
			e = this.bet_group.x + 4,
			i = this.bet_group.y;
			var a = this.bet_group.width - 10
			  , s = this.bet_group.height
			  , o = 16379715;
			this.showIntroduceRect(e, i, a, s, o, this, 1, 5)
		}
		,
		i.prototype.welcomeStep3 = function() {
			this.removeNextText(),
			this.removeEventListener(egret.Event.ENTER_FRAME, this.rectAnimation, this),
			this.removeChild(this.introduceRect),
			this.removeChild(this.bg_text_group);
			var t = this;
			this.darkSprite.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.welcomeStep3, t);
			var e = 20
			  , i = t.chat_banker_group.y + 40
			  , n = "观察K线可以看出，该资产正处于\n小幅上涨通道\n下注上涨是一个不错的选择。";
			t.txtbetBtnsIntroduce1 = t.showIntroduceText(t.txtbetBtnsIntroduce1, e, i, n, 30, 0, 150, t, function() {
				t.showNextText(t.bet_title_group.y - 25),
				t.darkSprite.addEventListener(egret.TouchEvent.TOUCH_TAP, t.removeWelcome, t)
			});
			var a = 420
			  , s = 610
			  , o = this.kline_group.y + this.kline_group.height - 120
			  , r = this.kline_group.y + this.kline_group.height - 250
			  , l = 16001316;
			this.line1 = this.drawLine(a, s, o, r, l, this, 4),
			this.line2 = this.drawLine(a + 30, s + 20, o + 40, r + 45, l, this, 4),
			this.addEventListener(egret.Event.ENTER_FRAME, this.lineAnimation, this)
		}
		,
		i.prototype.removeWelcome = function() {
			var t = this;
			this.darkSprite.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.removeWelcome, t),
			egret.Tween.get(this.img_introduce_girl).to({
				x: this.width
			}, 500, egret.Ease.cubicOut).call(function() {
				t.removeChild(t.img_introduce_girl),
				t.removeChild(t.bg_introduce),
				t.removeChild(t.line1),
				t.removeChild(t.line2),
				t.removeEventListener(egret.Event.ENTER_FRAME, t.lineAnimation, t),
				t.step2()
			}),
			egret.Tween.get(this.txtbetBtnsIntroduce1).to({
				x: -1 * this.txtbetBtnsIntroduce1.width
			}, 500, egret.Ease.cubicOut).call(function() {
				t.removeChild(t.txtbetBtnsIntroduce1)
			}),
			this.removeNextText()
		}
		,
		i.prototype.step2 = function() {
			this.removeChild(this.darkSprite),
			this.arrow_group_1 = new eui.Group,
			this.arrow_group_2 = new eui.Group,
			this.arrow_group_3 = new eui.Group;
			var t = new eui.Image;
			t.source = RES.getRes("icon_arrow_png"),
			t.width = 74,
			t.height = 80,
			t.rotation = 180,
			this.arrow_group_1.width = 100,
			this.arrow_group_1.height = 150,
			this.arrow_group_1.x = 360,
			this.arrow_group_1.y = 1100,
			this.arrow_group_1.addChild(t),
			this.addChild(this.arrow_group_1);
			var e = new eui.Image;
			e.source = RES.getRes("icon_arrow_png"),
			e.width = 74,
			e.height = 80,
			e.rotation = 180,
			this.arrow_group_2.width = 100,
			this.arrow_group_2.height = 150,
			this.arrow_group_2.x = 270,
			this.arrow_group_2.y = 950,
			this.arrow_group_2.addChild(e),
			this.addChild(this.arrow_group_2);
			var i = new eui.Image;
			i.source = RES.getRes("icon_arrow_png"),
			i.width = 74,
			i.height = 80,
			i.rotation = 180,
			this.arrow_group_3.width = 100,
			this.arrow_group_3.height = 150,
			this.arrow_group_3.x = 100,
			this.arrow_group_3.y = 1100,
			this.arrow_group_3.addChild(i),
			this.addChild(this.arrow_group_3);
			var n = 120
			  , a = 60
			  , s = -98
			  , o = -135;
			this.addBgBetBtnIntroduce(s, o, n, a, this.arrow_group_2),
			this.addBgBetBtnIntroduce(s + 10, o, n, a, this.arrow_group_1),
			this.addBgBetBtnIntroduce(s, o, n, a, this.arrow_group_3);
			var r = new eui.Label;
			r.text = "请下注",
			r.x = s + 23,
			r.y = o + 16,
			r.size = 30,
			r.fontFamily = "Microsoft YaHei",
			r.textColor = 0,
			r.lineSpacing = 15,
			r.stroke = 1,
			r.strokeColor = 14853966,
			this.arrow_group_1.addChild(r);
			var l = new eui.Label;
			l.text = "请下注",
			l.x = s + 13,
			l.y = o + 16,
			l.size = 30,
			l.fontFamily = "Microsoft YaHei",
			l.textColor = 0,
			l.lineSpacing = 15,
			l.stroke = 1,
			l.strokeColor = 14853966,
			this.arrow_group_2.addChild(l);
			var h = new eui.Label;
			h.text = "请下注",
			h.x = s + 13,
			h.y = o + 16,
			h.size = 30,
			h.fontFamily = "Microsoft YaHei",
			h.textColor = 0,
			h.lineSpacing = 15,
			h.stroke = 1,
			h.strokeColor = 14853966,
			this.arrow_group_3.addChild(h),
			this.addEventListener(egret.Event.ENTER_FRAME, this.imgArrowAnimation, this),
			this.bet_guide_btn_group.name = "4",
			this.bet_guide_btn_rise_group.name = "2",
			this.btn_odds_3.name = "10",
			this.bet_guide_btn_group.addEventListener(egret.TouchEvent.TOUCH_TAP, this.bet, this),
			this.bet_guide_btn_rise_group.addEventListener(egret.TouchEvent.TOUCH_TAP, this.bet, this),
			this.btn_odds_3.addEventListener(egret.TouchEvent.TOUCH_TAP, this.bet, this),
			this._klineMasterBar.startTimer(1);
			var d = this;
			this.beting = !0,
			this.startTimer(25, 15, function() {
				d.is_bet ? d.startTimer(10, 10, function() {
					d.stopBet(d)
				}) : d._klineMasterBar.stopTimer()
			}),
			this.showStartBetNotice(this)
		}
		,
		i.prototype.step7 = function() {
			var t = this;
			this.settling = !0,
			this.beting = !1,
			this.startTimer(30, 30, function() {
				t.settling = !1,
				t._klineMasterBar.clearTimer(2),
				t.showSettleResult(this.capital_odds[3])
			}),
			this._klineMasterBar.startTimer(2)
		}
		,
		i.prototype.showWinIntroduce = function() {
			var t = this;
			this.bet_guide_btn_rise_group_1.x = this.bet_guide_btn_rise_group.x,
			this.bet_guide_btn_rise_group_1.y = this.height,
			this.bet_guide_btn_rise_group_1.visible = !0,
			this.bet_guide_btn_group_1.x = this.bet_guide_btn_group.x,
			this.bet_guide_btn_group_1.y = this.height,
			this.bet_guide_btn_group_1.visible = !0,
			this.bet_guide_btn_group_2.x = this.btn_odds_3.x,
			this.bet_guide_btn_group_2.y = this.height,
			this.bet_guide_btn_group_2.visible = !0,
			this.showDark(.6),
			this.drawRuler(),
			this.img_introduce_girl = new eui.Image,
			this.img_introduce_girl.source = RES.getRes("icon_girl_win_png"),
			this.img_introduce_girl.width = 296.7,
			this.img_introduce_girl.height = 472.7,
			this.img_introduce_girl.x = this.width,
			this.img_introduce_girl.y = this.height - this.img_introduce_girl.height,
			this.img_introduce_girl.visible = !1,
			this.addChild(this.img_introduce_girl),
			this.img_introduce_girl.visible = !0,
			this.addChild(this.bet_guide_btn_rise_group_1),
			this.addChild(this.bet_guide_btn_group_1),
			this.addChild(this.bet_guide_btn_group_2),
			this.point_diff_group.visible = !1,
			this.setChildIndex(this.darkSprite, 1e3),
			this.setChildIndex(this.ruler_group, 1001),
			this.setChildIndex(this.point_diff_group, 1001),
			this.setChildIndex(this.img_introduce_girl, 1002),
			egret.Tween.get(this.point_diff_group).to({
				x: 30,
				y: 510
			}, 700).call(function() {
				var e = "点差上涨29点，>0并且位于上涨区间 > 26"
				  , i = t.point_diff_group.x + t.point_diff_group.width - 30
				  , n = t.point_diff_group.y + 17;
				t.txtbetBtnsIntroduce4 = t.showIntroduceText(t.txtbetBtnsIntroduce4, i, n, e, 25, 16777215, 150, t, function() {
					egret.Tween.get(t.img_introduce_girl).to({
						x: t.width - t.img_introduce_girl.width
					}, 500).call(function() {
						var e = 700
						  , i = 500
						  , n = 10
						  , a = t.height / 2 - t.bet_guide_btn_rise_group_1.height + 30 + t.bet_guide_btn_rise_group_1.height / 2;
						t.addBgIntroduce(n, a, e, i),
						t.bg_introduce.visible = !0,
						t.setChildIndex(t.bg_introduce, 1001),
						t.setChildIndex(t.img_introduce_girl, 1002),
						t.setChildIndex(t.bet_guide_btn_rise_group_1, 1002),
						t.setChildIndex(t.bet_guide_btn_group_1, 1002),
						t.setChildIndex(t.bet_guide_btn_group_2, 1002),
						egret.Tween.get(t.bet_guide_btn_rise_group_1).to({
							x: 20,
							y: t.height / 2 - t.bet_guide_btn_rise_group_1.height + 150
						}, 700).call(function() {
							t.setChildIndex(t.bet_guide_btn_rise_group_1, 1002);
							var e = "下注     赔率     盈利\n1000  x  1.85 =  1850"
							  , i = "未中奖"
							  , s = "1000  x   12   =  12000"
							  , o = "       恭喜您\n共盈利13850金币!";
							n = t.bet_guide_btn_rise_group_1.x + t.bet_guide_btn_rise_group_1.width + 20,
							a = t.bet_guide_btn_rise_group_1.y + t.bet_guide_btn_rise_group_1.height / 2 - 95,
							t.txtbetBtnsIntroduce1 = t.showIntroduceText(t.txtbetBtnsIntroduce1, n, a, e, 30, 0, 150, t, function() {
								n = t.txtbetBtnsIntroduce1.x,
								a = t.bet_guide_btn_group_1.y + t.bet_guide_btn_group_1.height / 2 - 20,
								t.txtbetBtnsIntroduce2 = t.showIntroduceText(t.txtbetBtnsIntroduce2, n, a, i, 30, 0, 150, t, function() {
									n = t.txtbetBtnsIntroduce2.x,
									a = t.bet_guide_btn_group_2.y + t.bet_guide_btn_group_2.height / 2 - 20,
									t.txtbetBtnsIntroduce3 = t.showIntroduceText(t.txtbetBtnsIntroduce3, n, a, s, 30, 0, 150, t, function() {
										n = 110,
										a = t.bet_guide_btn_group_2.y + t.bet_guide_btn_group_2.height + 10,
										t.txtbetBtnsIntroduce5 = t.showIntroduceText(t.txtbetBtnsIntroduce5, n, a, o, 40, 0, 150, t, function() {
											t.showNextText(t.height - 70),
											t.darkSprite.addEventListener(egret.TouchEvent.TOUCH_TAP, t.removeWinIntroduce, t)
										}, 1)
									}, 1)
								})
							}, 1, 50)
						}, t),
						egret.Tween.get(t.bet_guide_btn_group_1).to({
							x: 35,
							y: t.height / 2 + 175
						}, 700).call(function() {
							t.setChildIndex(t.bet_guide_btn_group_1, 1002)
						}, t),
						egret.Tween.get(t.bet_guide_btn_group_2).to({
							x: 35,
							y: t.height / 2 + 280
						}, 700).call(function() {
							t.setChildIndex(t.bet_guide_btn_group_2, 1002)
						}, t)
					}, t)
				}, 0)
			}, this)
		}
		,
		i.prototype.drawRuler = function() {
			this.ruler_group = new eui.Group;
			var t = new eui.Image;
			t.source = RES.getRes("zhishu-bg_png"),
			t.width = 710,
			t.height = 470,
			t.y = -40,
			t.x = 5,
			this.ruler_group.addChild(t),
			this.drawCandle(2, 300, -20, 90, 30, 180, this.ruler_group);
			var e = new egret.Shape;
			e.graphics.lineStyle(1, 13421772);
			for (var i = 5; 710 > i; )
				e.graphics.moveTo(i, 160),
				e.graphics.lineTo(i + 3, 160),
				i += 6;
			this.ruler_group.addChild(e);
			var n = (this.drawText(50, 135, "开盘价: 15169.56", 25, this.ruler_group),
			-30);
			i = 370;
			var a = new egret.Shape;
			for (a.graphics.lineStyle(2, 13421772); 350 > n; )
				e.graphics.moveTo(i, n),
				e.graphics.lineTo(i, n + 3),
				n += 6;
			this.ruler_group.addChild(a),
			this.drawLineClosePrice(-20, "29", this._klineMasterBar.options.KlineUpColor, 1, 10),
			this.drawText(50, -20, "收盘价: 15192.56", 25, this.ruler_group),
			n = 18;
			for (var s = 0; 7 > s; s++) {
				i = 370;
				var o = new egret.Shape;
				o.graphics.lineStyle(2, 13421772);
				var r = 0;
				r = 0 == s ? n - 20 : 6 == s ? n + 20 : n;
				for (var l = 0; 4 > l; l++)
					o.graphics.moveTo(i, r),
					o.graphics.lineTo(i + 2, r),
					i += 5;
				var h = "";
				0 == s || 6 == s ? h = "26" : 1 == s || 5 == s ? h = "15" : 2 == s || 4 == s ? h = "6" : 3 == s && (h = "0"),
				this.drawText(i + 5, r - 10, h, 20, this.ruler_group),
				n += 48,
				this.ruler_group.addChild(o),
				this.ruler_group.y = 140,
				this.addChild(this.ruler_group)
			}
		}
		,
		i.prototype.drawLineClosePrice = function(t, e, i, n, a) {
			var s = new egret.Shape;
			s.graphics.lineStyle(1, i);
			for (var o = 5; 710 > o; )
				s.graphics.moveTo(o, t),
				s.graphics.lineTo(o + 3, t),
				o += 6;
			this.ruler_group.addChild(s);
			var r = this.drawText(450, t, "点差" + e, 25, this.ruler_group, i)
			  , l = new eui.Label;
			l.text = "x" + a;
			var h = new eui.Image;
			1 == n ? h.source = RES.getRes(CONST.ODDS_IMG.UP) : 2 == n ? h.source = RES.getRes(CONST.ODDS_IMG.FLAT) : 3 == n && (h.source = RES.getRes(CONST.ODDS_IMG.DOWN)),
			h.x = 450 + r.width + 20,
			h.y = r.y,
			h.width = 60,
			h.height = 43,
			l.x = 450 + r.width + 20,
			l.y = h.y + 3,
			l.textAlign = "center",
			l.textColor = 16113323,
			l.stroke = 1,
			l.strokeColor = 789259,
			l.width = 60,
			l.textAlign = "center",
			l.size = 25,
			this.ruler_group.addChild(h),
			this.ruler_group.addChild(l)
		}
		,
		i.prototype.drawText = function(t, e, i, n, a, s, o, r, l) {
			void 0 === s && (s = 16777215),
			void 0 === o && (o = 5),
			void 0 === r && (r = 0),
			void 0 === l && (l = 14853966);
			var h = new eui.Label;
			return h.text = i,
			h.size = n,
			h.fontFamily = "Microsoft YaHei",
			h.x = t,
			h.y = e,
			h.textColor = s,
			h.multiline = !0,
			h.maxWidth = 660,
			h.lineSpacing = o,
			h.stroke = r,
			h.strokeColor = l,
			a.addChild(h),
			h
		}
		,
		i.prototype.showTaskComplete = function() {
			this.showDark(.6, !0);
			var t = new eui.Group;
			t.width = 500,
			t.height = 492,
			t.y = -1 * t.height,
			t.x = (this.width - t.width) / 2,
			t.name = "completeGroup",
			this.addChild(t);
			var e = new eui.Image;
			e.width = 500,
			e.height = 492,
			e.x = 0,
			e.y = 0,
			this.is_new ? e.source = RES.getRes("icon_task_complete1_png") : e.source = RES.getRes("icon_task_complete2_png"),
			t.addChild(e),
			e.addEventListener(egret.TouchEvent.TOUCH_TAP, this.clickComplete, this);
			egret.Tween.get(t).to({
				y: this.height / 2 - 300
			}, 700, egret.Ease.cubicOut).call(function() {}),
			this.removeEventListener(egret.Event.ENTER_FRAME, this.lbMyBetAnimation, this)
		}
		,
		i.prototype.clickComplete = function() {
			if (t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().return_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			this.is_new)
				;
			else {
				if (t.SceneTrade.getInstance().stopGrabSound(),
				t.SceneTrade.getInstance().playBgSound(),
				this.destoryAll(),
				null != this.params) {
					var e = this.params.from;
					if ("game_grab" == e)
						return void t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_GRAB, this.params)
				}
				t.FooterBar.getInstance().goTo(t.FooterBar.getInstance().btns[0], !0)
			}
		}
		,
		i.prototype.gameTitleAnimation = function(t) {
			1 == this.type1 ? this.icon_game_title.width < 126 && this.icon_game_title.width >= 106 ? (this.icon_game_title.width = this.icon_game_title.width + 1,
			this.icon_game_title.height = this.icon_game_title.height + .3) : this.type1 = 0 : 0 == this.type1 && (this.icon_game_title.width <= 126 && this.icon_game_title.width > 106 ? (this.icon_game_title.width = this.icon_game_title.width - 1,
			this.icon_game_title.height = this.icon_game_title.height - .3) : this.type1 = 1)
		}
		,
		i.prototype.showNextText = function(t, e, i) {
			void 0 === e && (e = 30),
			void 0 === i && (i = null),
			this.removeNextText(),
			null == this.lb_next && (this.lb_next = new eui.Label),
			this.lb_next.text = "点击继续",
			null == i ? this.lb_next.x = (this.width - this.lb_next.width) / 2 : this.lb_next.x = i,
			this.lb_next.y = t - 20,
			this.lb_next.size = e,
			this.lb_next.fontFamily = "Microsoft YaHei",
			this.lb_next.touchEnabled = !1,
			this.addChild(this.lb_next),
			null == this.img_hand && (this.img_hand = new eui.Image,
			this.img_hand.source = RES.getRes("icon_hand_png"),
			this.img_hand.width = 69,
			this.img_hand.height = 86,
			this.img_hand.touchEnabled = !1),
			null == i ? this.img_hand.x = (this.width - this.img_hand.width) / 2 + 10 : this.img_hand.x = i + 35,
			this.img_hand.y = t,
			this.addChild(this.img_hand),
			this.addEventListener(egret.Event.ENTER_FRAME, this.imgHandAnimation, this)
		}
		,
		i.prototype.showIntroduce = function(t, e, i, n, a, s) {
			this.removeIntroduce(),
			null == this.introduceGroup && (this.introduceGroup = new eui.Group),
			null == this.lb_introduce1 && (this.lb_introduce1 = new eui.Label),
			null == this.lb_introduce2 && (this.lb_introduce2 = new eui.Label),
			null != t && (this.lb_introduce1.x = t),
			null != e && (this.lb_introduce1.y = e,
			this.lb_introduce2.y = e),
			null != i && (this.lb_introduce2.height = i),
			null != n && (this.lb_introduce2.width = n),
			this.lb_introduce1.fontFamily = "Microsoft YaHei",
			this.lb_introduce1.text = a,
			this.lb_introduce1.touchEnabled = !1,
			this.lb_introduce2.textAlign = "left",
			this.lb_introduce2.fontFamily = "Microsoft YaHei",
			this.lb_introduce2.text = s,
			this.lb_introduce2.touchEnabled = !1,
			this.lb_introduce2.lineSpacing = 3,
			this.introduceGroup.addChild(this.lb_introduce1),
			this.introduceGroup.addChild(this.lb_introduce2),
			this.addChild(this.introduceGroup),
			this.lb_introduce2.x = this.lb_introduce1.x + this.lb_introduce1.width + 5,
			this.introduceGroup.horizontalCenter = "0.5"
		}
		,
		i.prototype.removeIntroduce = function() {
			this.contains(this.introduceGroup) && this.removeChild(this.introduceGroup)
		}
		,
		i.prototype.removeNextText = function() {
			this.contains(this.lb_next) && this.removeChild(this.lb_next),
			this.contains(this.img_hand) && (this.removeEventListener(egret.Event.ENTER_FRAME, this.imgHandAnimation, this),
			this.removeChild(this.img_hand))
		}
		,
		i.prototype.bet = function(e) {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().bet_sound_ready && t.SceneTrade.getInstance().bet_sound.play(0, 1);
			var i = e.currentTarget.name;
			"2" == i ? (this.bet_guide_btn_rise_group.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.bet, this),
			this.bet_guide_btn_rise_group_click = !0,
			this.arrow_group_2.visible = !1,
			this.label_my_bet_0.text = "1000") : "4" == i ? (this.bet_guide_btn_group.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.bet, this),
			this.bet_guide_btn_4_click = !0,
			this.arrow_group_1.visible = !1,
			this.label_my_bet_6.text = "1000") : "10" == i && (this.btn_odds_3.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.bet, this),
			this.bet_guide_btn_10_click = !0,
			this.arrow_group_3.visible = !1,
			this.label_my_bet_3.text = "1000");
			var n = this
			  , a = Utils.moneyFormatBack(this.label_bet_total_amount_6.text);
			this.label_bet_total_amount_6.text = Utils.moneyFormat(a + 1e3, 2) + "",
			a = Utils.moneyFormatBack(this.label_bet_total_amount_0.text),
			this.label_bet_total_amount_0.text = Utils.moneyFormat(a + 1e3, 2) + "",
			a = Utils.moneyFormatBack(this.label_bet_total_amount_3.text),
			this.label_bet_total_amount_3.text = Utils.moneyFormat(a + 1e3, 2) + "",
			this.bet_guide_btn_rise_group_click && this.bet_guide_btn_4_click && this.bet_guide_btn_10_click && (this.addEventListener(egret.Event.ENTER_FRAME, this.lbMyBetAnimation, this),
			this.removeChild(this.arrow_group_1),
			this.removeChild(this.arrow_group_2),
			this.removeChild(this.arrow_group_3),
			this.removeEventListener(egret.Event.ENTER_FRAME, this.imgArrowAnimation, this),
			this.is_bet = !0,
			this.removeEventListener(egret.Event.ENTER_FRAME, this.gameTitleAnimation, this),
			setTimeout(function() {
				n.introduceBet(),
				n.timer.stop(),
				n._klineMasterBar.stopTimer()
			}, 500),
			this.timer.running || this.startTimer(10, 10, function() {
				n.stopBet(n)
			}))
		}
		,
		i.prototype.introduceBet = function() {
			this.bet_guide_btn_rise_group_1.x = this.bet_guide_btn_rise_group.x,
			this.bet_guide_btn_rise_group_1.y = this.height,
			this.bet_guide_btn_rise_group_1.visible = !0,
			this.bet_guide_btn_group_1.x = this.bet_guide_btn_group.x,
			this.bet_guide_btn_group_1.y = this.height,
			this.bet_guide_btn_group_1.visible = !0,
			this.bet_guide_btn_group_2.x = this.btn_odds_3.x,
			this.bet_guide_btn_group_2.y = this.height,
			this.bet_guide_btn_group_2.visible = !0,
			this.contains(this.darkSprite) && this.removeChild(this.darkSprite),
			this.showDark(.6, !0),
			this.img_introduce_girl = new eui.Image,
			this.img_introduce_girl.source = RES.getRes("icon_introduce_girl_png"),
			this.img_introduce_girl.width = 353.3,
			this.img_introduce_girl.height = 369.2,
			this.img_introduce_girl.x = this.width,
			this.img_introduce_girl.y = this.height - this.img_introduce_girl.height - 530,
			this.addChild(this.img_introduce_girl);
			var t = this;
			this.setChildIndex(this.bet_group, 1001),
			egret.Tween.get(this.bet_group).to({
				y: this.bet_group.y - 120
			}, 500, egret.Ease.cubicOut).call(function() {
				t.btn_group_3.y = 946,
				t.btn_group_3.visible = !0,
				t.setChildIndex(t.btn_group_3, 1001),
				egret.Tween.get(t.btn_group_3).to({
					y: 100
				}, 500, egret.Ease.cubicOut).call(function() {
					t.drawText(30, t.btn_group_3.height + 20, "上涨\n1.85倍", 30, t.btn_group_3, 16777215, 20),
					t.drawText(167, t.btn_group_3.height + 20, " 平\n30倍", 30, t.btn_group_3, 16777215, 20),
					t.drawText(290, t.btn_group_3.height + 20, "下跌\n1.85倍", 30, t.btn_group_3, 16777215, 20)
				}, t),
				egret.Tween.get(t.img_introduce_girl).to({
					x: t.width - t.img_introduce_girl.width - 10
				}, 500, egret.Ease.cubicOut).call(function() {
					var e = 450
					  , i = 200
					  , n = 10
					  , a = t.img_introduce_girl.y + 100;
					t.addBgIntroduce(n, a, e, i),
					t.bg_introduce.visible = !0,
					t.setChildIndex(t.bg_introduce, 1001),
					t.setChildIndex(t.img_introduce_girl, 1002),
					t.introduceBetStep1()
				}, t)
			}, t)
		}
		,
		i.prototype.introduceBetStep1 = function() {
			var t = this;
			this.removeNextText(),
			this.darkSprite.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.introduceBetStep1, this);
			var e = this.label_my_bet_0.x - 2
			  , i = this.btn_odds_1.y - 5
			  , n = 400
			  , a = this.bet_guide_btn_rise_group.height + 10;
			this.showIntroduceRect(e, i, n, a, 16379715, this.bet_group, 1, 3),
			e = 30,
			i = this.img_introduce_girl.y + 145;
			var s = '三个按钮分别代表 \n"上涨"，"平"，"下跌"';
			this.txtbetBtnsIntroduce1 = this.showIntroduceText(this.txtbetBtnsIntroduce1, e, i, s, 30, 0, 150, this, function() {
				t.showNextText(t.height - 70),
				t.showNextText(t.bg_introduce.y + t.bg_introduce.height - 30, 30, (t.width - t.lb_next.width) / 2 - 80),
				t.darkSprite.addEventListener(egret.TouchEvent.TOUCH_TAP, t.introduceBetStep2, t)
			})
		}
		,
		i.prototype.introduceBetStep2 = function() {
			var t = this;
			this.darkSprite.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.introduceBetStep2, this),
			this.removeEventListener(egret.Event.ENTER_FRAME, this.rectAnimation, this),
			this.removeNextText(),
			egret.Tween.get(this.btn_group_3).to({
				y: -1 * (this.btn_group_3.height + 100)
			}, 500, egret.Ease.cubicOut).call(function() {
				t.removeChild(t.btn_group_3),
				t.btn_group_8.y = 1100,
				t.btn_group_8.visible = !0,
				t.setChildIndex(t.btn_group_8, 1001),
				egret.Tween.get(t.btn_group_8).to({
					y: 100
				}, 500, egret.Ease.cubicOut).call(function() {
					var e = 690
					  , i = t.label_interval_3.height + 5
					  , n = 10
					  , a = 0;
					t.showIntroduceRect(n, a, e, i, 16379715, t.btn_group_8, 2, 5),
					n = t.label_interval_3.x - 5,
					a = t.label_interval_3.y,
					t.showIntroduceRect(n, a, e, i, 16379715, t.bet_group, 1, 5),
					n = 30,
					a = t.img_introduce_girl.y + 145;
					var s = "框中区域代表8个点差区间。";
					t.txtbetBtnsIntroduce1 = t.showIntroduceText(t.txtbetBtnsIntroduce1, n, a, s, 30, 0, 150, t, function() {
						t.showNextText(t.bg_introduce.y + t.bg_introduce.height - 30, 30, (t.width - t.lb_next.width) / 2 - 80),
						t.darkSprite.addEventListener(egret.TouchEvent.TOUCH_TAP, t.introduceBetStep3, t)
					})
				}, t)
			}, t)
		}
		,
		i.prototype.introduceBetStep3 = function() {
			var t = this;
			this.darkSprite.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.introduceBetStep3, this),
			this.removeEventListener(egret.Event.ENTER_FRAME, this.rectAnimation, this),
			this.removeNextText();
			var e = 10
			  , i = 42
			  , n = 690
			  , a = this.label_odds_3.height + 5;
			this.showIntroduceRect(e, i, n, a, 16379715, this.btn_group_8, 2, 5),
			e = this.label_odds_3.x - 6,
			i = this.label_odds_3.y,
			this.showIntroduceRect(e, i, n, a, 16379715, this.bet_group, 1, 5),
			e = 30,
			i = this.img_introduce_girl.y + 145;
			var s = "框中区域代表点差区间对应的\n赔率。";
			this.txtbetBtnsIntroduce1 = this.showIntroduceText(this.txtbetBtnsIntroduce1, e, i, s, 30, 0, 150, this, function() {
				t.showNextText(t.bg_introduce.y + t.bg_introduce.height - 30, 30, (t.width - t.lb_next.width) / 2 - 80),
				t.darkSprite.addEventListener(egret.TouchEvent.TOUCH_TAP, t.introduceBetStep4, t)
			})
		}
		,
		i.prototype.introduceBetStep4 = function() {
			var t = this;
			this.darkSprite.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.introduceBetStep4, this),
			this.removeEventListener(egret.Event.ENTER_FRAME, this.rectAnimation, this),
			this.removeNextText(),
			egret.Tween.get(this.btn_group_8).to({
				y: -1 * this.btn_group_8.height
			}, 500, egret.Ease.cubicOut).call(function() {
				t.removeChild(this.btn_group_8);
				var e = t.label_bet_total_amount_3.x - 4
				  , i = t.label_bet_total_amount_3.y
				  , n = 690
				  , a = t.label_bet_total_amount_3.height + 5;
				t.showIntroduceRect(e, i, n, a, 16379715, t.bet_group, 2),
				e = t.label_bet_total_amount_0.x - 4,
				i = t.label_bet_total_amount_0.y,
				n = 405,
				a = t.label_bet_total_amount_0.height + 5,
				t.showIntroduceRect(e, i, n, a, 16379715, t.bet_group),
				e = 30,
				i = t.img_introduce_girl.y + 145;
				var s = "框中区域代表每个点差区间的\n下注总金额。";
				t.txtbetBtnsIntroduce1 = t.showIntroduceText(t.txtbetBtnsIntroduce1, e, i, s, 30, 0, 150, t, function() {
					t.showNextText(t.bg_introduce.y + t.bg_introduce.height - 30, 30, (t.width - t.lb_next.width) / 2 - 80),
					t.darkSprite.addEventListener(egret.TouchEvent.TOUCH_TAP, t.introduceBetStep5, t)
				})
			}, t)
		}
		,
		i.prototype.introduceBetStep5 = function() {
			var t = this;
			this.darkSprite.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.introduceBetStep5, this),
			this.removeEventListener(egret.Event.ENTER_FRAME, this.rectAnimation, this),
			this.removeNextText();
			var e = this.label_my_bet_3.x - 4
			  , i = this.label_my_bet_3.y - 2
			  , n = 690
			  , a = this.label_my_bet_3.height + 5;
			this.showIntroduceRect(e, i, n, a, 16379715, this.bet_group, 2),
			e = this.label_my_bet_0.x - 4,
			i = this.label_my_bet_0.y - 2,
			n = 405,
			a = this.label_my_bet_0.height + 5,
			this.showIntroduceRect(e, i, n, a, 16379715, this.bet_group),
			e = 30,
			i = this.img_introduce_girl.y + 145;
			var s = "框中区域代表您的下注金额。";
			this.txtbetBtnsIntroduce1 = this.showIntroduceText(this.txtbetBtnsIntroduce1, e, i, s, 30, 0, 150, this, function() {
				t.showNextText(t.bg_introduce.y + t.bg_introduce.height - 30, 30, (t.width - t.lb_next.width) / 2 - 80),
				t.darkSprite.addEventListener(egret.TouchEvent.TOUCH_TAP, t.introduceBetStep6, t)
			})
		}
		,
		i.prototype.introduceBetStep6 = function() {
			var t = this;
			this.darkSprite.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.introduceBetStep6, this),
			this.removeEventListener(egret.Event.ENTER_FRAME, this.rectAnimation, this),
			this.removeChild(this.txtbetBtnsIntroduce1),
			this.bet_group.contains(this.introduceRect) && this.bet_group.removeChild(this.introduceRect),
			this.bet_group.contains(this.introduceRect2) && this.bet_group.removeChild(this.introduceRect2),
			this.bet_group.contains(this.introduceRect3) && this.bet_group.removeChild(this.introduceRect3),
			this.removeNextText(),
			this.bet_guide_btn_group_1.visible = !0,
			this.bet_guide_btn_group_2.visible = !0,
			this.bet_guide_btn_rise_group_1.visible = !0,
			this.setChildIndex(this.bet_guide_btn_group_1, 1002),
			this.setChildIndex(this.bet_guide_btn_group_2, 1002),
			this.setChildIndex(this.bet_guide_btn_rise_group_1, 1002),
			t.showIntroduceRect(155, 7, 130, 150, 16379715, t.bet_group, 2, 3),
			t.showIntroduceRect(268, 170, 90, 140, 16379715, t.bet_group, 1, 3),
			t.showIntroduceRect(7, 168, 90, 140, 16379715, t.bet_group, 3, 3),
			this.bet_guide_btn_rise_group_1.y = this.height - this.bet_guide_btn_rise_group.height - 167,
			this.bet_guide_btn_rise_group_1.x = this.bet_guide_btn_rise_group.x + 6,
			this.bet_guide_btn_group_1.y = this.height - this.bet_guide_btn_group.height - 12,
			this.bet_guide_btn_group_1.x = this.bet_guide_btn_group.x + 6,
			this.bet_guide_btn_group_2.y = this.height - this.btn_odds_3.height - 12,
			this.bet_guide_btn_group_2.x = this.btn_odds_3.x + 6,
			egret.Tween.get(this.bet_guide_btn_rise_group_1).to({
				x: 20,
				y: this.img_introduce_girl.y - 220
			}, 500, egret.Ease.cubicOut).call(function() {
				var e = t.bet_guide_btn_rise_group_1.x + t.bet_guide_btn_rise_group_1.width + 20
				  , i = t.bet_guide_btn_rise_group_1.y + t.bet_guide_btn_rise_group_1.height / 2 - 15
				  , n = "点差 > 0，赔率1.85倍";
				t.txtbetBtnsIntroduce2 = t.showIntroduceText(t.txtbetBtnsIntroduce2, e, i, n, 30, 16777215, 150, t, function() {}, 0)
			}, t),
			egret.Tween.get(this.bet_guide_btn_group_1).to({
				x: 20,
				y: this.img_introduce_girl.y - 120
			}, 500, egret.Ease.cubicOut).call(function() {
				var e = t.bet_guide_btn_group_1.x + t.bet_guide_btn_group_1.width + 20
				  , i = t.bet_guide_btn_group_1.y + t.bet_guide_btn_group_1.height / 2 - 15
				  , n = "点差区间 上涨0 - 6，赔率6倍";
				t.txtbetBtnsIntroduce3 = t.showIntroduceText(this.txtbetBtnsIntroduce3, e, i, n, 30, 16777215, 150, this, function() {
					var e = 20;
					i = t.img_introduce_girl.y + 145;
					var n = "3个点差区间，您各下注\n1000金币，请等待开奖吧！";
					t.txtbetBtnsIntroduce4 = t.showIntroduceText(t.txtbetBtnsIntroduce4, e, i, n, 30, 0, 150, t, function() {
						t.showNextText(t.bg_introduce.y + t.bg_introduce.height - 20, 30, (t.width - t.lb_next.width) / 2 - 80),
						t.darkSprite.addEventListener(egret.TouchEvent.TOUCH_TAP, t.removeIntroduceBet, t)
					})
				}, 0)
			}, t),
			egret.Tween.get(this.bet_guide_btn_group_2).to({
				x: 20,
				y: this.img_introduce_girl.y - 20
			}, 500, egret.Ease.cubicOut).call(function() {
				var e = t.bet_guide_btn_group_2.x + t.bet_guide_btn_group_2.width + 20
				  , i = t.bet_guide_btn_group_2.y + t.bet_guide_btn_group_2.height / 2 - 15
				  , n = "点差区间上涨 > 26，赔率12倍";
				t.txtbetBtnsIntroduce5 = t.showIntroduceText(this.txtbetBtnsIntroduce5, e, i, n, 30, 16777215, 150, this, function() {}, 0)
			}, t)
		}
		,
		i.prototype.removeIntroduceBet = function() {
			this.bet_group.contains(this.introduceRect) && this.bet_group.removeChild(this.introduceRect),
			this.bet_group.contains(this.introduceRect2) && this.bet_group.removeChild(this.introduceRect2),
			this.bet_group.contains(this.introduceRect3) && this.bet_group.removeChild(this.introduceRect3);
			var t = this;
			this.darkSprite.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.removeIntroduceBet, this),
			this.removeNextText(),
			egret.Tween.get(this.bet_guide_btn_rise_group_1).to({
				x: -1 * this.bet_guide_btn_rise_group_1.width
			}, 500, egret.Ease.cubicOut).call(function() {
				t.removeChild(t.bet_guide_btn_rise_group_1)
			}),
			egret.Tween.get(this.bg_introduce).to({
				x: -1 * this.bg_introduce.width
			}, 500, egret.Ease.cubicOut).call(function() {
				t.removeChild(t.bg_introduce)
			}),
			egret.Tween.get(this.bet_guide_btn_group_1).to({
				x: -1 * this.bet_guide_btn_group_1.width
			}, 500, egret.Ease.cubicOut).call(function() {
				t.removeChild(t.bet_guide_btn_group_1)
			}),
			egret.Tween.get(this.bet_guide_btn_group_2).to({
				x: -1 * this.bet_guide_btn_group_2.width
			}, 500, egret.Ease.cubicOut).call(function() {
				t.removeChild(t.bet_guide_btn_group_2)
			}),
			egret.Tween.get(this.img_introduce_girl).to({
				x: this.width
			}, 500, egret.Ease.cubicOut).call(function() {
				t.removeChild(t.img_introduce_girl),
				t.removeChild(t.darkSprite),
				egret.Tween.get(t.bet_group).to({
					y: t.bet_group.y + 120
				}, 500, egret.Ease.cubicOut).call(function() {
					t._klineMasterBar.startTimer(1),
					t.timer.start()
				}, t)
			}),
			this.removeChild(this.txtbetBtnsIntroduce2),
			this.removeChild(this.txtbetBtnsIntroduce3),
			this.removeChild(this.txtbetBtnsIntroduce4),
			this.removeChild(this.txtbetBtnsIntroduce5),
			this.setChildIndex(this.bet_title_group, 1001)
		}
		,
		i.prototype.showIntroduceText = function(t, e, i, n, a, s, o, r, l, h, d) {
			void 0 === h && (h = 1),
			void 0 === d && (d = 15);
			var _ = this;
			return this.darkSprite.addEventListener(egret.TouchEvent.TOUCH_TAP, this.stopTyperText, this),
			r.contains(t) && r.removeChild(t),
			t = new egret.TextField,
			t.size = a,
			t.textColor = s,
			t.lineSpacing = d,
			t.stroke = h,
			t.strokeColor = 14853966,
			t.multiline = !0,
			r.addChild(t),
			t.x = e,
			t.y = i,
			this.typerEffect(t, n, o, function() {
				_.darkSprite.removeEventListener(egret.TouchEvent.TOUCH_TAP, _.stopTyperText, _),
				l()
			}),
			t
		}
		,
		i.prototype.stopTyperText = function() {
			this.stopTyper = !0
		}
		,
		i.prototype.show7line = function(t, e, i, n, a, s) {
			s.contains(this.line7_group) && s.removeChild(this.line7_group),
			this.line7_group = new eui.Group,
			this.line7_group.x = t,
			this.line7_group.y = e,
			this.line7_group.width = i,
			this.line7_group.height = n,
			s.addChild(this.line7_group);
			for (var o = 0; 7 > o; o++) {
				var r = 0;
				0 == o ? r = 32 : 1 == o ? r = 90 : 2 == o ? r = 138 : 3 == o ? r = 170 : 4 == o ? r = 202 : 5 == o ? r = 250 : 6 == o && (r = 308);
				var l = new egret.Shape;
				l.graphics.lineStyle(2, a),
				l.graphics.moveTo(3, r),
				l.graphics.lineTo(i - 3, r),
				l.graphics.endFill(),
				this.line7_group.addChild(l)
			}
		}
		,
		i.prototype.showIntroduceRect = function(t, e, i, n, a, s, o, r) {
			void 0 === o && (o = 1),
			void 0 === r && (r = 3),
			this.removeEventListener(egret.Event.ENTER_FRAME, this.rectAnimation, this),
			2 == o ? (s.contains(this.introduceRect2) && s.removeChild(this.introduceRect2),
			this.introduceRect2 = new egret.Shape,
			this.introduceRect2.graphics.moveTo(t, e),
			this.introduceRect2.graphics.lineStyle(r, a),
			this.introduceRect2.graphics.drawRoundRect(t, e, i, n, 10),
			this.introduceRect2.graphics.endFill(),
			s.addChild(this.introduceRect2)) : 1 == o ? (s.contains(this.introduceRect) && s.removeChild(this.introduceRect),
			this.introduceRect = new egret.Shape,
			this.introduceRect.graphics.moveTo(t, e),
			this.introduceRect.graphics.lineStyle(r, a),
			this.introduceRect.graphics.drawRoundRect(t, e, i, n, 10),
			this.introduceRect.graphics.endFill(),
			s.addChild(this.introduceRect),
			this.addEventListener(egret.Event.ENTER_FRAME, this.rectAnimation, this)) : 3 == o && (s.contains(this.introduceRect3) && s.removeChild(this.introduceRect3),
			this.introduceRect3 = new egret.Shape,
			this.introduceRect3.graphics.moveTo(t, e),
			this.introduceRect3.graphics.lineStyle(r, a),
			this.introduceRect3.graphics.drawRoundRect(t, e, i, n, 10),
			this.introduceRect3.graphics.endFill(),
			s.addChild(this.introduceRect3),
			this.addEventListener(egret.Event.ENTER_FRAME, this.rectAnimation, this))
		}
		,
		i.prototype.removeWinIntroduce = function() {
			this.removeChild(this.bet_guide_btn_rise_group_1),
			this.removeChild(this.bet_guide_btn_group_1),
			this.removeChild(this.bet_guide_btn_group_2),
			this.removeChild(this.txtbetBtnsIntroduce1),
			this.removeChild(this.txtbetBtnsIntroduce2),
			this.removeChild(this.txtbetBtnsIntroduce3),
			this.removeChild(this.txtbetBtnsIntroduce4),
			this.removeChild(this.txtbetBtnsIntroduce5),
			this.removeChild(this.img_introduce_girl),
			this.removeChild(this.ruler_group),
			this.removeNextText(),
			this.removeChild(this.darkSprite),
			this.removeChild(this.bg_introduce),
			egret.Tween.get(this.point_diff_group).to({
				x: (this.width - this.point_diff_group.width) / 2,
				y: 192
			}, 700).call(function() {}, this);
			var t = this;
			setTimeout(function() {
				t.showTaskComplete()
			}, 500)
		}
		,
		i.prototype.removeIntroduceKline = function() {
			this.darkSprite.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.removeIntroduceKline, this),
			this.removeNextText(),
			this.introducingKline = !1,
			this.removeChild(this.candleGroup1),
			this.removeChild(this.candleGroup2),
			this.removeChild(this.txtbetBtnsIntroduce1),
			this.removeChild(this.txtbetBtnsIntroduce2),
			this.removeChild(this.txtbetBtnsIntroduce3),
			this.removeChild(this.img_introduce_girl),
			this.removeChild(this.introduceRect),
			this.removeChild(this.line7_group),
			this.removeChild(this.bg_introduce),
			this.removeEventListener(egret.Event.ENTER_FRAME, this.rectAnimation, this),
			this.removeChild(this.darkSprite),
			this.contains(this.arrow_group_1) && (this.removeChild(this.arrow_group_1),
			this.removeEventListener(egret.Event.ENTER_FRAME, this.imgArrowAnimation1, this)),
			this._klineMasterBar.stopTimer(),
			this._klineMasterBar.startTimer(2),
			this.timer.stop(),
			this.timer.start()
		}
		,
		i.prototype.drawLine = function(t, e, i, n, a, s, o) {
			void 0 === o && (o = 2);
			var r = new egret.Shape;
			return r.graphics.lineStyle(o, a),
			r.graphics.moveTo(t, i),
			r.graphics.lineTo(e, n),
			r.graphics.endFill(),
			s.addChild(r),
			r
		}
		,
		i.prototype.typerEffect = function(t, e, i, n) {
			void 0 === e && (e = ""),
			void 0 === i && (i = 200),
			void 0 === n && (n = null);
			var a = e.split("")
			  , s = a.length;
			this.stopTyper = !1;
			var o = 0
			  , r = setInterval(function(i) {
				i.stopTyper ? (t.text = e,
				n(),
				clearInterval(r)) : (t.appendText(a[o]),
				o++,
				o > s - 1 && null != n && (n(),
				clearInterval(r)))
			}, i, this)
		}
		,
		i.prototype.stopBet = function(t) {
			t.icon_game_title.source = RES.getRes("icon_wating_settle_png"),
			t.timer_label.text = "30",
			t.disabledBetBtn(),
			t.showStopBetNotice(t)
		}
		,
		i.prototype.startTimer = function(t, e, i) {
			this.timer = new egret.Timer(1e3,e),
			this.timer.addEventListener(egret.TimerEvent.TIMER, this.timerFunc, this),
			this.timer.addEventListener(egret.TimerEvent.TIMER_COMPLETE, i, this),
			this.seconds = t,
			this.timer.start()
		}
		,
		i.prototype.timerFunc = function() {
			var e = (new Date).getTime();
			if (this._klineMasterBar.setTime(e),
			this._klineMasterBar.seconds = this.seconds,
			this.seconds -= 1,
			this.seconds >= 0 && (this.timer_label.text = this.seconds + "",
			this._klineMasterBar.updateTimeLabel(this.seconds.toString())),
			this.beting && 20 == this.seconds && this.addMessageToList(this.betMessageList[0]),
			this.beting && 14 == this.seconds && this.addMessageToList(this.betMessageList[1]),
			this.beting && 10 == this.seconds && this.addMessageToList(this.betMessageList[2]),
			this.beting && 5 == this.seconds && this.addMessageToList(this.betMessageList[3]),
			this.settling && 29 == this.seconds && (this.point_diff_group.visible = !1,
			this.introduceKline()),
			this.settling && 1 == this.seconds && this.removeEventListener(egret.Event.ENTER_FRAME, this.gameTitleAnimation, this),
			this.settling && 27 == this.seconds && this.addMessageToList(this.waitSettleMessageList[0]),
			this.settling && 23 == this.seconds && this.addMessageToList(this.waitSettleMessageList[1]),
			this.settling && 20 == this.seconds && this.addMessageToList(this.waitSettleMessageList[2]),
			this.settling && 15 == this.seconds && this.addMessageToList(this.waitSettleMessageList[3]),
			this.settling && 10 == this.seconds && this.introducingKline) {
				this.timer.stop(),
				this._klineMasterBar.stopTimer(),
				this.arrow_group_1 = new eui.Group,
				this.arrow_group_1.width = 100,
				this.arrow_group_1.height = 150,
				this.arrow_group_1.x = 360,
				this.arrow_group_1.y = 215,
				this.addChild(this.arrow_group_1);
				var i = new eui.Image;
				i.source = RES.getRes("icon_arrow_png"),
				i.width = 60,
				i.height = 65,
				i.anchorOffsetX = 37,
				i.anchorOffsetY = 40,
				i.rotation = 90,
				i.x = 130,
				i.y = 35,
				this.arrow_group_1.addChild(i);
				var n = 200
				  , a = 60
				  , s = -98
				  , o = 0;
				this.addBgBetBtnIntroduce(s + 10, o, n, a, this.arrow_group_1);
				var r = new eui.Label;
				r.text = "区间 15 - 26",
				r.x = s + 35,
				r.y = o + 16,
				r.size = 30,
				r.fontFamily = "Microsoft YaHei",
				r.textColor = 0,
				r.lineSpacing = 15,
				r.stroke = 1,
				r.strokeColor = 14853966,
				this.arrow_group_1.addChild(r),
				this.addEventListener(egret.Event.ENTER_FRAME, this.imgArrowAnimation1, this)
			}
			if (this.settling && 8 == this.seconds && this.addMessageToList(this.waitSettleMessageList[4]),
			this.settling && 4 == this.seconds && this.addMessageToList(this.waitSettleMessageList[5]),
			this.settling && this.seconds <= 2 && (this._klineMasterBar.seconds = this.seconds),
			this.beting && 3 == this.seconds && this.showTimeDownNotice(this),
			this.settling && this.seconds <= 10 && this.seconds >= 0 && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().count_down_10_sound_ready && t.SceneTrade.getInstance().count_down_10_sound.play(0, 1),
			this.beting) {
				for (var l = 0; l < this.lb_bet_total_amount_array.length; l++) {
					var h = Math.floor(4 * Math.random())
					  , d = this.amountArray[h]
					  , _ = Utils.moneyFormatBack(this.lb_bet_total_amount_array[l].text);
					this.lb_bet_total_amount_array[l].text = Utils.moneyFormat(_ + d, 2) + "",
					this.totalBetAmount += d,
					this._klineMasterBar.updateTotalBetAmount(this.totalBetAmount)
				}
				this._klineMasterBar.drawLineTradeTimer(this.seconds)
			} else
				this._klineMasterBar.drawLineInterval(this.seconds, !1);
			0 == this.seconds && this.settling && this._klineMasterBar.drawLineInterval(0, !0)
		}
		,
		i.prototype.introduceKline = function() {
			var t = this;
			this.introducingKline = !0,
			this.showDark(.6);
			var e = 700
			  , i = 280
			  , n = 10
			  , a = this.bet_title_group.y + 50;
			this.addBgIntroduce(n, a, e, i),
			this.img_introduce_girl = new eui.Image,
			this.img_introduce_girl.source = RES.getRes("icon_introduce_girl_png"),
			this.img_introduce_girl.width = 282.7,
			this.img_introduce_girl.height = 295.3,
			this.img_introduce_girl.x = this.width,
			this.img_introduce_girl.y = this.bg_introduce.y - this.img_introduce_girl.height,
			this.addChild(this.img_introduce_girl),
			this.setChildIndex(this.kline_group, 1001),
			this.setChildIndex(this.point_diff_group, 1001),
			this.setChildIndex(this.bg_introduce, 1001),
			this.setChildIndex(this.img_introduce_girl, 1001),
			this.setChildIndex(this.group_message_norice, 1002),
			setTimeout(function() {
				egret.Tween.get(t.img_introduce_girl).to({
					x: t.width - t.img_introduce_girl.width - 20
				}, 500, egret.Ease.cubicOut).call(function() {
					t.bg_introduce.visible = !0;
					var e = 20
					  , i = t.bg_introduce.y + 40
					  , n = "一个回合60秒，30秒一个棒子。\n前30秒是下注时间，对应下注棒; \n后30秒是等待开奖时间，对应开奖棒。";
					t.txtbetBtnsIntroduce1 = t.showIntroduceText(t.txtbetBtnsIntroduce1, e, i, n, 33, 0, 150, t, function() {
						t.showNextText(t.bg_introduce.y + t.bg_introduce.height - 40),
						t.darkSprite.addEventListener(egret.TouchEvent.TOUCH_TAP, t.introduceKlineStep1, t)
					})
				}, t)
			}, 200)
		}
		,
		i.prototype.introduceKlineStep1 = function() {
			var t = this;
			this.darkSprite.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.introduceKlineStep1, t),
			this.removeNextText(),
			this.candleGroup1 = new eui.Group,
			this.candleGroup2 = new eui.Group,
			this.drawCandle(1, 0, 0, -20, 30, 80, this.candleGroup1),
			this.drawCandle(2, 0, 0, -20, 30, 80, this.candleGroup2),
			this.candleGroup1.x = 100,
			this.candleGroup1.y = this.kline_group.y + this.kline_group.height + 70,
			this.candleGroup2.x = this.candleGroup1.width + 330,
			this.candleGroup2.y = this.candleGroup1.y,
			this.addChild(this.candleGroup1),
			this.addChild(this.candleGroup2),
			this.txtbetBtnsIntroduce2 = new egret.TextField,
			this.txtbetBtnsIntroduce2.size = 25,
			this.txtbetBtnsIntroduce2.textColor = 16777215,
			this.txtbetBtnsIntroduce2.lineSpacing = 10,
			this.txtbetBtnsIntroduce2.multiline = !0,
			this.txtbetBtnsIntroduce2.x = this.candleGroup1.x - 70,
			this.txtbetBtnsIntroduce2.y = this.candleGroup1.y + 130,
			this.addChild(this.txtbetBtnsIntroduce2),
			this.txtbetBtnsIntroduce3 = new egret.TextField,
			this.txtbetBtnsIntroduce3.size = 25,
			this.txtbetBtnsIntroduce3.textColor = 16777215,
			this.txtbetBtnsIntroduce3.lineSpacing = 10,
			this.txtbetBtnsIntroduce3.multiline = !0,
			this.txtbetBtnsIntroduce3.x = this.candleGroup2.x - 70,
			this.txtbetBtnsIntroduce3.y = this.txtbetBtnsIntroduce2.y,
			this.addChild(this.txtbetBtnsIntroduce3);
			var e = "空心棒(下注棒)"
			  , i = "实心棒(开奖棒)";
			t.typerEffect(t.txtbetBtnsIntroduce2, e, 150, function() {}),
			t.typerEffect(t.txtbetBtnsIntroduce3, i, 150, function() {
				t.showNextText(t.bg_introduce.y + t.bg_introduce.height - 40),
				t.darkSprite.addEventListener(egret.TouchEvent.TOUCH_TAP, t.introduceKlineStep2, t)
			});
			var n = 13 + this._klineMasterBar.options.KlineSpaceLeftWidth + 24 * (this._klineMasterBar.options.CandleWidth + this._klineMasterBar.options.CandleSpaceInterval)
			  , a = this.kline_group.y + 80
			  , s = this._klineMasterBar.options.KlineHeight
			  , o = 2 * (this._klineMasterBar.options.CandleWidth + this._klineMasterBar.options.CandleSpaceInterval);
			this.showIntroduceRect(n, a, o, s, 16379715, this),
			this.setChildIndex(this.introduceRect, 1002)
		}
		,
		i.prototype.introduceKlineStep2 = function() {
			var t = this;
			this.darkSprite.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.introduceKlineStep2, t),
			this.removeNextText();
			var e = 20
			  , i = t.bg_introduce.y + 40
			  , n = "k线当前实心棒才是开奖棒！\n开奖结果以开奖棒的点差为准！";
			t.txtbetBtnsIntroduce1 = t.showIntroduceText(t.txtbetBtnsIntroduce1, e, i, n, 33, 0, 150, t, function() {
				t.showNextText(t.bg_introduce.y + t.bg_introduce.height - 40),
				t.darkSprite.addEventListener(egret.TouchEvent.TOUCH_TAP, t.introduceKlineStep3, t)
			})
		}
		,
		i.prototype.introduceKlineStep3 = function() {
			var t = this;
			this.darkSprite.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.introduceKlineStep3, t),
			this.removeNextText();
			var e = this._klineMasterBar.groupSettle.x
			  , i = this.kline_group.y + 80
			  , n = this._klineMasterBar.groupSettle.height
			  , a = this._klineMasterBar.groupSettle.width + 5;
			this.showIntroduceRect(e, i, a, n, 16379715, this, 1, 5),
			this.show7line(e, i, a, n, 16379715, this),
			e = 20,
			i = t.bg_introduce.y + 40;
			var s = "k线区域闪烁部分为开奖棒的波动轨迹图\n该区域被分为8个点差区间，与最下方8个\n下注按钮一一对应";
			t.txtbetBtnsIntroduce1 = t.showIntroduceText(t.txtbetBtnsIntroduce1, e, i, s, 33, 0, 150, t, function() {
				t.showNextText(t.bg_introduce.y + t.bg_introduce.height - 40),
				t.darkSprite.addEventListener(egret.TouchEvent.TOUCH_TAP, t.introduceKlineStep4, t)
			})
		}
		,
		i.prototype.introduceKlineStep4 = function() {
			var t = this;
			this.darkSprite.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.introduceKlineStep4, t),
			this.removeNextText();
			var e = 20
			  , i = t.bg_introduce.y + 40
			  , n = "开奖棒的点差位于某个区间时,该区间就会闪烁\n当到达最右侧终点时,闪烁的区间即为开奖结果\n请等待开奖！";
			t.txtbetBtnsIntroduce1 = t.showIntroduceText(t.txtbetBtnsIntroduce1, e, i, n, 33, 0, 150, t, function() {
				t.showNextText(t.bg_introduce.y + t.bg_introduce.height - 40),
				t.darkSprite.addEventListener(egret.TouchEvent.TOUCH_TAP, t.removeIntroduceKline, t)
			})
		}
		,
		i.prototype.drawCandle = function(t, e, i, n, a, s, o) {
			var r = this._klineMasterBar.options.KlineUpColor
			  , l = (this._klineMasterBar.options.KlineDownColor,
			this._klineMasterBar.options.KlineFlatColor,
			null);
			1 == t ? l = r : 2 == t && (l = r);
			var h = new egret.Shape;
			h.graphics.moveTo(e, i),
			1 == t ? (h.graphics.lineStyle(2, l),
			h.graphics.beginFill(0, 0)) : 2 == t && h.graphics.beginFill(l, 1),
			h.graphics.drawRect(e, i, a, s),
			h.graphics.endFill();
			var d = e + a / 2;
			if (1 == t) {
				var _ = new egret.Shape;
				_.graphics.lineStyle(2, l),
				_.graphics.moveTo(d, n),
				_.graphics.lineTo(d, i),
				_.graphics.endFill();
				var p = new egret.Shape;
				p.graphics.lineStyle(2, l),
				p.graphics.moveTo(d, i + s),
				p.graphics.lineTo(d, n + s + 60),
				p.graphics.endFill(),
				o.addChild(_),
				o.addChild(p)
			} else {
				var u = new egret.Shape;
				u.graphics.lineStyle(2, l),
				u.graphics.moveTo(d, n),
				u.graphics.lineTo(d, n + s + 60),
				u.graphics.endFill(),
				o.addChild(u)
			}
			o.addChild(h)
		}
		,
		i.prototype.showSettleResult = function(e) {
			for (var i = {}, n = {}, a = 0; a < this.capital_odds.length; a++) {
				var s = (this.capital_odds[a].id,
				this.capital_odds[a].interval_start,
				this.capital_odds[a].interval_end,
				parseFloat(this.capital_odds[a].order))
				  , o = !1;
				(0 == s || 3 == s) && (o = !0);
				var r = 0
				  , l = 0;
				0 == s ? (r = 205,
				l = 960) : 1 == s ? (r = 330,
				l = 960) : 2 == s ? (r = 465,
				l = 960) : s >= 3 && 10 >= s && (r = 90 * (s - 2) - 60,
				l = 1115),
				1 == o ? parseFloat(this.lb_bet_total_amount_array[a].text) > 0 && (n[s] = {
					x: r,
					y: l
				}) : (this.img_lose_array[s].visible = !0,
				parseFloat(this.lb_bet_total_amount_array[a].text) > 0 && (i[s] = {
					x: r,
					y: l
				}))
			}
			for (var h in i)
				t.Fly.flyGold(i[h].x, i[h].y, 525, 655, 1500, 6, null, function() {});
			if (setTimeout(function() {
				for (var e in n)
					t.Fly.flyGold(525, 655, n[e].x, n[e].y, 2e3, 10, null, function() {})
			}, 2e3),
			this.addMessageToList(this.waitSettleMessageList[6]),
			this.addMessageToList({
				num: this.numQi,
				message_type: "S",
				message_type_s: "point_diff",
				point_diff: 29
			}),
			null != e) {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().settle_result_sound_ready && t.SceneTrade.getInstance().settle_result_sound.play(0, 1),
				this.btn_odds_6.visible = !0;
				var d = 2;
				this.settleGroup = new eui.Group,
				this.settleGroup.width = 83 * d,
				this.settleGroup.height = 85 * d,
				this.settleGroup.x = this.width / 2 - 85 * d / 2,
				this.settleGroup.y = this.height / 2 - 173;
				var _ = new eui.Image;
				_.width = 500,
				_.height = 490,
				_.verticalCenter = .5,
				_.horizontalCenter = .5,
				_.source = RES.getRes("bg_sunshine_png"),
				_.anchorOffsetX = 250,
				_.anchorOffsetY = 245,
				this.settleGroup.addChild(_);
				var p = new eui.Image;
				p.width = 83 * d,
				p.height = 85 * d,
				p.x = 0,
				p.y = 0,
				p.source = RES.getRes("btn_odds_rise_png"),
				this.settleGroup.addChild(p);
				var u = new eui.Label;
				u.fontFamily = "lgzbFont",
				u.width = 77 * d,
				u.height = 27.33 * d,
				u.x = 3 * d,
				u.y = 3 * d,
				u.text = e.display,
				u.textColor = 16113323,
				u.bold = !0,
				"BTCCNY" == this.capital ? u.size = 25 * d : u.size = 18 * d,
				u.stroke = 1,
				u.verticalAlign = "middle",
				u.textAlign = "center",
				this.settleGroup.addChild(u);
				var g = new eui.Label;
				g.fontFamily = "lgzbFont",
				g.width = 74 * d,
				g.height = 27.33 * d,
				g.x = 5 * d,
				g.y = (this.settleGroup.height - g.height) / d + 40,
				g.text = "x" + parseFloat(e.odds),
				g.textColor = 16777215,
				g.bold = !0,
				g.size = 27 * d,
				g.stroke = 1,
				g.verticalAlign = "middle",
				g.textAlign = "center",
				this.settleGroup.addChild(g),
				this.addChild(this.settleGroup);
				var c = this;
				egret.Tween.get(_).to({
					rotation: 250
				}, 2700, egret.Ease.cubicOut).call(function() {
					c.removeChild(c.settleGroup),
					c.showBigWinner("倾城一笑")
				}, this)
			}
			this.btn_odds_0.enabled = !0,
			this.btn_odds_6.enabled = !0
		}
		,
		i.prototype.partAdded = function(i, n) {
			e.prototype.partAdded.call(this, i, n),
			n == this.chat_list && (this.chat_list.dataProvider = new eui.ArrayCollection(this.chat_data),
			this.chat_list.itemRenderer = t.ChatItem)
		}
		,
		i.prototype.addMessageToList = function(t) {
			null != t && (this.chat_data.push(t),
			this.chat_list.dataProvider = new eui.ArrayCollection(this.chat_data),
			this.chat_list.validateNow(),
			this.scroller_chat_list.viewport.contentHeight >= this.scroller_chat_list.height && (this.scroller_chat_list.viewport.scrollV = this.scroller_chat_list.viewport.contentHeight - this.scroller_chat_list.height + 5))
		}
		,
		i.prototype.imgArrowAnimation = function(t) {
			1 == this.type ? this.arrow_group_1.y <= 1100 && this.arrow_group_1.y > 1080 ? (this.arrow_group_1.y = this.arrow_group_1.y - 1,
			this.arrow_group_2.y = this.arrow_group_2.y - 1,
			this.arrow_group_3.y = this.arrow_group_3.y - 1) : this.type = 0 : 0 == this.type && (this.arrow_group_1.y < 1100 && this.arrow_group_1.y >= 1080 ? (this.arrow_group_1.y = this.arrow_group_1.y + 1,
			this.arrow_group_2.y = this.arrow_group_2.y + 1,
			this.arrow_group_3.y = this.arrow_group_3.y + 1) : this.type = 1)
		}
		,
		i.prototype.imgArrowAnimation1 = function(t) {
			1 == this.type ? this.arrow_group_1.x <= 375 && this.arrow_group_1.x > 360 ? this.arrow_group_1.x = this.arrow_group_1.x - 1 : this.type = 0 : 0 == this.type && (this.arrow_group_1.x < 375 && this.arrow_group_1.x >= 360 ? this.arrow_group_1.x = this.arrow_group_1.x + 1 : this.type = 1)
		}
		,
		i.prototype.rectAnimation = function(t) {
			1 == this.type3 ? this.introduceRect.alpha <= 1 && this.introduceRect.alpha > 0 ? (this.introduceRect.alpha = (this.introduceRect.alpha - .02).toFixed(2),
			null != this.introduceRect2 && this.contains(this.introduceRect2) && (this.introduceRect2.alpha = (this.introduceRect2.alpha - .02).toFixed(2)),
			null != this.introduceRect3 && this.contains(this.introduceRect3) && (this.introduceRect3.alpha = (this.introduceRect3.alpha - .02).toFixed(2)),
			null != this.line7_group && this.contains(this.line7_group) && (this.line7_group.alpha = parseFloat((this.line7_group.alpha - .02).toFixed(2)))) : this.type3 = 0 : 0 == this.type3 && (this.introduceRect.alpha < 1 && this.introduceRect.alpha >= 0 ? (this.introduceRect.alpha = (this.introduceRect.alpha + .02).toFixed(2),
			null != this.introduceRect2 && this.contains(this.introduceRect2) && (this.introduceRect2.alpha = (this.introduceRect2.alpha + .02).toFixed(2)),
			null != this.introduceRect3 && this.contains(this.introduceRect3) && (this.introduceRect3.alpha = (this.introduceRect3.alpha + .02).toFixed(2)),
			null != this.line7_group && this.contains(this.line7_group) && (this.line7_group.alpha = parseFloat((this.line7_group.alpha + .02).toFixed(2)))) : this.type3 = 1)
		}
		,
		i.prototype.lineAnimation = function(t) {
			1 == this.type5 ? this.line1.alpha <= 1 && this.line1.alpha > 0 ? (this.line1.alpha = (this.line1.alpha - .02).toFixed(2),
			null != this.line2 && this.contains(this.line2) && (this.line2.alpha = (this.line2.alpha - .02).toFixed(2))) : this.type5 = 0 : 0 == this.type5 && (this.line1.alpha < 1 && this.line1.alpha >= 0 ? (this.line1.alpha = (this.line1.alpha + .02).toFixed(2),
			null != this.line2 && this.contains(this.line2) && (this.line2.alpha = (this.line2.alpha + .02).toFixed(2))) : this.type5 = 1)
		}
		,
		i.prototype.lbMyBetAnimation = function(t) {
			1 == this.type2 ? this.label_my_bet_0.size < 25 && this.label_my_bet_0.size >= 20 ? (this.label_my_bet_0.size = parseFloat((this.label_my_bet_0.size + .2).toFixed(1)),
			this.label_my_bet_3.size = parseFloat((this.label_my_bet_0.size + .2).toFixed(1)),
			this.label_my_bet_6.size = parseFloat((this.label_my_bet_6.size + .2).toFixed(1))) : this.type2 = 0 : 0 == this.type2 && (this.label_my_bet_0.size <= 25 && this.label_my_bet_0.size > 20 ? (this.label_my_bet_0.size = parseFloat((this.label_my_bet_0.size - .2).toFixed(1)),
			this.label_my_bet_3.size = parseFloat((this.label_my_bet_0.size - .2).toFixed(1)),
			this.label_my_bet_6.size = parseFloat((this.label_my_bet_6.size - .2).toFixed(1))) : this.type2 = 1)
		}
		,
		i.prototype.imgHandAnimation = function(t) {
			1 == this.type4 ? this.img_hand.y < this.lb_next.y + 30 && this.img_hand.y >= this.lb_next.y + 10 ? this.img_hand.y = this.img_hand.y + 1 : this.type4 = 0 : 0 == this.type4 && (this.img_hand.y <= this.lb_next.y + 30 && this.img_hand.y > this.lb_next.y + 10 ? this.img_hand.y = this.img_hand.y - 1 : this.type4 = 1)
		}
		,
		i.prototype.addBgIntroduce = function(t, e, i, n, a) {
			if (void 0 === a && (a = null),
			null == a) {
				this.bg_introduce = new egret.Bitmap,
				this.bg_introduce.texture = RES.getRes("bg_introduce_png");
				var s = new egret.Rectangle(30,31,10,10);
				this.bg_introduce.scale9Grid = s,
				this.bg_introduce.width = i,
				this.bg_introduce.height = n,
				this.bg_introduce.x = t,
				this.bg_introduce.y = e,
				this.bg_introduce.visible = !1,
				this.addChild(this.bg_introduce)
			} else {
				var o = new egret.Bitmap;
				o.texture = RES.getRes("bg_introduce_png");
				var s = new egret.Rectangle(30,31,10,10);
				o.scale9Grid = s,
				o.width = i,
				o.height = n,
				o.x = t,
				o.y = e,
				a.addChild(o)
			}
		}
		,
		i.prototype.addBgBetBtnIntroduce = function(t, e, i, n, a) {
			var s = new egret.Bitmap;
			s.texture = RES.getRes("bg_introduce_png");
			var o = new egret.Rectangle(36,23,2,2);
			s.scale9Grid = o,
			s.width = i,
			s.height = n,
			s.x = t,
			s.y = e,
			s.visible = !0,
			a.addChild(s)
		}
		,
		i.prototype.checkNewUserTask = function() {
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "user/checkNewUserTask", null, this.onCheckNewUserTaskComplete, this.onCheckNewUserTaskIOError, this.onCheckNewUserTaskProgress, this)
		}
		,
		i.prototype.onCheckNewUserTaskComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_USER_FOUND)
				this.is_new = n.results.is_new,
				this.is_new;
			else {
				if (403 == n.type)
					return this.destoryAll(),
					void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				var a = n.message;
				Toast.launch(a, -100)
			}
		}
		,
		i.prototype.onCheckNewUserTaskIOError = function(t) {}
		,
		i.prototype.onCheckNewUserTaskProgress = function(t) {}
		,
		i
	}(eui.Component);
	t.GameGrabGuideUI = e,
	__reflect(e.prototype, "game.GameGrabGuideUI", ["eui.UIComponent", "egret.DisplayObject"]);
	var i = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.skinName = "resource/ui/main/UserChatItem.exml",
			e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e
		}
		return __extends(e, t),
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			this.setData()
		}
		,
		e.prototype.dataChanged = function() {
			this.setData()
		}
		,
		e.prototype.setData = function() {
			if (null != this.message) {
				if ("N" == this.data.message_type) {
					this.user_avatar.visible = !0,
					this.vip_grade.visible = !0,
					void 0 == this.data.user_avatar || null == this.data.user_avatar || "" == this.data.user_avatar ? this.user_avatar.source = RES.getRes("person_png") : this.loadBankerImage(this.data.user_avatar),
					this.vip_grade.source = RES.getRes("icon_vip_" + this.data.vip_grade + "_png"),
					this.data.user_name.length > 6 && (this.data.user_name = this.data.user_name.substring(0, 6));
					var t = "         【" + this.data.user_name + "】: ";
					null == this.tx && (this.tx = new egret.TextField),
					this.tx.textFlow = [{
						text: t,
						style: {
							textColor: 16542376,
							size: 22
						}
					}, {
						text: this.data.message,
						style: {
							textColor: 16777215,
							size: 22
						}
					}]
				} else
					"S" == this.data.message_type && (this.user_avatar.visible = !1,
					this.vip_grade.visible = !1,
					null == this.tx && (this.tx = new egret.TextField),
					"apply_banker" == this.data.message_type_s ? this.tx.textFlow = [{
						text: "恭迎",
						style: {
							textColor: 16777215,
							size: 22
						}
					}, {
						text: this.data.user_name,
						style: {
							textColor: 5169700,
							size: 22
						}
					}, {
						text: "上庄",
						style: {
							textColor: 16777215,
							size: 22
						}
					}] : "off_banker" == this.data.message_type_s ? this.tx.textFlow = [{
						text: this.data.user_name,
						style: {
							textColor: 5169700,
							size: 22
						}
					}, {
						text: "下庄",
						style: {
							textColor: 16777215,
							size: 22
						}
					}] : "banker_win" == this.data.message_type_s ? this.tx.textFlow = [{
						text: "庄家",
						style: {
							textColor: 16777215,
							size: 22
						}
					}, {
						text: this.data.user_name,
						style: {
							textColor: 5169700,
							size: 22
						}
					}, {
						text: "赢了",
						style: {
							textColor: 16777215,
							size: 22
						}
					}, {
						text: this.data.amount + "金币",
						style: {
							textColor: 16771143,
							size: 22
						}
					}] : "banker_lose" == this.data.message_type_s ? this.tx.textFlow = [{
						text: "庄家",
						style: {
							textColor: 16777215,
							size: 22
						}
					}, {
						text: this.data.user_name,
						style: {
							textColor: 5169700,
							size: 22
						}
					}, {
						text: "输了",
						style: {
							textColor: 16777215,
							size: 22
						}
					}, {
						text: this.data.amount + "金币",
						style: {
							textColor: 3921496,
							size: 22
						}
					}] : "you_win" == this.data.message_type_s ? this.tx.textFlow = [{
						text: "你赢了",
						style: {
							textColor: 16777215,
							size: 22
						}
					}, {
						text: this.data.amount + "金币",
						style: {
							textColor: 16771143,
							size: 22
						}
					}] : "point_diff" == this.data.message_type_s ? 0 == this.data.point_diff ? this.tx.textFlow = [{
						text: "第 " + this.data.num + " 期 平胜 点差: " + this.data.point_diff,
						style: {
							textColor: 16777215,
							size: 22
						}
					}] : this.data.point_diff > 0 ? this.tx.textFlow = [{
						text: "第 " + this.data.num + " 期 红胜 点差: ",
						style: {
							textColor: 16777215,
							size: 22
						}
					}, {
						text: this.data.point_diff,
						style: {
							textColor: 16001316,
							size: 22
						}
					}] : this.data.point_diff < 0 && (this.tx.textFlow = [{
						text: "第 " + this.data.num + " 期 绿胜 点差: ",
						style: {
							textColor: 16777215,
							size: 22
						}
					}, {
						text: this.data.point_diff,
						style: {
							textColor: 5169700,
							size: 22
						}
					}]) : this.tx.textFlow = [{
						text: this.data.message,
						style: {
							textColor: 16750159,
							size: 22
						}
					}]);
				this.tx.textAlign = egret.VerticalAlign.MIDDLE,
				this.tx.multiline = !0,
				this.tx.width = 340,
				this.tx.height = this.tx.textHeight + 5,
				this.tx.x = 3.4,
				this.tx.y = 6,
				this.tx.lineSpacing = 10,
				this.height = this.tx.height + 5,
				this.addChild(this.tx)
			}
		}
		,
		e.prototype.loadBankerImage = function(t) {
			var e = new egret.ImageLoader;
			e.addEventListener(egret.Event.COMPLETE, this.bankerImageLoadCompleteHandler, this),
			e.load(t)
		}
		,
		e.prototype.bankerImageLoadCompleteHandler = function(t) {
			var e = t.currentTarget;
			this.user_avatar.bitmapData = e.data
		}
		,
		e
	}(eui.ItemRenderer);
	t.ChatItem = i,
	__reflect(i.prototype, "game.ChatItem")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i() {
			var t = e.call(this) || this;
			return t.BANKER_TIMES = 10,
			t.BANKER_STATUS_APPLY_OFF_BANKER = 1,
			t.BANKER_STATUS_BANKING = 2,
			t.BANKER_STATUS_PENDING = 3,
			t.BANKER_STATUS_QUIT = 4,
			t.BANKER_STATUS_REPLACED = 5,
			t.BANKER_STATUS_EXCEED_LIMIT = 6,
			t.BANKER_STATUS_CANCEL_APPLY = 7,
			t.lb_bet_total_amount_array = Array(),
			t.bet_total_amount_array = Array(),
			t.lb_my_bet_amount_array = Array(),
			t.my_bet_amount_array = Array(),
			t.btn_bet_array = Array(),
			t.bet_record = Array(),
			t.auto_bet = !1,
			t.repeat_bet = !1,
			t.can_bet = !1,
			t.can_repeat = !0,
			t.auto_bet_num = 0,
			t.current_round_first_bet = !0,
			t.win_amount = 0,
			t.host = GameConfig.SOCKET_HOST,
			t.port = GameConfig.SOCKET_PORT,
			t.diff = 30,
			t.bet_amount = 1e3,
			t.banker_queue_data = new Array,
			t.is_banker = !1,
			t.get_banker_ing = !1,
			t.gameSocketReady = !1,
			t.gameRoundReady = !1,
			t.timerCheckReadStatus = null,
			t.closeStatus = !1,
			t.showNotice = !0,
			t.userNoticeTimer = null,
			t.playNoticeSound = !0,
			t.winOdds = [],
			t.chat_data = new Array,
			t.betTotalAmount = 0,
			t.addEventListener(eui.UIEvent.COMPLETE, t.uiCompHandler, t),
			t.skinName = "resource/ui/main/GameGrabGuideUISkin.exml",
			t
		}
		return __extends(i, e),
		i.getInstance = function(t) {
			return this._instance || t && (this._instance = new i),
			this._instance
		}
		,
		i.prototype.uiCompHandler = function(t) {
			var e = this;
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			this.list_banker_queue.layout.gap = 10,
			this.setClickListener(),
			this.subInit(),
			eui.Watcher.watch(this.scroller_chat_list.viewport, ["contentHeight"], function() {
				e.chat_list.validateNow(),
				e.scroller_chat_list.viewport.contentHeight >= e.scroller_chat_list.height && (e.scroller_chat_list.viewport.scrollV = e.scroller_chat_list.viewport.contentHeight - e.scroller_chat_list.height + 5)
			}, this),
			this.chat_list.useVirtualLayout = !1
		}
		,
		i.prototype.addMessageToList = function(t) {
			null != t && (this.chat_data.push(t),
			this.chat_list.dataProvider = new eui.ArrayCollection(this.chat_data),
			this.chat_list.validateNow(),
			this.scroller_chat_list.viewport.contentHeight >= this.scroller_chat_list.height && (this.scroller_chat_list.viewport.scrollV = this.scroller_chat_list.viewport.contentHeight - this.scroller_chat_list.height + 5))
		}
		,
		i.prototype.destoryAll = function() {
			this.host = GameConfig.SOCKET_HOST,
			this.port = GameConfig.SOCKET_PORT,
			null != this.timerCheckReadStatus && void 0 != this.timerCheckReadStatus && clearInterval(this.timerCheckReadStatus),
			null != this.userNoticeTimer && void 0 != this.userNoticeTimer && clearInterval(this.userNoticeTimer),
			null != this.game_socket && void 0 != this.game_socket && (this.game_socket.disconnect(),
			this.game_socket = null),
			null != this._klineMasterBar.kline_socket && void 0 != this._klineMasterBar.kline_socket && (this._klineMasterBar.kline_socket.disconnect(),
			this._klineMasterBar.kline_socket = null),
			this.closeStatus = !0,
			clearInterval(this.timer),
			this.playNoticeSound = !1,
			this.current_banker = null,
			this.updateBanker(),
			this.cancelAutoBet(),
			this.initBetTotalAmount(null),
			this.initMyBetAmount(),
			this.get_banker_ing = !1,
			this.lb_queue_order_title.visible = !1,
			this.lb_queue_order.visible = !1
		}
		,
		i.prototype.subInit = function() {
			if (this.gold_balance = 1e7,
			this.updateBalance(this.gold_balance),
			this.capital = "BTCCNY",
			this.room_id = 6,
			this.game_model_type = 2,
			this.user_info = Utils.getStorageObj(Keys.FK_UserInfo),
			null == this.user_info || void 0 == this.user_info || "" == this.user_info)
				return this.destoryAll(),
				void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			if (this.user_id = this.user_info.uid,
			this.token = this.user_info.token,
			null == this.user_id || null == this.token)
				return this.destoryAll(),
				void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			for (var e = "", i = 0; i < this.user_info.name.length; i++) {
				var n = this.user_info.name.charAt(i);
				if ((e + n).replace(/[^x00-xFF]/g, "**").length > 12)
					break;
				e += n
			}
			this.lbUserName.text = e,
			this.img_vip.source = RES.getRes("icon_vip_" + this.user_info.vip_grade + "_png"),
			this.img_vip.x = this.lbUserName.x + this.lbUserName.width + 10,
			"" != this.user_info.avatar_url ? this.avatar_url = this.user_info.avatar_url : this.avatar_url = "",
			this.loadBankerImage("http://wx.qlogo.cn/mmopen/rJdcGSBib920Fib6icRdEx6aib3cLssVY94SEHjQpHuXRaPLswByfny5JoOicXb7qSPz4byiaW7HjCTHJ0JMGIIPbWG9RrwObzHOAT/0"),
			this.loadHeaderImage(),
			this.initSocket(),
			this.playNoticeSound = !0,
			this.showLoading(this),
			this._klineMasterBar = t.KlineMasterBarV2.getInstance(!0),
			this._klineMasterBar.user_id = this.user_id,
			this._klineMasterBar.token = this.token,
			this._klineMasterBar.x = 4,
			this._klineMasterBar.y = 0,
			this.kline_group.addChild(this._klineMasterBar),
			this.setChildIndex(this.kline_group, 99),
			this.setChildIndex(this.group_big_winner, 110),
			this.showUserNotice(),
			this.timerCheckReadStatus = setInterval(function(t) {
				t._klineMasterBar.kline_socket.getKlineSocketStatus() && t.gameRoundReady && t.gameSocketReady ? (GameLayerManager.gameLayer().mainLayer.$children.length > 1 && (GameLayerManager.gameLayer().mainLayer.removeChildAt(1),
				t.showWelcomeMsg()),
				t.closeLoading(t)) : t.showLoading(t)
			}, 1e3, this),
			this.userNoticeTimer = setInterval(function(t) {
				t.showUserNotice()
			}, 5500, this),
			this.getCapitalOddsList(),
			this.getLatestRoundDetail()
		}
		,
		i.prototype.showWelcomeMsg = function() {
			var t = "";
			"BTCCNY" == this.capital ? t = "比特币" : "LTCCNY" == this.capital ? t = "莱特币" : "EURUSD" == this.capital ? t = "欧元/美元" : "XAUUSD" == this.capital ? t = "黄金" : "GBPUSD" == this.capital && (t = "英镑/美元"),
			this.addMessageToList({
				message_type: "S",
				message: "欢迎来到 (" + t + ") 抢庄竞猜!"
			})
		}
		,
		i.prototype.showUserNotice = function() {
			var t = null;
			Main.noticeList.length > 1 ? t = Main.noticeList.splice(1, 1) : 1 == Main.noticeList.length && (t = Main.noticeList[0]),
			null != t && ("0" != t.user_id ? this.lb_notice.text = t[0].name + ": " + t[0].message : this.lb_notice.text = t.message,
			this.lb_notice.x = 719,
			this.setChildIndex(this.group_message_norice, 100),
			egret.Tween.get(this.lb_notice, {
				loop: !1
			}).to({
				x: -1 * this.lb_notice.width
			}, 5e3).call(function() {}, this))
		}
		,
		Object.defineProperty(i.prototype, "labelWinAmount", {
			get: function() {
				var t = Utils.StringToFloat(this.label_win_amount.text, 0);
				return t
			},
			set: function(t) {
				this.label_win_amount.text = Utils.StringToFloat(t.toString(), 0).toString()
			},
			enumerable: !0,
			configurable: !0
		}),
		Object.defineProperty(i.prototype, "labelMyBalance", {
			get: function() {
				var t = Utils.StringToFloat(this.label_my_balance.text, 0);
				return t
			},
			set: function(t) {
				this.label_my_balance.text = Utils.StringToFloat(t.toString(), 0).toString()
			},
			enumerable: !0,
			configurable: !0
		}),
		i.prototype.setClickListener = function() {
			var e = this;
			this.img_return.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				t.SceneTrade.getInstance().stopGrabSound(),
				t.SceneTrade.getInstance().playBgSound(),
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().return_sound_ready && t.SceneTrade.getInstance().return_sound.play(0, 1),
				e.destoryAll(),
				t.FooterBar.getInstance().goTo(t.FooterBar.getInstance().btns[0], !1)
			}, this),
			this.btn_change_amount.addEventListener(egret.TouchEvent.TOUCH_BEGIN, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
				1e3 == e.bet_amount ? (e.bet_amount = 1e4,
				e.label_bet_amount.text = "单注: 1万") : 1e4 == e.bet_amount ? (e.bet_amount = 1e5,
				e.label_bet_amount.text = "单注: 10万") : 1e5 == e.bet_amount ? (e.bet_amount = 1e6,
				e.label_bet_amount.text = "单注: 100万") : 1e6 == e.bet_amount && (e.bet_amount = 1e3,
				e.label_bet_amount.text = "单注: 1千")
			}, this),
			this.btn_repeat_bet.addEventListener(egret.TouchEvent.TOUCH_BEGIN, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
				e.bet_record.length > 0 && e.can_repeat && (e.repeat_bet = !0,
				e.repeatBet(e),
				e.can_repeat = !1)
			}, this),
			this.btn_auto_bet.addEventListener(egret.TouchEvent.TOUCH_BEGIN, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
				e.auto_bet ? e.cancelAutoBet() : e.bet_record.length > 0 && e.autoBet()
			}, this),
			this.banker_round_remain.addEventListener(egret.TouchEvent.TOUCH_END, function() {
				e.group_banker_queue.visible ? e.group_banker_queue.visible = !1 : (e.group_banker_queue.visible = !0,
				e.group_all.visible = !0)
			}, this),
			this.group_all.addEventListener(egret.TouchEvent.TOUCH_END, function() {
				e.group_banker_queue.visible = !1,
				e.group_all.visible = !1
			}, this)
		}
		,
		i.prototype.addActivate = function() {
			this.stage.removeEventListener(egret.Event.ACTIVATE, this.onResume, this),
			this.stage.addEventListener(egret.Event.ACTIVATE, this.onResume, this)
		}
		,
		i.prototype.onResume = function() {
			this.cancelAutoBet(),
			this.getLatestRoundDetail()
		}
		,
		i.prototype.getSettleResult = function(t) {
			var e = t.period
			  , i = t.point_diff;
			null != e && this.addMessageToList({
				num: e,
				message_type: "S",
				message_type_s: "point_diff",
				point_diff: i
			});
			for (var n = 0; n < this.capital_odds.length; n++) {
				var a = this.capital_odds[n].interval_start
				  , s = this.capital_odds[n].interval_end;
				0 >= s && (0 > a || null == a) && null != s ? null == a ? s > i && this.showSettleResult(this.capital_odds[n]) : i >= a && s > i && this.showSettleResult(this.capital_odds[n]) : a >= 0 && (s > 0 || null == s) && null != a ? null == s ? i > a && this.showSettleResult(this.capital_odds[n]) : i > a && s >= i && this.showSettleResult(this.capital_odds[n]) : 0 == a && 0 == s && null != a && null != s && 0 == i && this.showSettleResult(this.capital_odds[n])
			}
			this.settle()
		}
		,
		i.prototype.showSettleResult = function(e) {
			if (console.log("capitalOdds=====>", e),
			this.winOdds.push(e),
			null != e) {
				this.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().settle_result_sound_ready && t.SceneTrade.getInstance().settle_result_sound.play(0, 1),
				this.btn_bet_array[e.id].enabled = !0;
				var i = "";
				if (0 == e.order || 1 == e.order || 2 == e.order) {
					if (1 != e.order)
						return;
					i = "btn_equal_png";
					var n = "icon-pings_png"
					  , a = 2
					  , s = new eui.Group;
					s.width = 120 * a,
					s.height = 84 * a,
					s.x = this.width / 2 - 120 * a / 2,
					s.y = this.height / 2 - 173;
					var o = new eui.Image;
					o.width = 500,
					o.height = 490,
					o.verticalCenter = .5,
					o.horizontalCenter = .5,
					o.source = RES.getRes("bg_sunshine_png"),
					o.anchorOffsetX = 250,
					o.anchorOffsetY = 245,
					s.addChild(o);
					var r = new eui.Image;
					r.width = 120 * a,
					r.height = 84 * a,
					r.x = 0,
					r.y = 0,
					r.source = RES.getRes(i),
					s.addChild(r);
					var l = new eui.Label;
					l.fontFamily = "lgzbFont",
					l.width = 85 * a,
					l.height = 27.33 * a,
					l.x = 15 * a,
					l.y = (s.height - l.height) / a + 10,
					l.text = "x" + parseFloat(e.odds),
					l.textColor = 16113323,
					l.bold = !0,
					l.size = 30 * a,
					l.stroke = 1,
					l.strokeColor = 789259,
					l.verticalAlign = "middle",
					l.textAlign = "center",
					s.addChild(l);
					var h = new eui.Image;
					h.x = 0,
					h.y = 0,
					h.width = 57 * a,
					h.height = 49 * a,
					h.source = RES.getRes(n),
					s.addChild(h),
					this.addChild(s),
					egret.Tween.get(o).to({
						rotation: 150
					}, 1700, egret.Ease.cubicOut).call(function() {
						this.removeChild(s)
					}, this)
				} else {
					i = e.order < 7 ? "btn_odds_rise_png" : "btn_odds_fall_png";
					var a = 2
					  , s = new eui.Group;
					s.width = 83 * a,
					s.height = 85 * a,
					s.x = this.width / 2 - 85 * a / 2,
					s.y = this.height / 2 - 173;
					var o = new eui.Image;
					o.width = 500,
					o.height = 490,
					o.verticalCenter = .5,
					o.horizontalCenter = .5,
					o.source = RES.getRes("bg_sunshine_png"),
					o.anchorOffsetX = 250,
					o.anchorOffsetY = 245,
					s.addChild(o);
					var r = new eui.Image;
					r.width = 83 * a,
					r.height = 85 * a,
					r.x = 0,
					r.y = 0,
					r.source = RES.getRes(i),
					s.addChild(r);
					var d = new eui.Label;
					d.fontFamily = "lgzbFont",
					d.width = 77 * a,
					d.height = 27.33 * a,
					d.x = 3 * a,
					d.y = 3 * a,
					d.text = e.display,
					d.textColor = 16113323,
					d.bold = !0,
					"BTCCNY" == this.capital ? d.size = 25 * a : d.size = 18 * a,
					d.stroke = 1,
					d.verticalAlign = "middle",
					d.textAlign = "center",
					s.addChild(d);
					var l = new eui.Label;
					l.fontFamily = "lgzbFont",
					l.width = 74 * a,
					l.height = 27.33 * a,
					l.x = 5 * a,
					l.y = (s.height - l.height) / a + 40,
					l.text = "x" + parseFloat(e.odds),
					l.textColor = 16777215,
					l.bold = !0,
					l.size = 27 * a,
					l.stroke = 1,
					l.verticalAlign = "middle",
					l.textAlign = "center",
					s.addChild(l),
					this.addChild(s),
					egret.Tween.get(o).to({
						rotation: 150
					}, 1700, egret.Ease.cubicOut).call(function() {
						this.removeChild(s)
					}, this)
				}
			}
		}
		,
		i.prototype.showLoading = function(t) {
			if (null == t.loading_group) {
				t.loading_group = new eui.Group,
				t.loading_group.width = 719,
				t.loading_group.height = 1199,
				t.loading_group.verticalCenter = .5,
				t.loading_group.horizontalCenter = .5;
				var e = new egret.Sprite;
				e.graphics.clear(),
				e.graphics.beginFill(0, .6),
				e.graphics.drawRect(0, 0, GameConfig.curWidth(), GameConfig.curHeight()),
				e.graphics.endFill(),
				e.width = GameConfig.curWidth(),
				e.height = GameConfig.curHeight(),
				e.touchEnabled = !0,
				egret.Tween.get(e).to({
					alpha: 1
				}, 150),
				e.visible = !0,
				t.loading_group.addChild(e),
				null == t.loading_image && (t.loading_image = new eui.Image),
				t.loading_image.verticalCenter = .5,
				t.loading_image.horizontalCenter = .5,
				t.loading_image.source = RES.getRes("loading_run_png"),
				t.loading_image.anchorOffsetX = .5 * t.loading_image.width,
				t.loading_image.anchorOffsetY = .5 * t.loading_image.height,
				t.loading_group.addChild(t.loading_image)
			}
			GameLayerManager.gameLayer().effectLayer.contains(t.loading_group) || (GameLayerManager.gameLayer().effectLayer.addChild(t.loading_group),
			GameLayerManager.gameLayer().effectLayer.addEventListener(egret.Event.ENTER_FRAME, t.runLoading, t))
		}
		,
		i.prototype.runLoading = function(t) {
			this.loading_image.rotation += 3
		}
		,
		i.prototype.closeLoading = function(t) {
			GameLayerManager.gameLayer().effectLayer.contains(t.loading_group) && GameLayerManager.gameLayer().effectLayer.removeChild(t.loading_group),
			GameLayerManager.gameLayer().effectLayer.removeEventListener(egret.Event.ENTER_FRAME, t.runLoading, t)
		}
		,
		i.prototype.showStartBetNotice = function(e) {
			this.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().start_bet_sound_ready && t.SceneTrade.getInstance().start_bet_sound.play(0, 1);
			var i = new eui.Group
			  , n = new eui.Image;
			n.source = RES.getRes("icon_start_bet_png"),
			n.horizontalCenter = .5,
			n.verticalCenter = .5,
			n.height = 0,
			i.addChild(n),
			i.horizontalCenter = .5,
			i.y = 267,
			i.height = 642,
			i.width = 153,
			e.addChild(i),
			egret.Tween.get(n).to({
				height: 153
			}, 150),
			setTimeout(function(t) {
				egret.Tween.get(n).to({
					height: 0
				}, 150).call(function() {
					t.removeChild(i)
				})
			}, 1500, e)
		}
		,
		i.prototype.showTimeDownNotice = function(e) {
			var i = new eui.Group
			  , n = new eui.Image;
			n.source = RES.getRes("timer_down_num_3_png"),
			n.horizontalCenter = .5,
			n.verticalCenter = .5,
			n.height = 0,
			n.width = 330,
			i.addChild(n),
			i.horizontalCenter = .5,
			i.y = 180,
			i.height = 330,
			i.width = 330,
			e.addChild(i),
			e.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().count_down_sound_ready && t.SceneTrade.getInstance().count_down_sound.play(0, 1),
			egret.Tween.get(n).to({
				height: 330
			}, 150),
			setTimeout(function(e) {
				egret.Tween.get(n).to({
					height: 0
				}, 150).call(function() {
					e.removeChild(i),
					n.source = RES.getRes("timer_down_num_2_png"),
					i.addChild(n),
					e.addChild(i),
					e.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().count_down_sound_ready && t.SceneTrade.getInstance().count_down_sound.play(0, 1),
					egret.Tween.get(n).to({
						height: 330
					}, 150),
					setTimeout(function(e) {
						egret.Tween.get(n).to({
							height: 0
						}, 150).call(function() {
							e.removeChild(i),
							n.source = RES.getRes("timer_down_num_1_png"),
							i.addChild(n),
							e.addChild(i),
							e.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().count_down_sound_ready && t.SceneTrade.getInstance().count_down_sound.play(0, 1),
							egret.Tween.get(n).to({
								height: 330
							}, 150),
							setTimeout(function(t) {
								egret.Tween.get(n).to({
									height: 0
								}, 150).call(function() {
									t.removeChild(i)
								})
							}, 850, e)
						})
					}, 850, e)
				})
			}, 850, e)
		}
		,
		i.prototype.showStopBetNotice = function(e) {
			this.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().stop_bet_sound_ready && (t.SceneTrade.getInstance().stop_bet_clock.play(0, 1),
			t.SceneTrade.getInstance().stop_bet_sound.play(0, 1));
			var i = new eui.Group
			  , n = new eui.Image;
			n.source = RES.getRes("icon_stop_bet_png"),
			n.horizontalCenter = .5,
			n.verticalCenter = .5,
			n.height = 0,
			i.addChild(n),
			i.horizontalCenter = .5,
			i.y = 267,
			i.height = 642,
			i.width = 153,
			e.addChild(i),
			egret.Tween.get(n).to({
				height: 153
			}, 150),
			setTimeout(function(t) {
				egret.Tween.get(n).to({
					height: 0
				}, 150).call(function() {
					t.removeChild(i)
				})
			}, 1500, e)
		}
		,
		i.prototype.showBurstBankerNotice = function() {
			this.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().burst_banker_sound_ready && t.SceneTrade.getInstance().burst_banker_sound.play(0, 1);
			var e = this
			  , i = new eui.Image;
			i.source = RES.getRes("burst_png"),
			i.alpha = 0,
			i.scaleX = .5,
			i.scaleY = .5,
			i.width = 600,
			i.height = 624,
			i.x = (this.width - i.width) / 2,
			i.y = (this.height - i.height) / 2,
			i.horizontalCenter = "0",
			i.verticalCenter = "0",
			e.addChild(i),
			egret.Tween.get(i).to({
				alpha: 1,
				scaleX: 1,
				scaleY: 1
			}, 700, egret.Ease.backOut),
			setTimeout(function(t) {
				t.removeChild(i)
			}, 700, e)
		}
		,
		i.prototype.autoBet = function() {
			this.auto_bet = !0,
			this.btn_auto_bet.image_auto_bet.texture = RES.getRes("btn_cancel_auto_bet_png"),
			this.group_auto_bet_notice.visible = !0,
			this.bet_record.length > 0 && (this.disabledBetBtn(),
			this.btn_repeat_bet.enabled = !1)
		}
		,
		i.prototype.cancelAutoBet = function() {
			this.auto_bet = !1,
			this.btn_auto_bet.image_auto_bet.texture = RES.getRes("btn_auto_bet_png"),
			this.group_auto_bet_notice.visible = !1,
			this.auto_bet_num = 0,
			this.label_auto_bet.text = "跟注 :0轮",
			this.btn_repeat_bet.enabled = !0,
			this.can_bet && this.enableBetBtn()
		}
		,
		i.prototype.updateAutoBetNum = function() {
			this.auto_bet_num = this.auto_bet_num + 1,
			this.label_auto_bet.text = "跟注 :" + this.auto_bet_num + "轮"
		}
		,
		i.prototype.initSocket = function() {
			var t = this;
			this.queryEntry(this.user_id, function(e, i) {
				t.host = e,
				t.port = i,
				t.firstInit()
			})
		}
		,
		i.prototype.queryEntry = function(t, e) {
			var i = this
			  , n = new pomeloClient.Pomelo;
			n.on(CONST.CommonCommand.io_error, function() {
				setTimeout(function() {
					console.log("game socket io_error"),
					i.initSocket()
				}, 1e3)
			}),
			n.init({
				host: GameConfig.SOCKET_HOST,
				port: GameConfig.SOCKET_PORT
			}, function() {
				var i = {
					uid: t,
					type: "game"
				};
				n.request(CONST.CommonCommand.gate, i),
				n.on(CONST.CommonCommand.gate, function(t) {
					n.disconnect(),
					500 != t.code && e(t.host, t.port)
				})
			})
		}
		,
		i.prototype.firstInit = function() {
			var t = this
			  , e = null;
			null == this.game_socket && (this.game_socket = new pomeloClient.Pomelo),
			this.game_socket.init({
				host: this.host,
				port: this.port
			}, function() {
				t.game_socket.request(CONST.GameCommand.init, {
					room_id: t.room_id,
					user_id: t.user_id,
					token: t.user_info.access_token
				})
			}),
			this.game_socket.on(CONST.GameCommand.init, function(e) {
				200 == e.code ? t.gameSocketReady = !0 : (t.closeLoading(t),
				t.destoryAll(),
				GameLayerManager.gameLayer().mainLayer.$children.length > 1 && GameLayerManager.gameLayer().mainLayer.removeChildAt(0),
				Toast.launch("进入房间失败,请重试", -100))
			}),
			this.game_socket.on(CONST.CommonCommand.close, function() {
				t.gameSocketReady = !1,
				console.log("socket closed"),
				null != e && clearInterval(e),
				e = setInterval(function(t) {
					!t.gameSocketReady && t.game_socket ? t.game_socket.reconnect(t.host, t.port) : clearInterval(e)
				}, 1e3, t)
			}),
			this.game_socket.on(CONST.CommonCommand.heartbeat_timeout, function() {
				t.gameSocketReady = !1,
				console.log("heartbeat_timeout"),
				null != e && clearInterval(e),
				e = setInterval(function(t) {
					!t.gameSocketReady && t.game_socket ? t.game_socket.reconnect(t.host, t.port) : clearInterval(e)
				}, 1e3, t)
			}),
			this.game_socket.on(CONST.CommonCommand.io_error, function() {
				t.gameSocketReady = !1,
				console.error("socket error"),
				null != e && clearInterval(e),
				e = setInterval(function(t) {
					!t.gameSocketReady && t.game_socket ? t.game_socket.reconnect(t.host, t.port) : clearInterval(e)
				}, 1e3, t)
			}),
			this.game_socket.on(CONST.GameCommand.new_round, function(e) {
				this.betTotalAmount = 0,
				e = JSON.parse(e),
				t.initBetTotalAmount(null),
				t.initMyBetAmount(),
				t.current_round_first_bet = !0,
				t.can_repeat = !0,
				t.repeat_bet = !1,
				null != e && (t.round_id = e.id,
				t.server_time = e.server_time,
				t.start_time = e.start_time,
				t.end_time = e.end_time,
				t.updateTimer(t, null, null),
				t.showStartBetNotice(t),
				t.auto_bet && (t.current_banker.user_id == this.user_id ? t.cancelAutoBet() : (t.updateAutoBetNum(),
				t.autoBet(),
				t.repeatBet(t))))
			})
		}
		,
		i.prototype.showWinAmount = function(e) {
			e.win_amount > 0 && (e.label_win_amount.text = parseFloat(parseFloat(e.win_amount).toFixed(0)).toString(),
			setTimeout(function() {
				e.label_win_amount.visible = !1
			}, 500, e),
			setTimeout(function() {
				e.label_win_amount.visible = !0
			}, 1e3, e),
			setTimeout(function() {
				e.label_win_amount.visible = !1
			}, 1500, e),
			setTimeout(function() {
				e.label_win_amount.visible = !0
			}, 2e3, e),
			setTimeout(function() {
				e.label_win_amount.visible = !1
			}, 2500, e),
			setTimeout(function() {
				e.label_win_amount.visible = !0
			}, 3e3, e),
			setTimeout(function() {
				e.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().gold_increase_sound_ready && t.SceneTrade.getInstance().gold_increase_sound.play(0, 1),
				egret.Tween.get(e).to({
					labelWinAmount: 0
				}, 1500)
			}, 3500, e),
			e.win_amount = 0),
			setTimeout(function() {
				egret.Tween.get(e).to({
					labelMyBalance: parseFloat(parseFloat(e.gold_balance).toFixed(0)).toString()
				}, 1500)
			}, 3500, e)
		}
		,
		i.prototype.showBigWinner = function(t, e, i) {
			t.lb_big_winner_name.visible = !0,
			t.lb_big_winner_banker_name.visible = !0,
			t.lb_big_winner_amount.visible = !0,
			t.lb_big_winner_banker_amount.visible = !0,
			t.img_big_winner_banker_res.visible = !0,
			t.img_big_winner_res.visible = !0,
			t.img_big_winner_res.source = RES.getRes("icon_win_png"),
			null != e ? (t.lb_big_winner_name.text = e.name,
			null != e.profit && "" != e.profit ? t.lb_big_winner_amount.text = Utils.moneyFormat(e.profit, 2) : t.lb_big_winner_amount.text = "") : (t.lb_big_winner_amount.text = "",
			t.lb_big_winner_name.text = ""),
			null != t.current_banker && (t.lb_big_winner_banker_name.text = t.current_banker.name),
			i >= 0 ? (t.lb_big_winner_banker_amount.text = Utils.moneyFormat(Math.abs(i), 2),
			t.img_big_winner_banker_res.source = RES.getRes("icon_win_png")) : (t.lb_big_winner_banker_amount.text = Utils.moneyFormat(Math.abs(i), 2),
			t.img_big_winner_banker_res.source = RES.getRes("icon_lose_png")),
			t.img_bg_big_winner.height = 0,
			t.group_big_winner.visible = !0,
			egret.Tween.get(t.img_bg_big_winner).to({
				height: 280
			}, 150),
			setTimeout(function() {
				t.lb_big_winner_name.visible = !1,
				t.lb_big_winner_banker_name.visible = !1,
				t.lb_big_winner_amount.visible = !1,
				t.lb_big_winner_banker_amount.visible = !1,
				t.img_big_winner_banker_res.visible = !1,
				t.img_big_winner_res.visible = !1,
				egret.Tween.get(t.img_bg_big_winner).to({
					height: 0
				}, 150).call(function() {
					t.group_big_winner.visible = !1
				})
			}, 1500, t)
		}
		,
		i.prototype.initKline = function() {
			this._klineMasterBar.setOptions({
				Capital: this.capital,
				Diff: 30,
				odds: this.capital_odds
			}),
			this._klineMasterBar.initSocket()
		}
		,
		i.prototype.updateKline = function() {
			console.log("GameGrabUI ------>>>>>> updateKline");
			var t = this._klineMasterBar.getOptions();
			this._klineMasterBar.setOptions({
				Capital: this.capital,
				Diff: t.Diff
			}),
			this._klineMasterBar.initKlineSocket(this.capital, t.Diff)
		}
		,
		i.prototype.initIntervalOdds = function() {
			if (null != this.capital_odds) {
				this.lb_bet_total_amount_array[this.capital_odds[0].id] = this.label_bet_total_amount_0,
				this.lb_bet_total_amount_array[this.capital_odds[1].id] = this.label_bet_total_amount_1,
				this.lb_bet_total_amount_array[this.capital_odds[2].id] = this.label_bet_total_amount_2,
				this.lb_bet_total_amount_array[this.capital_odds[3].id] = this.label_bet_total_amount_3,
				this.lb_bet_total_amount_array[this.capital_odds[4].id] = this.label_bet_total_amount_4,
				this.lb_bet_total_amount_array[this.capital_odds[5].id] = this.label_bet_total_amount_5,
				this.lb_bet_total_amount_array[this.capital_odds[6].id] = this.label_bet_total_amount_6,
				this.lb_bet_total_amount_array[this.capital_odds[7].id] = this.label_bet_total_amount_7,
				this.lb_bet_total_amount_array[this.capital_odds[8].id] = this.label_bet_total_amount_8,
				this.lb_bet_total_amount_array[this.capital_odds[9].id] = this.label_bet_total_amount_9,
				this.lb_bet_total_amount_array[this.capital_odds[10].id] = this.label_bet_total_amount_10,
				this.bet_total_amount_array[this.capital_odds[0].id] = 0,
				this.bet_total_amount_array[this.capital_odds[1].id] = 0,
				this.bet_total_amount_array[this.capital_odds[2].id] = 0,
				this.bet_total_amount_array[this.capital_odds[3].id] = 0,
				this.bet_total_amount_array[this.capital_odds[4].id] = 0,
				this.bet_total_amount_array[this.capital_odds[5].id] = 0,
				this.bet_total_amount_array[this.capital_odds[6].id] = 0,
				this.bet_total_amount_array[this.capital_odds[7].id] = 0,
				this.bet_total_amount_array[this.capital_odds[8].id] = 0,
				this.bet_total_amount_array[this.capital_odds[9].id] = 0,
				this.bet_total_amount_array[this.capital_odds[10].id] = 0,
				this.lb_my_bet_amount_array[this.capital_odds[0].id] = this.label_my_bet_0,
				this.lb_my_bet_amount_array[this.capital_odds[1].id] = this.label_my_bet_1,
				this.lb_my_bet_amount_array[this.capital_odds[2].id] = this.label_my_bet_2,
				this.lb_my_bet_amount_array[this.capital_odds[3].id] = this.label_my_bet_3,
				this.lb_my_bet_amount_array[this.capital_odds[4].id] = this.label_my_bet_4,
				this.lb_my_bet_amount_array[this.capital_odds[5].id] = this.label_my_bet_5,
				this.lb_my_bet_amount_array[this.capital_odds[6].id] = this.label_my_bet_6,
				this.lb_my_bet_amount_array[this.capital_odds[7].id] = this.label_my_bet_7,
				this.lb_my_bet_amount_array[this.capital_odds[8].id] = this.label_my_bet_8,
				this.lb_my_bet_amount_array[this.capital_odds[9].id] = this.label_my_bet_9,
				this.lb_my_bet_amount_array[this.capital_odds[10].id] = this.label_my_bet_10,
				this.my_bet_amount_array[this.capital_odds[0].id] = 0,
				this.my_bet_amount_array[this.capital_odds[1].id] = 0,
				this.my_bet_amount_array[this.capital_odds[2].id] = 0,
				this.my_bet_amount_array[this.capital_odds[3].id] = 0,
				this.my_bet_amount_array[this.capital_odds[4].id] = 0,
				this.my_bet_amount_array[this.capital_odds[5].id] = 0,
				this.my_bet_amount_array[this.capital_odds[6].id] = 0,
				this.my_bet_amount_array[this.capital_odds[7].id] = 0,
				this.my_bet_amount_array[this.capital_odds[8].id] = 0,
				this.my_bet_amount_array[this.capital_odds[9].id] = 0,
				this.my_bet_amount_array[this.capital_odds[10].id] = 0,
				this.btn_odds_0.name = this.capital_odds[0].id,
				this.btn_odds_1.name = this.capital_odds[1].id,
				this.btn_odds_2.name = this.capital_odds[2].id,
				this.btn_odds_3.name = this.capital_odds[3].id,
				this.btn_odds_4.name = this.capital_odds[4].id,
				this.btn_odds_5.name = this.capital_odds[5].id,
				this.btn_odds_6.name = this.capital_odds[6].id,
				this.btn_odds_7.name = this.capital_odds[7].id,
				this.btn_odds_8.name = this.capital_odds[8].id,
				this.btn_odds_9.name = this.capital_odds[9].id,
				this.btn_odds_10.name = this.capital_odds[10].id,
				this.btn_bet_array[this.capital_odds[0].id] = this.btn_odds_0,
				this.btn_bet_array[this.capital_odds[1].id] = this.btn_odds_1,
				this.btn_bet_array[this.capital_odds[2].id] = this.btn_odds_2,
				this.btn_bet_array[this.capital_odds[3].id] = this.btn_odds_3,
				this.btn_bet_array[this.capital_odds[4].id] = this.btn_odds_4,
				this.btn_bet_array[this.capital_odds[5].id] = this.btn_odds_5,
				this.btn_bet_array[this.capital_odds[6].id] = this.btn_odds_6,
				this.btn_bet_array[this.capital_odds[7].id] = this.btn_odds_7,
				this.btn_bet_array[this.capital_odds[8].id] = this.btn_odds_8,
				this.btn_bet_array[this.capital_odds[9].id] = this.btn_odds_9,
				this.btn_bet_array[this.capital_odds[10].id] = this.btn_odds_10;
				for (var t in this.btn_bet_array)
					this.btn_bet_array[t].addEventListener(egret.TouchEvent.TOUCH_TAP, this.bet, this);
				this.label_bet_total_amount_0.name = this.capital_odds[0].id,
				this.label_bet_total_amount_1.name = this.capital_odds[1].id,
				this.label_bet_total_amount_2.name = this.capital_odds[2].id,
				this.label_bet_total_amount_3.name = this.capital_odds[3].id,
				this.label_bet_total_amount_4.name = this.capital_odds[4].id,
				this.label_bet_total_amount_5.name = this.capital_odds[5].id,
				this.label_bet_total_amount_6.name = this.capital_odds[6].id,
				this.label_bet_total_amount_7.name = this.capital_odds[7].id,
				this.label_bet_total_amount_8.name = this.capital_odds[8].id,
				this.label_bet_total_amount_9.name = this.capital_odds[9].id,
				this.label_bet_total_amount_10.name = this.capital_odds[10].id,
				this.label_my_bet_0.name = this.capital_odds[0].id,
				this.label_my_bet_1.name = this.capital_odds[1].id,
				this.label_my_bet_2.name = this.capital_odds[2].id,
				this.label_my_bet_3.name = this.capital_odds[3].id,
				this.label_my_bet_4.name = this.capital_odds[4].id,
				this.label_my_bet_5.name = this.capital_odds[5].id,
				this.label_my_bet_6.name = this.capital_odds[6].id,
				this.label_my_bet_7.name = this.capital_odds[7].id,
				this.label_my_bet_8.name = this.capital_odds[8].id,
				this.label_my_bet_9.name = this.capital_odds[9].id,
				this.label_my_bet_10.name = this.capital_odds[10].id,
				this.label_odds_0.text = "x" + parseFloat(this.capital_odds[0].odds),
				this.label_odds_1.text = "x" + parseFloat(this.capital_odds[1].odds),
				this.label_odds_2.text = "x" + parseFloat(this.capital_odds[2].odds),
				this.label_odds_3.text = "x" + parseFloat(this.capital_odds[3].odds),
				this.label_odds_4.text = "x" + parseFloat(this.capital_odds[4].odds),
				this.label_odds_5.text = "x" + parseFloat(this.capital_odds[5].odds),
				this.label_odds_6.text = "x" + parseFloat(this.capital_odds[6].odds),
				this.label_odds_7.text = "x" + parseFloat(this.capital_odds[7].odds),
				this.label_odds_8.text = "x" + parseFloat(this.capital_odds[8].odds),
				this.label_odds_9.text = "x" + parseFloat(this.capital_odds[9].odds),
				this.label_odds_10.text = "x" + parseFloat(this.capital_odds[10].odds),
				this.label_interval_3.text = this.capital_odds[3].display,
				this.label_interval_4.text = this.capital_odds[4].display,
				this.label_interval_5.text = this.capital_odds[5].display,
				this.label_interval_6.text = this.capital_odds[6].display,
				this.label_interval_7.text = this.capital_odds[7].display,
				this.label_interval_8.text = this.capital_odds[8].display,
				this.label_interval_9.text = this.capital_odds[9].display,
				this.label_interval_10.text = this.capital_odds[10].display,
				"XAUUSD" == this.capital ? (this.label_interval_3.size = 18,
				this.label_interval_4.size = 18,
				this.label_interval_5.size = 18,
				this.label_interval_6.size = 18,
				this.label_interval_7.size = 18,
				this.label_interval_8.size = 18,
				this.label_interval_9.size = 18,
				this.label_interval_10.size = 18) : "EURUSD" == this.capital || "GBPUSD" == this.capital ? (this.label_interval_3.size = 18,
				this.label_interval_4.size = 18,
				this.label_interval_5.size = 18,
				this.label_interval_6.size = 18,
				this.label_interval_7.size = 18,
				this.label_interval_8.size = 18,
				this.label_interval_9.size = 18,
				this.label_interval_10.size = 18) : "BTCCNY" == this.capital && (this.label_interval_3.size = 25,
				this.label_interval_4.size = 25,
				this.label_interval_5.size = 25,
				this.label_interval_6.size = 25,
				this.label_interval_7.size = 25,
				this.label_interval_8.size = 25,
				this.label_interval_9.size = 25,
				this.label_interval_10.size = 25)
			}
		}
		,
		i.prototype.startBet = function(t) {
			t.icon_game_title.source = RES.getRes("icon_begin_bet_png"),
			t.can_bet = !0,
			t.auto_bet || t.enableBetBtn()
		}
		,
		i.prototype.stopBet = function(t) {
			t.icon_game_title.source = RES.getRes("icon_wating_settle_png"),
			t.can_bet = !1,
			t.disabledBetBtn()
		}
		,
		i.prototype.disabledBetBtn = function() {
			for (var t in this.btn_bet_array)
				this.btn_bet_array[t].enabled = !1
		}
		,
		i.prototype.enableBetBtn = function() {
			for (var t in this.btn_bet_array)
				this.btn_bet_array[t].enabled = !0
		}
		,
		i.prototype.initBetTotalAmount = function(t) {
			for (var e in this.lb_bet_total_amount_array)
				this.lb_bet_total_amount_array[e].text = "0";
			for (var i in this.bet_total_amount_array)
				this.bet_total_amount_array[i] = 0;
			if (null != t)
				for (var n = 0; n < t.length; n++) {
					var a = t[n];
					this.bet_total_amount_array[a.capital_odds_id] = parseFloat(this.bet_total_amount_array[a.capital_odds_id]) + parseFloat(a.total_amount),
					this.lb_bet_total_amount_array[a.capital_odds_id].text = Utils.moneyFormat(this.bet_total_amount_array[a.capital_odds_id], 2)
				}
		}
		,
		i.prototype.initMyBetAmount = function() {
			for (var t in this.lb_my_bet_amount_array)
				this.lb_my_bet_amount_array[t].text = "0";
			for (var e in this.my_bet_amount_array)
				this.my_bet_amount_array[e] = 0
		}
		,
		i.prototype.updateMyBetAmount = function(t, e) {
			this.my_bet_amount_array[t] = parseFloat(this.my_bet_amount_array[t]) + parseFloat(e),
			this.lb_my_bet_amount_array[t].text = Utils.moneyFormat(this.my_bet_amount_array[t], 2),
			!this.current_round_first_bet || this.auto_bet || this.repeat_bet || (this.bet_record = null,
			this.bet_record = Array(),
			this.current_round_first_bet = !1),
			this.bet_record[t] = this.my_bet_amount_array[t]
		}
		,
		i.prototype.updateBetTotalAmount = function(t, e) {
			this.bet_total_amount_array[t] = parseFloat(this.bet_total_amount_array[t]) + parseFloat(e),
			null != this.lb_bet_total_amount_array[t] && (this.lb_bet_total_amount_array[t].text = Utils.moneyFormat(this.bet_total_amount_array[t], 2))
		}
		,
		i.prototype.updateBanker = function() {}
		,
		i.prototype.loadHeaderImage = function() {
			var t = new egret.ImageLoader;
			t.addEventListener(egret.Event.COMPLETE, this.headerImageLoadCompleteHandler, this),
			(null == this.avatar_url || void 0 == this.avatar_url || "" == this.avatar_url) && (this.avatar_url = CONST.DEFAULT_PHOTO),
			t.load(this.avatar_url)
		}
		,
		i.prototype.headerImageLoadCompleteHandler = function(t) {
			var e = t.currentTarget
			  , i = new egret.Bitmap(e.data);
			this.addChild(i),
			i.fillMode = egret.BitmapFillMode.SCALE,
			i.x = 10,
			i.y = 15,
			i.width = 80,
			i.height = 80;
			var n = new egret.Shape;
			n.graphics.beginFill(255),
			n.graphics.drawCircle(40, 40, 40),
			n.graphics.endFill(),
			n.x = 10,
			n.y = 15,
			this.addChild(n),
			i.mask = n;
			var a = new eui.Image;
			a.source = RES.getRes("userphoto_png"),
			a.width = 95,
			a.height = 95,
			a.x = 2,
			a.y = 11,
			this.addChild(a)
		}
		,
		i.prototype.loadBankerImage = function(t) {
			var e = new egret.ImageLoader;
			e.addEventListener(egret.Event.COMPLETE, this.bankerImageLoadCompleteHandler, this),
			e.load(t)
		}
		,
		i.prototype.bankerImageLoadCompleteHandler = function(t) {
			var e = t.currentTarget;
			this.banker_avatar.bitmapData = e.data
		}
		,
		i.prototype.getLatestRoundDetail = function() {
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "game_room_id",
				value: this.room_id
			})
			this.gameRoundReady = !1,
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "round/getLatestRoundDetail", t, this.onGetLatestRoundDetailComplete, this.onGetLatestRoundDetailIOError, this.onGetLatestRoundDetailProgress, this)
		}
		,
		i.prototype.onGetLatestRoundDetailComplete = function(e) {
			this.gameRoundReady = !0;
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_ROUND_FOUND) {
				n = n.results;
				var a = n.round;
				n.banker_trade_detail,
				n.my_trade;
				null != a && (this.round_id = a.id,
				this.start_time = a.start_time,
				this.end_time = a.end_time,
				this.server_time = n.server_time,
				this.updateTimer(this, null, null)),
				this.initMyBetAmount()
			} else {
				if (403 == n.type)
					return this.destoryAll(),
					void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				n.message
			}
		}
		,
		i.prototype.onGetLatestRoundDetailIOError = function(t) {
			this.gameRoundReady = !0
		}
		,
		i.prototype.onGetLatestRoundDetailProgress = function(t) {}
		,
		i.prototype.getCapitalOddsList = function() {
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "capital_key",
				value: this.capital
			})
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "trade/getCapitalOdds", t, this.onGetCapitalOddsListComplete, this.onGetCapitalOddsListIOError, this.onGetCapitalOddsListProgress, this)
		}
		,
		i.prototype.onGetCapitalOddsListComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_CAPITAL_ODDS_FOUND)
				this.capital_odds = n.results,
				this.initIntervalOdds(),
				this.initKline();
			else {
				if (403 == n.type)
					return this.destoryAll(),
					void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				var a = n.message;
				Toast.launch(a, -100)
			}
		}
		,
		i.prototype.onGetCapitalOddsListIOError = function(t) {}
		,
		i.prototype.onGetCapitalOddsListProgress = function(t) {}
		,
		i.prototype.checkTradeData = function(t) {
			return this.can_bet ? this.gold_balance < this.bet_amount ? (Toast.launch("余额不足", -100),
			this.cancelAutoBet(),
			!1) : null == this.round_id || "" == this.round_id ? (Toast.launch("未找到最新回合,请等待最新回合", -100),
			this.cancelAutoBet(),
			!1) : null == t || "" == t ? (Toast.launch("未找到该赔率", -100),
			!1) : !0 : (Toast.launch("停止下注", -100),
			!1)
		}
		,
		i.prototype.bet = function(e) {
			var i = e.currentTarget.name;
			this.checkTradeData(i) ? (t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().bet_sound_ready && t.SceneTrade.getInstance().bet_sound.play(0, 1),
			this.trade(this.bet_amount, i)) : t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().disabled_bet_sound_ready && t.SceneTrade.getInstance().disabled_bet_sound.play(0, 1)
		}
		,
		i.prototype.repeatBet = function(t) {
			if (t.current_round_first_bet)
				for (var e in t.bet_record) {
					var i = e
					  , n = t.bet_record[e];
					if (n > t.gold_balance)
						return Toast.launch("余额不足", -100),
						t.cancelAutoBet(),
						!1;
					n > 0 && t.trade(n, i)
				}
		}
		,
		i.prototype.trade = function(t, e) {
			this.checkTradeData(e) && (this.gold_balance -= t,
			this.updateBalance(this.gold_balance),
			this.betTotalAmount = this.betTotalAmount + parseFloat(t),
			this.updateMyBetAmount(e, t),
			this.updateBetTotalAmount(e, t))
		}
		,
		i.prototype.settle = function() {
			console.log("winOdds======>", this.winOdds);
			for (var t = 0, e = 0; e < this.winOdds.length; e++)
				if (null != this.bet_total_amount_array[this.winOdds[e].id] && "" != this.bet_total_amount_array[this.winOdds[e].id]) {
					var i = this.bet_total_amount_array[this.winOdds[e].id] * parseFloat(this.winOdds[e].odds);
					t += i
				}
			var n = this.betTotalAmount - t;
			n > 0 ? this.addMessageToList({
				user_name: "我是庄家",
				message_type: "S",
				message_type_s: "banker_win",
				amount: Utils.moneyFormat(n, 2)
			}) : 0 > n && this.addMessageToList({
				user_name: "我是庄家",
				message_type: "S",
				message_type_s: "banker_lose",
				amount: Utils.moneyFormat(Math.abs(n), 2)
			}),
			t > 0 && (this.showBigWinner(self, {
				name: this.user_info.name,
				profit: t
			}, n),
			this.addMessageToList({
				message_type: "S",
				message_type_s: "you_win",
				amount: i
			}),
			this.gold_balance += t,
			this.showWinAmount(this)),
			this.winOdds = []
		}
		,
		i.prototype.updateBankerBalance = function() {}
		,
		Object.defineProperty(i.prototype, "goldNumber", {
			get: function() {
				var t = Utils.moneyFormatBack(this.lbGold.text);
				return t
			},
			set: function(t) {
				var e = Utils.moneyFormat(t, 2);
				this.lbGold.text = e.toString()
			},
			enumerable: !0,
			configurable: !0
		}),
		i.prototype.updateBalance = function(e) {
			this.gold_balance = e,
			this.label_my_balance.text = parseFloat(parseFloat(this.gold_balance).toFixed(0)).toString(),
			egret.Tween.get(this).to({
				goldNumber: e
			}, 1e3),
			t.SceneTrade.getInstance().gold_increase_sound_ready && t.SceneTrade.getInstance().playSound && Utils.moneyFormatBack(this.lbGold.text) != parseFloat(parseFloat(e).toFixed(0)) && t.SceneTrade.getInstance().gold_increase_sound.play(0, 1)
		}
		,
		i.prototype.updateTimer = function(e, i, n) {
			null == i && (i = e.server_time);
			var a = 1e3 * e.start_time
			  , s = 1e3 * e.end_time;
			if ("" != i) {
				null !== e.timer && void 0 !== e.timer && clearInterval(e.timer);
				var o = (new Date).getTime()
				  , r = i - o
				  , l = 0;
				if (a > i && null == n ? (e.startBet(e),
				l = a - i) : s >= i ? (e.stopBet(e),
				l = s - i) : l = 0,
				l = Math.round(l / 1e3),
				l > 0) {
					var o = (new Date).getTime() + r;
					e._klineMasterBar.setTime(o),
					e.timer_label.text = l.toString(),
					e.timer = setInterval(function() {
						o = (new Date).getTime() + r,
						e._klineMasterBar.setTime(o),
						l -= 1,
						l >= 0 && (e.timer_label.text = l.toString()),
						3 == l && null == n && 1 == e.can_bet && e.showTimeDownNotice(e),
						10 >= l && l >= 0 && 0 == e.can_bet && e.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().count_down_10_sound_ready && t.SceneTrade.getInstance().count_down_10_sound.play(0, 1),
						0 >= l && s - 5e3 > o && (e.updateTimer(e, o, 1),
						e.showStopBetNotice(e))
					}, 1e3)
				}
			}
		}
		,
		i.prototype.partAdded = function(i, n) {
			e.prototype.partAdded.call(this, i, n),
			n == this.list_banker_queue && (this.list_banker_queue.dataProvider = new eui.ArrayCollection(this.banker_queue_data),
			this.list_banker_queue.itemRenderer = t.BankerQueueItemSim),
			n == this.chat_list && (this.chat_list.dataProvider = new eui.ArrayCollection(this.chat_data),
			this.chat_list.itemRenderer = t.ChatItem)
		}
		,
		i
	}(eui.Component);
	t.GameGrabSimUI = e,
	__reflect(e.prototype, "game.GameGrabSimUI", ["eui.UIComponent", "egret.DisplayObject"]);
	var i = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.skinName = "resource/ui/main/BankerQueueItem.exml",
			e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e
		}
		return __extends(e, t),
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			(void 0 == this.data.user_avatar || null == this.data.user_avatar || "" == this.data.user_avatar) && (this.data.user_avatar = CONST.DEFAULT_PHOTO),
			this.loadBankerImage(this.data.user_avatar),
			this.vip_grade.source = RES.getRes("icon_vip_" + this.data.vip_grade + "_png"),
			this.balance.text = Utils.moneyFormat(this.data.balance, 2).toString(),
			this.user_name.text = this.data.user_name
		}
		,
		e.prototype.dataChanged = function() {
			null != this.balance && ((void 0 == this.data.user_avatar || null == this.data.user_avatar || "" == this.data.user_avatar) && (this.data.user_avatar = CONST.DEFAULT_PHOTO),
			this.loadBankerImage(this.data.user_avatar),
			this.vip_grade.source = RES.getRes("icon_vip_" + this.data.vip_grade + "_png"),
			this.balance.text = Utils.moneyFormat(this.data.balance, 2).toString(),
			this.user_name.text = this.data.user_name)
		}
		,
		e.prototype.loadBankerImage = function(t) {
			var e = new egret.ImageLoader;
			e.addEventListener(egret.Event.COMPLETE, this.bankerImageLoadCompleteHandler, this),
			e.load(t)
		}
		,
		e.prototype.bankerImageLoadCompleteHandler = function(t) {
			var e = t.currentTarget;
			this.user_avatar.bitmapData = e.data
		}
		,
		e
	}(eui.ItemRenderer);
	t.BankerQueueItemSim = i,
	__reflect(i.prototype, "game.BankerQueueItemSim");
	var n = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.skinName = "resource/ui/main/UserChatItem.exml",
			e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e
		}
		return __extends(e, t),
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			this.setData()
		}
		,
		e.prototype.dataChanged = function() {
			this.setData()
		}
		,
		e.prototype.setData = function() {
			if (null != this.message) {
				if ("N" == this.data.message_type) {
					this.user_avatar.visible = !0,
					this.vip_grade.visible = !0,
					(void 0 == this.data.user_avatar || null == this.data.user_avatar || "" == this.data.user_avatar) && (this.data.user_avatar = CONST.DEFAULT_PHOTO),
					this.loadBankerImage(this.data.user_avatar),
					this.vip_grade.source = RES.getRes("icon_vip_" + this.data.vip_grade + "_png"),
					this.data.user_name.length > 6 && (this.data.user_name = this.data.user_name.substring(0, 6));
					var t = "         【" + this.data.user_name + "】: ";
					null == this.tx && (this.tx = new egret.TextField),
					this.tx.textFlow = [{
						text: t,
						style: {
							textColor: 16542376,
							size: 22
						}
					}, {
						text: this.data.message,
						style: {
							textColor: 16777215,
							size: 22
						}
					}]
				} else
					"S" == this.data.message_type && (this.user_avatar.visible = !1,
					this.vip_grade.visible = !1,
					null == this.tx && (this.tx = new egret.TextField),
					"apply_banker" == this.data.message_type_s ? this.tx.textFlow = [{
						text: "恭迎",
						style: {
							textColor: 16777215,
							size: 22
						}
					}, {
						text: this.data.user_name,
						style: {
							textColor: 5169700,
							size: 22
						}
					}, {
						text: "上庄",
						style: {
							textColor: 16777215,
							size: 22
						}
					}] : "off_banker" == this.data.message_type_s ? this.tx.textFlow = [{
						text: this.data.user_name,
						style: {
							textColor: 5169700,
							size: 22
						}
					}, {
						text: "下庄",
						style: {
							textColor: 16777215,
							size: 22
						}
					}] : "banker_win" == this.data.message_type_s ? this.tx.textFlow = [{
						text: "庄家",
						style: {
							textColor: 16777215,
							size: 22
						}
					}, {
						text: this.data.user_name,
						style: {
							textColor: 5169700,
							size: 22
						}
					}, {
						text: "赢了",
						style: {
							textColor: 16777215,
							size: 22
						}
					}, {
						text: this.data.amount + "金币",
						style: {
							textColor: 16771143,
							size: 22
						}
					}] : "banker_lose" == this.data.message_type_s ? this.tx.textFlow = [{
						text: "庄家",
						style: {
							textColor: 16777215,
							size: 22
						}
					}, {
						text: this.data.user_name,
						style: {
							textColor: 5169700,
							size: 22
						}
					}, {
						text: "输了",
						style: {
							textColor: 16777215,
							size: 22
						}
					}, {
						text: this.data.amount + "金币",
						style: {
							textColor: 3921496,
							size: 22
						}
					}] : "you_win" == this.data.message_type_s ? this.tx.textFlow = [{
						text: "你赢了",
						style: {
							textColor: 16777215,
							size: 22
						}
					}, {
						text: this.data.amount + "金币",
						style: {
							textColor: 16771143,
							size: 22
						}
					}] : "point_diff" == this.data.message_type_s ? 0 == this.data.point_diff ? this.tx.textFlow = [{
						text: "第 " + this.data.num + " 期 平胜 点差: " + this.data.point_diff,
						style: {
							textColor: 16777215,
							size: 22
						}
					}] : this.data.point_diff > 0 ? this.tx.textFlow = [{
						text: "第 " + this.data.num + " 期 红胜 点差: ",
						style: {
							textColor: 16777215,
							size: 22
						}
					}, {
						text: this.data.point_diff,
						style: {
							textColor: 16001316,
							size: 22
						}
					}] : this.data.point_diff < 0 && (this.tx.textFlow = [{
						text: "第 " + this.data.num + " 期 绿胜 点差: ",
						style: {
							textColor: 16777215,
							size: 22
						}
					}, {
						text: this.data.point_diff,
						style: {
							textColor: 5169700,
							size: 22
						}
					}]) : this.tx.textFlow = [{
						text: this.data.message,
						style: {
							textColor: 16750159,
							size: 22
						}
					}]);
				this.tx.textAlign = egret.VerticalAlign.MIDDLE,
				this.tx.multiline = !0,
				this.tx.width = 340,
				this.tx.height = this.tx.textHeight + 5,
				this.tx.x = 3.4,
				this.tx.y = 6,
				this.tx.lineSpacing = 10,
				this.height = this.tx.height + 5,
				this.addChild(this.tx)
			}
		}
		,
		e.prototype.loadBankerImage = function(t) {
			var e = new egret.ImageLoader;
			e.addEventListener(egret.Event.COMPLETE, this.bankerImageLoadCompleteHandler, this),
			e.load(t)
		}
		,
		e.prototype.bankerImageLoadCompleteHandler = function(t) {
			var e = t.currentTarget;
			this.user_avatar.bitmapData = e.data
		}
		,
		e
	}(eui.ItemRenderer);
	t.ChatItem1 = n,
	__reflect(n.prototype, "game.ChatItem1")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i(t) {
			var i = e.call(this) || this;
			return i.BANKER_TIMES = 10,
			i.BANKER_STATUS_APPLY_OFF_BANKER = 1,
			i.BANKER_STATUS_BANKING = 2,
			i.BANKER_STATUS_PENDING = 3,
			i.BANKER_STATUS_QUIT = 4,
			i.BANKER_STATUS_REPLACED = 5,
			i.BANKER_STATUS_EXCEED_LIMIT = 6,
			i.BANKER_STATUS_CANCEL_APPLY = 7,
			i.currentNoticeIndex = 0,
			i.lb_bet_total_amount_array = Array(),
			i.bet_total_amount_array = Array(),
			i.lb_my_bet_amount_array = Array(),
			i.my_bet_amount_array = Array(),
			i.img_lose_array = Array(),
			i.btn_bet_array = Array(),
			i.bet_record = Array(),
			i.auto_bet = !1,
			i.repeat_bet = !1,
			i.can_bet = !1,
			i.can_repeat = !0,
			i.auto_bet_num = 0,
			i.current_round_first_bet = !0,
			i.win_amount = 0,
			i.host = GameConfig.SOCKET_HOST,
			i.port = GameConfig.SOCKET_PORT,
			i.diff = 30,
			i.bet_amount = 1e3,
			i.banker_queue_data = new Array,
			i.is_banker = !1,
			i.get_banker_ing = !1,
			i.gameSocketReady = !1,
			i.gameRoundReady = !1,
			i.timerCheckReadStatus = null,
			i.closeStatus = !1,
			i.showNotice = !0,
			i.userNoticeTimer = null,
			i.playNoticeSound = !0,
			i.totalBetAmount = 0,
			i.firstLoadingComplete = !1,
			i.checkBalanceTimer = null,
			i.canReconnect = !0,
			i.setRoomType(t),
			i.addEventListener(eui.UIEvent.COMPLETE, i.uiCompHandler, i),
			i.skinName = "resource/ui/main/GameGrabUISkin.exml",
			i
		}
		return __extends(i, e),
		i.getInstance = function(t, e) {
			return this._instance || t && (this._instance = new i(e)),
			this._instance
		}
		,
		i.prototype.setRoomType = function(t) {
			null != t && (this.game_model_type = t.game_model_type,
			this.room_id = t.game_room_id,
			this.capital = t.capital)
		}
		,
		i.prototype.uiCompHandler = function(t) {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this);
			window.removeEventListener("offline", this.offlineEvent),
			window.addEventListener("offline", this.offlineEvent),
			this.list_banker_queue.layout.gap = 10,
			this.setClickListener(),
			this.subInit()
		}
		,
		i.prototype.offlineEvent = function() {
			Toast.launch("您当前的网络状态不稳定", -100),
			t.AppFacade.getInstance().sendNotification(MainNotify.CLOSE_GRAB);
			var e = {
				reload: !1,
				game_model_type: this.game_model_type
			};
			t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_CAPITAL_LIST, e)
		}
		,
		i.prototype.enterRoomFailed = function() {
			var t = this;
			t.closeLoading(t),
			t.destoryAll(),
			GameLayerManager.gameLayer().mainLayer.$children.length > 1 && GameLayerManager.gameLayer().mainLayer.removeChildAt(0),
			Toast.launch("进入房间失败,请稍后再试", -100)
		}
		,
		i.prototype.destoryAll = function() {
			console.log("grab destoryAll"),
			t.AppFacade.getInstance().sendNotification(PanelNotify.CLOSE_BIG_WINNER),
			null != this.stage && this.stage.removeEventListener(egret.Event.ACTIVATE, this.onResume, this),
			this.firstLoadingComplete = !1,
			this.gameSocketReady = !1,
			this.gameRoundReady = !1,
			this._chatBar && (this._chatBar.chatSocketReady = !1),
			this._klineMasterBar.kline_socket && (this._klineMasterBar.kline_socket.klineSocketReady = !1),
			this.totalBetAmount = 0,
			this.host = GameConfig.SOCKET_HOST,
			this.port = GameConfig.SOCKET_PORT,
			this.groupHeader.removeChildren(),
			null != this.timerCheckReadStatus && void 0 != this.timerCheckReadStatus && clearInterval(this.timerCheckReadStatus),
			null != this.userNoticeTimer && void 0 != this.userNoticeTimer && clearInterval(this.userNoticeTimer),
			this.disconnectGameSocket(),
			null != this._klineMasterBar.kline_socket && void 0 != this._klineMasterBar.kline_socket && (this._klineMasterBar.kline_socket.disconnect(),
			this._klineMasterBar.kline_socket = null),
			this._klineMasterBar.removeSettleGroup(),
			null != this._chatBar.chat_socket && void 0 != this._chatBar.chat_socket && (this._chatBar.chat_socket.disconnect(),
			this._chatBar.chat_socket = null),
			this._chatBar.chat_data.shift(),
			this._chatBar.chat_data = new Array,
			this.closeStatus = !0,
			clearInterval(this.timer),
			this.timer = null,
			this.playNoticeSound = !1,
			this.current_banker = null,
			this.updateBanker(),
			this.cancelAutoBet(),
			this.initBetTotalAmount(null),
			this.initMyBetAmount(),
			this.get_banker_ing = !1,
			this.lb_queue_order_title.visible = !1,
			this.lb_queue_order.visible = !1,
			this.stopCheckBalance(),
			i._instance = null,
			t.KlineMasterBarV2._instance = null
		}
		,
		i.prototype.disconnectGameSocket = function() {
			null != this.game_socket && void 0 != this.game_socket && (this.canReconnect = !1,
			this.game_socket.disconnect(),
			this.game_socket = null)
		}
		,
		i.prototype.reOpen = function(t) {
			this.setRoomType(t),
			this.subInit(),
			this.closeStatus = !1
		}
		,
		i.prototype.subInit = function() {
			return this.user_info = Utils.getStorageObj(Keys.FK_UserInfo),
			null == this.user_info || void 0 == this.user_info || "" == this.user_info ? (this.destoryAll(),
			void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN)) : (this.user_id = this.user_info.uid,
			this.token = this.user_info.token,
			null == this.user_id || null == this.token ? (this.destoryAll(),
			void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN)) : (this.initSocket(),
			this.playNoticeSound = !0,
			this.showLoading(this),
			this._headerBar = t.HeaderBarV2.getInstance(!0),
			this._headerBar.game_model_type = this.game_model_type,
			this._headerBar.is_sim = "N",
			this.groupHeader.addChild(this._headerBar),
			console.log(this.kline_group.$children),
			this._klineMasterBar = t.KlineMasterBarV2.getInstance(!0),
			this._klineMasterBar.user_id = this.user_id,
			this._klineMasterBar.token = this.token,
			this._klineMasterBar.x = 4,
			this._klineMasterBar.y = 0,
			this.kline_group.addChild(this._klineMasterBar),
			this._klineMasterBar.setPointDiffListener(this.pointDiffListener, this),
			this.content_group.setChildIndex(this.kline_group, 99),
			this.content_group.setChildIndex(this.group_big_winner, 110),
			this._chatBar = t.ChatBar.getInstance(!0),
			this.chat_group.addChild(this._chatBar),
			this._chatBar.setOptions({
				room_id: this.room_id,
				user_info: this.user_info,
				user_id: this.user_id,
				token: this.user_info.access_token
			}),
			this._chatBar.initSocket(),
			this.showUserNotice(),
			this.content_group.setChildIndex(this.group_message_norice, 100),
			this.timerCheckReadStatus = setInterval(function(e) {
				e.gameSocketReady && e.gameRoundReady && e._chatBar.chatSocketStatus() && e._klineMasterBar.kline_socket.getKlineSocketStatus() ? (GameLayerManager.gameLayer().mainLayer.$children.length > 1 && (GameLayerManager.gameLayer().mainLayer.removeChildAt(1),
				t.HeaderBarV2.getInstance(!0).showTopupAnimation()),
				e.firstLoadingComplete || (e.firstLoadingComplete = !0,
				e.showWelcomeMsg(),
				e.getBankers(),
				e.getEwallet()),
				e.closeLoading(e)) : e.showLoading(e)
			}, 1e3, this),
			this.userNoticeTimer = setInterval(function(t) {
				t.showUserNotice()
			}, 5500, this),
			this.getCapitalOddsList(),
			this.getLatestRoundDetail(),
			this.initBetAmount(),
			void this.getMessageList()))
		}
		,
		i.prototype.startCheckBalance = function() {
			var t = this;
			null == this.checkBalanceTimer && (this.checkBalanceTimer = setInterval(function(t) {
				t.gold_balance < 1e3 && t.getUserTaskNum()
			}, 3e3, t))
		}
		,
		i.prototype.stopCheckBalance = function() {
			null != this.checkBalanceTimer && void 0 != this.checkBalanceTimer && (clearInterval(this.checkBalanceTimer),
			this.checkBalanceTimer = null)
		}
		,
		i.prototype.initBetAmount = function() {
			this.bet_amount = Utils.getStorageObj(Keys.FK_BET_AMOUNT),
			null == this.bet_amount && this.bet_amount <= 0 && (this.bet_amount = 10),
			10 == this.bet_amount ? this.label_bet_amount.text = "单注: 10" : 100 == this.bet_amount ? this.label_bet_amount.text = "单注: 100" : 1e3 == this.bet_amount ? this.label_bet_amount.text = "单注: 1000" : 5e3 == this.bet_amount ? this.label_bet_amount.text = "单注: 5000" : 1e4 == this.bet_amount && (this.label_bet_amount.text = "单注: 10000")
		}
		,
		i.prototype.pointDiffListener = function(t, e, i) {
			t > 0 ? i.lb_point_diff.textColor = 16001316 : 0 > t ? i.lb_point_diff.textColor = 5169700 : 0 == t && (i.lb_point_diff.textColor = 16777215),
			i.lb_point_diff.text = t.toString(),
			!i.contains(i.stopbet_group)
		}
		,
		i.prototype.showWelcomeMsg = function() {
			var t = "";
			"BTCCNY" == this.capital ? t = "比特币" : "LTCCNY" == this.capital ? t = "莱特币" : "EURUSD" == this.capital ? t = "欧元/美元" : "XAUUSD" == this.capital ? t = "黄金" : "GBPUSD" == this.capital && (t = "英镑/美元"),
			this._chatBar.addMessage({
				message_type: "S",
				message: "欢迎来到 (" + t + ") 抢庄竞猜!"
			})
		}
		,
		i.prototype.openGroupEmoji = function() {
			this.group_emoji.visible = !0,
			this.group_all.visible = !0,
			this.group_emoji.removeChildren();
			var e = new eui.Image;
			e.source = RES.getRes("bg_banker_queue_png"),
			e.x = 0,
			e.y = 0,
			e.width = this.group_emoji.width,
			e.height = this.group_emoji.height,
			this.group_emoji.addChild(e);
			for (var i = 0, n = 20, a = 0; a < t.ChatBar.array_emoji.length; a++) {
				var s = t.ChatBar.array_emoji[a].value
				  , o = new eui.Label;
				o.width = 60,
				o.height = 60,
				o.size = 40,
				o.text = s,
				o.x = i,
				o.y = n,
				o.textAlign = "center",
				o.name = a.toString(),
				this.group_emoji.addChild(o),
				i += o.width,
				i >= this.group_emoji.width && (n += o.height,
				i = 0),
				o.addEventListener(egret.TouchEvent.TOUCH_TAP, this.clickEmoji, this)
			}
		}
		,
		i.prototype.clickEmoji = function(e) {
			var i = e.currentTarget.name;
			this._chatBar.addEmoji(t.ChatBar.array_emoji[i].value)
		}
		,
		i.prototype.closeGroupEmoji = function() {
			this.group_emoji.visible = !1
		}
		,
		i.prototype.showUserNotice = function() {
			var t = this
			  , e = null;
			return 0 == Main.noticeList.length ? void (this.currentNoticeIndex = 0) : (this.currentNoticeIndex >= Main.noticeList.length && (this.currentNoticeIndex = 0),
			e = Main.noticeList[this.currentNoticeIndex],
			void (null != e && (1 == e.type ? this.lb_notice.text = e.name + ": " + e.message : this.lb_notice.text = e.message,
			this.lb_notice.x = 719,
			egret.Tween.get(this.lb_notice, {
				loop: !1
			}).to({
				x: -1 * this.lb_notice.width
			}, 5e3).call(function() {
				if (null != Main.noticeList[t.currentNoticeIndex] && (Main.noticeList[t.currentNoticeIndex].is_show = !0,
				t.currentNoticeIndex++,
				Main.noticeList.length > 20))
					for (var e = 0; e < Main.noticeList.length - 20; e++)
						Main.noticeList[e].is_show && Main.noticeList.splice(e, 1)
			}))))
		}
		,
		Object.defineProperty(i.prototype, "labelWinAmount", {
			get: function() {
				var t = Utils.StringToFloat(this.label_win_amount.text, 0);
				return t
			},
			set: function(t) {
				this.label_win_amount.text = Utils.StringToFloat(t.toString(), 0).toString()
			},
			enumerable: !0,
			configurable: !0
		}),
		Object.defineProperty(i.prototype, "labelMyBalance", {
			get: function() {
				var t = Utils.StringToFloat(this.label_my_balance.text, 0);
				return t
			},
			set: function(t) {
				this.label_my_balance.text = Utils.StringToFloat(t.toString(), 0).toString()
			},
			enumerable: !0,
			configurable: !0
		}),
		i.prototype.setClickListener = function() {
			var e = this;
			this.btn_apply_banker.addEventListener(egret.TouchEvent.TOUCH_TAP, this.applyBanker, this),
			this.btn_off_banker.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				e.is_banker ? e.offBanker() : e.offBankerQueue()
			}, this),
			this.btn_change_amount.addEventListener(egret.TouchEvent.TOUCH_BEGIN, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
				10 == e.bet_amount ? (e.bet_amount = 100,
				e.label_bet_amount.text = "单注: 100") : 100 == e.bet_amount ? (e.bet_amount = 1e3,
				e.label_bet_amount.text = "单注: 1000") : 1e3 == e.bet_amount ? (e.bet_amount = 5e3,
				e.label_bet_amount.text = "单注: 5000") : 5e3 == e.bet_amount ? (e.bet_amount = 1e4,
				e.label_bet_amount.text = "单注: 10000") : 1e4 == e.bet_amount && (e.bet_amount = 10,
				e.label_bet_amount.text = "单注: 10"),
				Utils.setStorageObj(Keys.FK_BET_AMOUNT, e.bet_amount)
			}, this),
			this.btn_repeat_bet.addEventListener(egret.TouchEvent.TOUCH_BEGIN, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
				e.bet_record.length > 0 && e.can_repeat && (e.repeat_bet = !0,
				e.repeatBet(e),
				e.can_repeat = !1)
			}, this),
			this.btn_auto_bet.addEventListener(egret.TouchEvent.TOUCH_BEGIN, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
				e.auto_bet ? e.cancelAutoBet() : e.bet_record.length > 0 && e.autoBet()
			}, this),
			this.btn_banker_queue.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
				e.group_banker_queue.visible ? e.group_banker_queue.visible = !1 : (e.group_banker_queue.visible = !0,
				e.group_all.visible = !0,
				e.getBankers())
			}, this),
			this.group_all.addEventListener(egret.TouchEvent.TOUCH_END, function() {
				e.group_banker_queue.visible = !1,
				e.group_all.visible = !1,
				e.group_emoji.visible = !1
			}, this),
			this.img_safe_box.addEventListener(egret.TouchEvent.TOUCH_END, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
				t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_SAFE_BOX)
			}, this),
			this.group_banker_help.addEventListener(egret.TouchEvent.TOUCH_END, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
				t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_HEPL_DIALOG)
			}, this),
			this.img_notice.addEventListener(egret.TouchEvent.TOUCH_BEGIN, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
				t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_USER_NOTICE)
			}, this),
			this.btnBankerTipToup.addEventListener(egret.TouchEvent.TOUCH_BEGIN, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
				e.groupBankerTip.visible = !1,
				t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_SHOP, "G")
			}, this),
			this.imgBankerTipClose.addEventListener(egret.TouchEvent.TOUCH_BEGIN, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
				e.groupBankerTip.visible = !1
			}, this)
		}
		,
		i.prototype.addActivate = function() {
			null != this.stage && (this.stage.removeEventListener(egret.Event.ACTIVATE, this.onResume, this),
			this.stage.addEventListener(egret.Event.ACTIVATE, this.onResume, this))
		}
		,
		i.prototype.onResume = function() {
			this.cancelAutoBet(),
			this.getLatestRoundDetail(),
			this.getBankers(),
			this.can_bet && (this.point_diff_group.visible = !1,
			this.contains(this.settle_group) && this.removeChild(this.settle_group))
		}
		,
		i.prototype.getSettleResult = function(e) {
			this.point_diff_group.visible = !1;
			var i = e.period
			  , n = e.point_diff;
			if (null != i) {
				var a = n;
				"BTCCNY" == this._klineMasterBar.options.Capital ? a = parseFloat(a.toFixed(this._klineMasterBar.options.roundPoint)) : (a *= Math.pow(10, this._klineMasterBar.options.roundPoint),
				a = Math.round(a)),
				this._chatBar.addMessage({
					num: i,
					message_type: "S",
					message_type_s: "point_diff",
					point_diff: a
				})
			}
			for (var s = {}, o = {}, r = 0; r < this.capital_odds.length; r++) {
				var l = this.capital_odds[r].id
				  , h = this.capital_odds[r].interval_start
				  , d = this.capital_odds[r].interval_end
				  , _ = this.capital_odds[r].order
				  , p = !1;
				0 >= d && (0 > h || null == h) && null != d ? null == h ? d > n && (p = !0,
				this.showSettleResult(this.capital_odds[r])) : n >= h && d > n && (p = !0,
				this.showSettleResult(this.capital_odds[r])) : h >= 0 && (d > 0 || null == d) && null != h ? null == d ? n > h && (p = !0,
				this.showSettleResult(this.capital_odds[r])) : n > h && d >= n && (p = !0,
				this.showSettleResult(this.capital_odds[r])) : 0 == h && 0 == d && null != h && null != d && 0 == n && (p = !0,
				this.showSettleResult(this.capital_odds[r]));
				var u = 0
				  , g = 0;
				0 == _ ? (u = 205,
				g = 960) : 1 == _ ? (u = 330,
				g = 960) : 2 == _ ? (u = 465,
				g = 960) : _ >= 3 && 10 >= _ && (u = 90 * (_ - 2) - 60,
				g = 1115),
				1 == p ? parseFloat(this.lb_bet_total_amount_array[l].text) > 0 && (o[_] = {
					x: u,
					y: g
				}) : (this.img_lose_array[_].visible = !0,
				parseFloat(this.lb_bet_total_amount_array[l].text) > 0 && (s[_] = {
					x: u,
					y: g
				}))
			}
			console.log(s, o);
			for (var c in s)
				t.Fly.flyGold(s[c].x, s[c].y, 525, 655, 1500, 6, null, function() {});
			setTimeout(function() {
				for (var e in o)
					t.Fly.flyGold(525, 655, o[e].x, o[e].y, 2e3, 10, null, function() {})
			}, 2e3)
		}
		,
		i.prototype.showSettleResult = function(e, i) {
			if (void 0 === i && (i = !0),
			null != e) {
				i && (this.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().settle_result_sound_ready && t.SceneTrade.getInstance().settle_result_sound.play(0, 1),
				this.btn_bet_array[e.id].enabled = !0);
				var n = "";
				if (0 == e.order || 1 == e.order || 2 == e.order) {
					if (1 != e.order)
						return;
					n = "btn_equal_png";
					var a = "icon-pings_png"
					  , s = 2;
					if (this.contains(this.settle_group) && this.removeChild(this.settle_group),
					this.settle_group = new eui.Group,
					this.settle_group.width = 120 * s,
					this.settle_group.height = 84 * s,
					this.settle_group.x = this.width / 2 - 120 * s / 2,
					this.settle_group.y = this.height / 2 - 173,
					i) {
						var o = new eui.Image;
						o.width = 500,
						o.height = 490,
						o.verticalCenter = .5,
						o.horizontalCenter = .5,
						o.source = RES.getRes("bg_sunshine_png"),
						o.anchorOffsetX = 250,
						o.anchorOffsetY = 245,
						this.settle_group.addChild(o)
					}
					var r = new eui.Image;
					r.width = 120 * s,
					r.height = 84 * s,
					r.x = 0,
					r.y = 0,
					r.source = RES.getRes(n),
					this.settle_group.addChild(r);
					var l = new eui.Label;
					l.fontFamily = "lgzbFont",
					l.width = 85 * s,
					l.height = 27.33 * s,
					l.x = 15 * s,
					l.y = (this.settle_group.height - l.height) / s + 10,
					l.text = "x" + parseFloat(e.odds),
					l.textColor = 16113323,
					l.bold = !0,
					l.size = 30 * s,
					l.stroke = 1,
					l.strokeColor = 789259,
					l.verticalAlign = "middle",
					l.textAlign = "center",
					this.settle_group.addChild(l);
					var h = new eui.Image;
					h.x = 0,
					h.y = 0,
					h.width = 57 * s,
					h.height = 49 * s,
					h.source = RES.getRes(a),
					this.settle_group.addChild(h),
					this.addChild(this.settle_group),
					this.setChildIndex(this.settle_group, 100),
					this.setChildIndex(this.groupBankerTip, 101),
					i && egret.Tween.get(o).to({
						rotation: 150
					}, 1700, egret.Ease.cubicOut).call(function() {
						this.contains(this.settle_group) && this.removeChild(this.settle_group)
					}, this)
				} else {
					n = e.order < 7 ? "btn_odds_rise_png" : "btn_odds_fall_png";
					var s = 2;
					if (this.contains(this.settle_group) && this.removeChild(this.settle_group),
					this.settle_group = new eui.Group,
					this.settle_group.width = 83 * s,
					this.settle_group.height = 85 * s,
					this.settle_group.x = this.width / 2 - 85 * s / 2,
					this.settle_group.y = this.height / 2 - 173,
					i) {
						var o = new eui.Image;
						o.width = 500,
						o.height = 490,
						o.verticalCenter = .5,
						o.horizontalCenter = .5,
						o.source = RES.getRes("bg_sunshine_png"),
						o.anchorOffsetX = 250,
						o.anchorOffsetY = 245,
						this.settle_group.addChild(o)
					}
					var r = new eui.Image;
					r.width = 83 * s,
					r.height = 85 * s,
					r.x = 0,
					r.y = 0,
					r.source = RES.getRes(n),
					this.settle_group.addChild(r);
					var d = new eui.Label;
					d.fontFamily = "lgzbFont",
					d.width = 77 * s,
					d.height = 27.33 * s,
					d.x = 3 * s,
					d.y = 3 * s,
					d.text = e.display,
					d.textColor = 16113323,
					d.bold = !0,
					"BTCCNY" == this.capital ? d.size = 18 * s : d.size = 18 * s,
					d.stroke = 1,
					d.verticalAlign = "middle",
					d.textAlign = "center",
					this.settle_group.addChild(d);
					var l = new eui.Label;
					l.fontFamily = "lgzbFont",
					l.width = 74 * s,
					l.height = 27.33 * s,
					l.x = 5 * s,
					l.y = (this.settle_group.height - l.height) / s + 40,
					l.text = "x" + parseFloat(e.odds),
					l.textColor = 16777215,
					l.bold = !0,
					l.size = 27 * s,
					l.stroke = 1,
					l.verticalAlign = "middle",
					l.textAlign = "center",
					this.settle_group.addChild(l),
					this.addChild(this.settle_group),
					this.setChildIndex(this.settle_group, 100),
					this.setChildIndex(this.groupBankerTip, 101),
					i && egret.Tween.get(o).to({
						rotation: 150
					}, 1700, egret.Ease.cubicOut).call(function() {
						this.contains(this.settle_group) && this.removeChild(this.settle_group)
					}, this)
				}
			}
		}
		,
		i.prototype.showLoading = function(t) {
			if (null == t.loading_group) {
				t.loading_group = new eui.Group,
				t.loading_group.width = 719,
				t.loading_group.height = 1199,
				t.loading_group.verticalCenter = .5,
				t.loading_group.horizontalCenter = .5;
				var e = new egret.Sprite;
				e.graphics.clear(),
				e.graphics.beginFill(0, .6),
				e.graphics.drawRect(0, 0, GameConfig.curWidth(), GameConfig.curHeight()),
				e.graphics.endFill(),
				e.width = GameConfig.curWidth(),
				e.height = GameConfig.curHeight(),
				e.touchEnabled = !0,
				egret.Tween.get(e).to({
					alpha: 1
				}, 150),
				e.visible = !0,
				t.loading_group.addChild(e),
				null == t.loading_image && (t.loading_image = new eui.Image),
				t.loading_image.verticalCenter = .5,
				t.loading_image.horizontalCenter = .5,
				t.loading_image.source = RES.getRes("loading_run_png"),
				t.loading_image.anchorOffsetX = .5 * t.loading_image.width,
				t.loading_image.anchorOffsetY = .5 * t.loading_image.height,
				t.loading_group.addChild(t.loading_image)
			}
			GameLayerManager.gameLayer().effectLayer.contains(t.loading_group) || (GameLayerManager.gameLayer().effectLayer.addChild(t.loading_group),
			GameLayerManager.gameLayer().effectLayer.addEventListener(egret.Event.ENTER_FRAME, t.runLoading, t))
		}
		,
		i.prototype.runLoading = function(t) {
			this.loading_image.rotation += 3
		}
		,
		i.prototype.closeLoading = function(t) {
			GameLayerManager.gameLayer().effectLayer.contains(t.loading_group) && GameLayerManager.gameLayer().effectLayer.removeChild(t.loading_group),
			GameLayerManager.gameLayer().effectLayer.removeEventListener(egret.Event.ENTER_FRAME, t.runLoading, t)
		}
		,
		i.prototype.showStartBetNotice = function(e) {
			this.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().start_bet_sound_ready && t.SceneTrade.getInstance().start_bet_sound.play(0, 1);
			var i = new eui.Group
			  , n = new eui.Image;
			n.source = RES.getRes("icon_start_bet_png"),
			n.horizontalCenter = .5,
			n.verticalCenter = .5,
			n.height = 0,
			i.addChild(n),
			i.horizontalCenter = .5,
			i.y = 267,
			i.height = 642,
			i.width = 153,
			e.addChild(i),
			e.setChildIndex(i, 100),
			e.setChildIndex(e.groupBankerTip, 101),
			egret.Tween.get(n).to({
				height: 153
			}, 150),
			setTimeout(function(t) {
				egret.Tween.get(n).to({
					height: 0
				}, 150).call(function() {
					t.removeChild(i)
				})
			}, 1500, e)
		}
		,
		i.prototype.showTimeDownNotice = function(e) {
			var i = new eui.Group
			  , n = new eui.Image;
			n.source = RES.getRes("timer_down_num_3_png"),
			n.horizontalCenter = .5,
			n.verticalCenter = .5,
			n.height = 0,
			n.width = 330,
			i.addChild(n),
			i.horizontalCenter = .5,
			i.y = 180,
			i.height = 330,
			i.width = 330,
			e.addChild(i),
			e.setChildIndex(i, 100),
			e.setChildIndex(e.groupBankerTip, 101),
			e.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().count_down_sound_ready && t.SceneTrade.getInstance().count_down_sound.play(0, 1),
			egret.Tween.get(n).to({
				height: 330
			}, 150),
			setTimeout(function(e) {
				egret.Tween.get(n).to({
					height: 0
				}, 150).call(function() {
					e.removeChild(i),
					n.source = RES.getRes("timer_down_num_2_png"),
					i.addChild(n),
					e.addChild(i),
					e.setChildIndex(i, 100),
					e.setChildIndex(e.groupBankerTip, 101),
					e.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().count_down_sound_ready && t.SceneTrade.getInstance().count_down_sound.play(0, 1),
					egret.Tween.get(n).to({
						height: 330
					}, 150),
					setTimeout(function(e) {
						egret.Tween.get(n).to({
							height: 0
						}, 150).call(function() {
							e.removeChild(i),
							n.source = RES.getRes("timer_down_num_1_png"),
							i.addChild(n),
							e.addChild(i),
							e.setChildIndex(i, 100),
							e.setChildIndex(e.groupBankerTip, 101),
							e.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().count_down_sound_ready && t.SceneTrade.getInstance().count_down_sound.play(0, 1),
							egret.Tween.get(n).to({
								height: 330
							}, 150),
							setTimeout(function(t) {
								egret.Tween.get(n).to({
									height: 0
								}, 150).call(function() {
									t.removeChild(i)
								})
							}, 850, e)
						})
					}, 850, e)
				})
			}, 850, e)
		}
		,
		i.prototype.showStopBetNotice = function(e) {
			this.contains(this.stopbet_group) && this.removeChild(this.stopbet_group),
			this.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().stop_bet_sound_ready && (t.SceneTrade.getInstance().stop_bet_clock.play(0, 1),
			t.SceneTrade.getInstance().stop_bet_sound.play(0, 1)),
			this.stopbet_group = new eui.Group;
			var i = new eui.Image;
			i.source = RES.getRes("icon_stop_bet_png"),
			i.horizontalCenter = .5,
			i.verticalCenter = .5,
			i.height = 0,
			this.stopbet_group.addChild(i),
			this.stopbet_group.horizontalCenter = .5,
			this.stopbet_group.y = 267,
			this.stopbet_group.height = 642,
			this.stopbet_group.width = 153,
			this.addChild(this.stopbet_group),
			this.setChildIndex(this.stopbet_group, 100),
			this.setChildIndex(this.groupBankerTip, 101),
			egret.Tween.get(i).to({
				height: 153
			}, 150),
			setTimeout(function(t) {
				egret.Tween.get(i).to({
					height: 0
				}, 150).call(function() {
					t.contains(t.stopbet_group) && t.removeChild(t.stopbet_group)
				})
			}, 1500, e)
		}
		,
		i.prototype.showBurstBankerNotice = function() {
			this.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().burst_banker_sound_ready && t.SceneTrade.getInstance().burst_banker_sound.play(0, 1);
			var e = this
			  , i = new eui.Image;
			i.source = RES.getRes("burst_png"),
			i.alpha = 0,
			i.scaleX = .5,
			i.scaleY = .5,
			i.width = 600,
			i.height = 624,
			i.x = (this.width - i.width) / 2,
			i.y = (this.height - i.height) / 2,
			i.horizontalCenter = "0",
			i.verticalCenter = "0",
			e.addChild(i),
			e.setChildIndex(i, 100),
			e.setChildIndex(e.groupBankerTip, 101),
			egret.Tween.get(i).to({
				alpha: 1,
				scaleX: 1,
				scaleY: 1
			}, 700, egret.Ease.backOut),
			setTimeout(function(t) {
				t.removeChild(i)
			}, 700, e)
		}
		,
		i.prototype.autoBet = function() {
			this.auto_bet = !0,
			this.btn_auto_bet.image_auto_bet.texture = RES.getRes("btn_cancel_auto_bet_png"),
			this.group_auto_bet_notice.visible = !0,
			this.bet_record.length > 0 && (this.disabledBetBtn(),
			this.btn_repeat_bet.enabled = !1)
		}
		,
		i.prototype.cancelAutoBet = function() {
			this.auto_bet = !1,
			this.btn_auto_bet.image_auto_bet.texture = RES.getRes("btn_auto_bet_png"),
			this.group_auto_bet_notice.visible = !1,
			this.auto_bet_num = 0,
			this.label_auto_bet.text = "跟注 :0轮",
			this.btn_repeat_bet.enabled = !0,
			this.can_bet && this.enableBetBtn()
		}
		,
		i.prototype.updateAutoBetNum = function() {
			this.auto_bet_num = this.auto_bet_num + 1,
			this.label_auto_bet.text = "跟注 :" + this.auto_bet_num + "轮"
		}
		,
		i.prototype.initSocket = function() {
			var t = this;
			this.queryEntry(this.user_id, function(e, i) {
				t.host = e,
				t.port = i,
				t.firstInit()
			})
		}
		,
		i.prototype.queryEntry = function(t, e) {
			var i = new pomeloClient.Pomelo;
			i.on(CONST.CommonCommand.io_error, function() {}),
			i.init({
				host: GameConfig.SOCKET_HOST,
				port: GameConfig.SOCKET_PORT
			}, function() {
				var n = {
					uid: t,
					type: "game"
				};
				i.request(CONST.CommonCommand.gate, n),
				i.on(CONST.CommonCommand.gate, function(t) {
					i.disconnect(),
					500 != t.code && e(t.host, t.port)
				})
			})
		}
		,
		i.prototype.firstInit = function() {
			var e = this;
			(null == this.game_socket || 0 == this.game_socket.connected()) && (null != this.game_socket && (this.game_socket.removeAllListeners(),
			this.disconnectGameSocket()),
			this.game_socket = new pomeloClient.Pomelo),
			this.game_socket.init({
				host: this.host,
				port: this.port
			}, function() {
				e.game_socket.request(CONST.GameCommand.init, {
					room_id: e.room_id,
					user_id: e.user_id,
					token: e.user_info.access_token
				})
			}),
			this.game_socket.on(CONST.GameCommand.init, function(t) {
				200 == t.code ? (e.gameSocketReady = !0,
				console.log("game ready"),
				e.canReconnect = !0,
				e.getLatestRoundDetail()) : e.enterRoomFailed()
			}),
			this.game_socket.on(CONST.CommonCommand.close, function() {
				e.gameSocketReady = !1,
				console.log("game socket closed"),
				e.canReconnect && setTimeout(function() {
					e.firstInit()
				}, 3e3)
			}),
			this.game_socket.on(CONST.CommonCommand.heartbeat_timeout, function() {
				e.gameSocketReady = !1,
				console.log("heartbeat_timeout")
			}),
			this.game_socket.on(CONST.CommonCommand.io_error, function() {
				e.gameSocketReady = !1,
				console.error("game socket error"),
				setTimeout(function() {
					e.firstInit()
				}, 3e3)
			}),
			this.game_socket.on(CONST.GameCommand.new_banker, function(t) {
				t = JSON.parse(t),
				null != t && (e.getBankers(),
				t.is_new && (null != e.current_banker && (e.current_banker.user_id = e.user_id) && e.getEwallet(),
				e._chatBar.addMessage({
					user_name: t.user_name,
					message_type: "S",
					message_type_s: "apply_banker"
				})))
			}),
			this.game_socket.on(CONST.GameCommand.off_banker, function(t) {
				t = JSON.parse(t),
				null != t && (e.getBankers(),
				e._chatBar.addMessage({
					user_name: t.user_name,
					message_type: "S",
					message_type_s: "off_banker"
				}))
			}),
			this.game_socket.on(CONST.GameCommand.new_round, function(t) {
				e.getBankers(),
				e._klineMasterBar.removeSettleGroup(),
				t = JSON.parse(t),
				null != t.online_num && e.updateOnlineNum(t.online_num),
				e.initBetTotalAmount(null),
				e.initMyBetAmount();
				for (var i = 0; i < e.img_lose_array.length; i++)
					e.img_lose_array[i].visible = !1;
				e.current_round_first_bet = !0,
				e.can_repeat = !0,
				e.repeat_bet = !1,
				null != t && (e.round_id = t.id,
				e.server_time = t.server_time,
				e.start_time = t.start_time,
				e.end_time = t.end_time,
				e.updateTimer(e, null, null),
				e.showStartBetNotice(e),
				e.auto_bet && (e.current_banker.user_id == this.user_id ? e.cancelAutoBet() : (e.updateAutoBetNum(),
				e.autoBet(),
				e.repeatBet(e))))
			}),
			this.game_socket.on(CONST.GameCommand.new_trade_grab, function(t) {
				t = JSON.parse(t),
				null != t && e.updateBetTotalAmount(t)
			}),
			this.game_socket.on(CONST.GameCommand.create_trade, function(i) {
				i = i.body,
				i = JSON.parse(i),
				1 == i.status ? (e.updateMyBetAmount(i.capital_odds_id, i.trade_amount),
				e.updateBetTotalAmountForSelf(i.capital_odds_id, i.trade_amount),
				e.getEwallet()) : 0 == i.status ? Toast.launch(i.message, -100) : -1 == i.status && (e.destoryAll(),
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN))
			}),
			this.game_socket.on(CONST.GameCommand.begin_settle_grab, function(t) {
				if (t = JSON.parse(t),
				null != t) {
					if (t.burst_banker && e.showBurstBankerNotice(),
					0 == i || null == i || void 0 == i || 0 / 0 == i)
						return;
					var i = parseFloat(t.banker_net_profit);
					if (0 == i || null == i || void 0 == i || 0 / 0 == i)
						return;
					var n = new eui.BitmapLabel;
					n.name = "banker_fly_amount",
					n.font = "gold_28_fnt",
					i > 0 ? n.text = "+" + Utils.moneyFormat(Math.abs(i), 2) : n.text = "-" + Utils.moneyFormat(Math.abs(i), 2),
					n.width = 180,
					n.height = 20,
					n.x = 580,
					n.y = 650,
					e.content_group.addChild(n),
					e.content_group.setChildIndex(n, 111),
					n.alpha = 1,
					egret.Tween.get(n, {
						loop: !1
					}).to({
						y: n.y - 28,
						alpha: .1
					}, 1500).call(function(t) {
						this.content_group.removeChild(n)
					}, e),
					e.banker_balance.text = Utils.moneyFormat(t.banker_balance, 2).toString()
				}
			}),
			this.game_socket.on(CONST.GameCommand.new_settle_grab, function(t) {
				if (t = JSON.parse(t),
				null != t) {
					var i = t.profit;
					if (i > 0) {
						var n = Utils.moneyFormat(i, 2);
						e._chatBar.addMessage({
							message_type: "S",
							message_type_s: "you_win",
							amount: n
						})
					}
					e.win_amount = i,
					e.getEwallet()
				}
			}),
			this.game_socket.on(CONST.GameCommand.big_winner, function(i) {
				i = JSON.parse(i),
				null != i.big_winner && (t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_BIG_WINNER, i.big_winner),
				setTimeout(function() {
					t.AppFacade.getInstance().sendNotification(PanelNotify.CLOSE_BIG_WINNER)
				}, 8e3)),
				e.showBigWinner(e, i.big_winner, i.banker_net_profit);
				var n = "";
				null != e.current_banker && (n = e.current_banker.name),
				i.banker_net_profit > 0 ? e._chatBar.addMessage({
					user_name: n,
					message_type: "S",
					message_type_s: "banker_win",
					amount: Utils.moneyFormat(i.banker_net_profit, 2)
				}) : i.banker_net_profit < 0 && e._chatBar.addMessage({
					user_name: n,
					message_type: "S",
					message_type_s: "banker_lose",
					amount: Utils.moneyFormat(Math.abs(i.banker_net_profit), 2)
				})
			}),
			this.game_socket.on(CONST.GameCommand.apply_banker, function(t) {
				e.getBankers()
			}),
			this.game_socket.on(CONST.GameCommand.off_banker_queue, function(t) {
				e.getBankers()
			}),
			this.game_socket.on(CONST.GameCommand.get_banker, function(t) {
				if (null != t) {
					t = t.body,
					t = JSON.parse(t),
					console.log(t);
					var i = 0;
					if (e.current_banker = null,
					e.banker_queue_data = null,
					e.banker_queue_data = new Array,
					e.is_banker = !1,
					1 == t.status) {
						var n = t.result.bankers;
						if (null != n && n.length > 0)
							for (var a = 0; a < n.length; a++) {
								var s = n[a];
								s.status == e.BANKER_STATUS_APPLY_OFF_BANKER || s.status == e.BANKER_STATUS_BANKING ? e.current_banker = s : s.status == e.BANKER_STATUS_PENDING && (e.banker_queue_data.push({
									balance: s.balance,
									user_name: s.name,
									user_avatar: s.avatar_url,
									vip_grade: s.vip_grade
								}),
								s.user_id == e.user_id && (i = a))
							}
						var o = null;
						null != t.result.status && "" != t.result.status && (o = t.result.status.status),
						null != o && "" != o ? o == e.BANKER_STATUS_PENDING ? (e.btn_apply_banker.visible = !1,
						e.btn_off_banker.visible = !0,
						e.lb_queue_order_title.visible = !0,
						e.lb_queue_order.visible = !0,
						0 == i ? e.lb_queue_order.text = "10+" : e.lb_queue_order.text = i.toString()) : o == e.BANKER_STATUS_BANKING ? (e.btn_apply_banker.visible = !1,
						e.btn_off_banker.visible = !0,
						e.lb_queue_order_title.visible = !1,
						e.lb_queue_order.visible = !1,
						e.is_banker = !0) : o == e.BANKER_STATUS_APPLY_OFF_BANKER && (e.btn_apply_banker.visible = !0,
						e.btn_off_banker.visible = !1,
						e.lb_queue_order_title.visible = !1,
						e.lb_queue_order.visible = !1,
						e.is_banker = !0) : (e.btn_apply_banker.visible = !0,
						e.btn_off_banker.visible = !1,
						e.lb_queue_order_title.visible = !1,
						e.lb_queue_order.visible = !1)
					} else
						e.btn_apply_banker.visible = !0,
						e.btn_off_banker.visible = !1,
						e.lb_queue_order_title.visible = !1,
						e.lb_queue_order.visible = !1;
					null == e.current_banker && e.cancelAutoBet(),
					e.updateBanker(),
					e.updateBankerQueue(),
					e.getEwallet()
				}
			}),
			this.game_socket.on(CONST.GameCommand.get_ewallet, function(t) {
				if (null != t && (t = t.body,
				t = JSON.parse(t),
				1 == t.status)) {
					var i = t.result;
					if (i.length > 0) {
						var n = i[0].balance;
						e.gold_balance = i[0].balance,
						n = Utils.moneyFormat(n, 2),
						e.win_amount <= 0 ? e.label_my_balance.text = parseFloat(parseFloat(e.gold_balance).toFixed(0)).toString() : e.showWinAmount(e),
						e._headerBar.updateBalance(i[0].balance)
					}
				}
			}),
			this.game_socket.on(CONST.GameCommand.capital_close, function(e) {
				e = JSON.parse(e),
				Toast.launch("该资产已休市，游戏关闭", 0),
				setTimeout(function() {
					t.SceneTrade.getInstance().stopGrabSound(),
					t.SceneTrade.getInstance().playBgSound(),
					t.AppFacade.getInstance().sendNotification(MainNotify.CLOSE_GRAB);
					var i = {
						reload: !0,
						game_model_type: e.game_model_type
					};
					t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_CAPITAL_LIST, i),
					t.HeaderBar.getInstance(!0).loadEwallet()
				}, 3e3)
			})
		}
		,
		i.prototype.showWinAmount = function(e) {
			var i = parseFloat(e.win_amount);
			e.win_amount > 0 && (e.label_win_amount.text = parseFloat(parseFloat(e.win_amount).toFixed(0)).toString(),
			setTimeout(function() {
				e.label_win_amount.visible = !1
			}, 500, e),
			setTimeout(function() {
				e.label_win_amount.visible = !0
			}, 1e3, e),
			setTimeout(function() {
				e.label_win_amount.visible = !1
			}, 1500, e),
			setTimeout(function() {
				e.label_win_amount.visible = !0
			}, 2e3, e),
			setTimeout(function() {
				e.label_win_amount.visible = !1
			}, 2500, e),
			setTimeout(function() {
				e.label_win_amount.visible = !0
			}, 3e3, e),
			setTimeout(function() {
				egret.Tween.get(e).to({
					labelWinAmount: 0
				}, 1500)
			}, 3500, e),
			e.win_amount = 0),
			setTimeout(function() {
				egret.Tween.get(e).to({
					labelMyBalance: parseFloat(parseFloat(e.gold_balance).toFixed(0)).toString()
				}, 1500),
				t.Fly.flyGold(270, 830, 100, 50, 1e3, 15, i, function() {})
			}, 3500, e)
		}
		,
		i.prototype.showBigWinner = function(t, e, i) {
			t.lb_big_winner_name.visible = !0,
			t.lb_big_winner_banker_name.visible = !0,
			t.lb_big_winner_amount.visible = !0,
			t.lb_big_winner_banker_amount.visible = !0,
			t.img_big_winner_banker_res.visible = !0,
			t.img_big_winner_res.visible = !0,
			t.img_big_winner_res.source = RES.getRes("icon_win_png"),
			null != e ? (t.lb_big_winner_name.text = e.name,
			null != e.profit && "" != e.profit ? t.lb_big_winner_amount.text = Utils.moneyFormat(e.profit, 2) : t.lb_big_winner_amount.text = "") : (t.lb_big_winner_amount.text = "",
			t.lb_big_winner_name.text = ""),
			null != t.current_banker && (t.lb_big_winner_banker_name.text = t.current_banker.name),
			i >= 0 ? (t.lb_big_winner_banker_amount.text = Utils.moneyFormat(Math.abs(i), 2),
			t.img_big_winner_banker_res.source = RES.getRes("icon_win_png")) : (t.lb_big_winner_banker_amount.text = Utils.moneyFormat(Math.abs(i), 2),
			t.img_big_winner_banker_res.source = RES.getRes("icon_lose_png")),
			t.img_bg_big_winner.height = 0,
			t.group_big_winner.visible = !0;
			var n = GameLayerManager._instance.getChildByName("banker_fly_amount");
			n && GameLayerManager._instance.setChildIndex(n, 106),
			egret.Tween.get(t.img_bg_big_winner).to({
				height: 280
			}, 150),
			setTimeout(function() {
				t.lb_big_winner_name.visible = !1,
				t.lb_big_winner_banker_name.visible = !1,
				t.lb_big_winner_amount.visible = !1,
				t.lb_big_winner_banker_amount.visible = !1,
				t.img_big_winner_banker_res.visible = !1,
				t.img_big_winner_res.visible = !1,
				egret.Tween.get(t.img_bg_big_winner).to({
					height: 0
				}, 150).call(function() {
					t.group_big_winner.visible = !1
				})
			}, 3e3, t)
		}
		,
		i.prototype.initKline = function() {
			this._klineMasterBar.setOptions({
				Capital: this.capital,
				Diff: 30,
				odds: this.capital_odds
			}),
			this._klineMasterBar.initSocket()
		}
		,
		i.prototype.updateKline = function() {
			console.log("GameGrabUI ------>>>>>> updateKline");
			var t = this._klineMasterBar.getOptions();
			this._klineMasterBar.setOptions({
				Capital: this.capital,
				Diff: t.Diff
			}),
			this._klineMasterBar.initKlineSocket(this.capital, t.Diff)
		}
		,
		i.prototype.initIntervalOdds = function() {
			if (null != this.capital_odds) {
				this.lb_bet_total_amount_array[this.capital_odds[0].id] = this.label_bet_total_amount_0,
				this.lb_bet_total_amount_array[this.capital_odds[1].id] = this.label_bet_total_amount_1,
				this.lb_bet_total_amount_array[this.capital_odds[2].id] = this.label_bet_total_amount_2,
				this.lb_bet_total_amount_array[this.capital_odds[3].id] = this.label_bet_total_amount_3,
				this.lb_bet_total_amount_array[this.capital_odds[4].id] = this.label_bet_total_amount_4,
				this.lb_bet_total_amount_array[this.capital_odds[5].id] = this.label_bet_total_amount_5,
				this.lb_bet_total_amount_array[this.capital_odds[6].id] = this.label_bet_total_amount_6,
				this.lb_bet_total_amount_array[this.capital_odds[7].id] = this.label_bet_total_amount_7,
				this.lb_bet_total_amount_array[this.capital_odds[8].id] = this.label_bet_total_amount_8,
				this.lb_bet_total_amount_array[this.capital_odds[9].id] = this.label_bet_total_amount_9,
				this.lb_bet_total_amount_array[this.capital_odds[10].id] = this.label_bet_total_amount_10,
				this.bet_total_amount_array[this.capital_odds[0].id] = 0,
				this.bet_total_amount_array[this.capital_odds[1].id] = 0,
				this.bet_total_amount_array[this.capital_odds[2].id] = 0,
				this.bet_total_amount_array[this.capital_odds[3].id] = 0,
				this.bet_total_amount_array[this.capital_odds[4].id] = 0,
				this.bet_total_amount_array[this.capital_odds[5].id] = 0,
				this.bet_total_amount_array[this.capital_odds[6].id] = 0,
				this.bet_total_amount_array[this.capital_odds[7].id] = 0,
				this.bet_total_amount_array[this.capital_odds[8].id] = 0,
				this.bet_total_amount_array[this.capital_odds[9].id] = 0,
				this.bet_total_amount_array[this.capital_odds[10].id] = 0,
				this.lb_my_bet_amount_array[this.capital_odds[0].id] = this.label_my_bet_0,
				this.lb_my_bet_amount_array[this.capital_odds[1].id] = this.label_my_bet_1,
				this.lb_my_bet_amount_array[this.capital_odds[2].id] = this.label_my_bet_2,
				this.lb_my_bet_amount_array[this.capital_odds[3].id] = this.label_my_bet_3,
				this.lb_my_bet_amount_array[this.capital_odds[4].id] = this.label_my_bet_4,
				this.lb_my_bet_amount_array[this.capital_odds[5].id] = this.label_my_bet_5,
				this.lb_my_bet_amount_array[this.capital_odds[6].id] = this.label_my_bet_6,
				this.lb_my_bet_amount_array[this.capital_odds[7].id] = this.label_my_bet_7,
				this.lb_my_bet_amount_array[this.capital_odds[8].id] = this.label_my_bet_8,
				this.lb_my_bet_amount_array[this.capital_odds[9].id] = this.label_my_bet_9,
				this.lb_my_bet_amount_array[this.capital_odds[10].id] = this.label_my_bet_10,
				this.my_bet_amount_array[this.capital_odds[0].id] = 0,
				this.my_bet_amount_array[this.capital_odds[1].id] = 0,
				this.my_bet_amount_array[this.capital_odds[2].id] = 0,
				this.my_bet_amount_array[this.capital_odds[3].id] = 0,
				this.my_bet_amount_array[this.capital_odds[4].id] = 0,
				this.my_bet_amount_array[this.capital_odds[5].id] = 0,
				this.my_bet_amount_array[this.capital_odds[6].id] = 0,
				this.my_bet_amount_array[this.capital_odds[7].id] = 0,
				this.my_bet_amount_array[this.capital_odds[8].id] = 0,
				this.my_bet_amount_array[this.capital_odds[9].id] = 0,
				this.my_bet_amount_array[this.capital_odds[10].id] = 0,
				this.btn_odds_0.name = this.capital_odds[0].id,
				this.btn_odds_1.name = this.capital_odds[1].id,
				this.btn_odds_2.name = this.capital_odds[2].id,
				this.btn_odds_3.name = this.capital_odds[3].id,
				this.btn_odds_4.name = this.capital_odds[4].id,
				this.btn_odds_5.name = this.capital_odds[5].id,
				this.btn_odds_6.name = this.capital_odds[6].id,
				this.btn_odds_7.name = this.capital_odds[7].id,
				this.btn_odds_8.name = this.capital_odds[8].id,
				this.btn_odds_9.name = this.capital_odds[9].id,
				this.btn_odds_10.name = this.capital_odds[10].id,
				this.btn_bet_array[this.capital_odds[0].id] = this.btn_odds_0,
				this.btn_bet_array[this.capital_odds[1].id] = this.btn_odds_1,
				this.btn_bet_array[this.capital_odds[2].id] = this.btn_odds_2,
				this.btn_bet_array[this.capital_odds[3].id] = this.btn_odds_3,
				this.btn_bet_array[this.capital_odds[4].id] = this.btn_odds_4,
				this.btn_bet_array[this.capital_odds[5].id] = this.btn_odds_5,
				this.btn_bet_array[this.capital_odds[6].id] = this.btn_odds_6,
				this.btn_bet_array[this.capital_odds[7].id] = this.btn_odds_7,
				this.btn_bet_array[this.capital_odds[8].id] = this.btn_odds_8,
				this.btn_bet_array[this.capital_odds[9].id] = this.btn_odds_9,
				this.btn_bet_array[this.capital_odds[10].id] = this.btn_odds_10,
				this.img_lose_array[0] = this.imgLose0,
				this.img_lose_array[1] = this.imgLose1,
				this.img_lose_array[2] = this.imgLose2,
				this.img_lose_array[3] = this.imgLose3,
				this.img_lose_array[4] = this.imgLose4,
				this.img_lose_array[5] = this.imgLose5,
				this.img_lose_array[6] = this.imgLose6,
				this.img_lose_array[7] = this.imgLose7,
				this.img_lose_array[8] = this.imgLose8,
				this.img_lose_array[9] = this.imgLose9,
				this.img_lose_array[10] = this.imgLose10;
				for (var t in this.btn_bet_array)
					this.btn_bet_array[t].addEventListener(egret.TouchEvent.TOUCH_TAP, this.bet, this);
				this.label_bet_total_amount_0.name = this.capital_odds[0].id,
				this.label_bet_total_amount_1.name = this.capital_odds[1].id,
				this.label_bet_total_amount_2.name = this.capital_odds[2].id,
				this.label_bet_total_amount_3.name = this.capital_odds[3].id,
				this.label_bet_total_amount_4.name = this.capital_odds[4].id,
				this.label_bet_total_amount_5.name = this.capital_odds[5].id,
				this.label_bet_total_amount_6.name = this.capital_odds[6].id,
				this.label_bet_total_amount_7.name = this.capital_odds[7].id,
				this.label_bet_total_amount_8.name = this.capital_odds[8].id,
				this.label_bet_total_amount_9.name = this.capital_odds[9].id,
				this.label_bet_total_amount_10.name = this.capital_odds[10].id,
				this.label_my_bet_0.name = this.capital_odds[0].id,
				this.label_my_bet_1.name = this.capital_odds[1].id,
				this.label_my_bet_2.name = this.capital_odds[2].id,
				this.label_my_bet_3.name = this.capital_odds[3].id,
				this.label_my_bet_4.name = this.capital_odds[4].id,
				this.label_my_bet_5.name = this.capital_odds[5].id,
				this.label_my_bet_6.name = this.capital_odds[6].id,
				this.label_my_bet_7.name = this.capital_odds[7].id,
				this.label_my_bet_8.name = this.capital_odds[8].id,
				this.label_my_bet_9.name = this.capital_odds[9].id,
				this.label_my_bet_10.name = this.capital_odds[10].id,
				this.label_odds_0.text = "x" + parseFloat(this.capital_odds[0].odds),
				this.label_odds_1.text = "x" + parseFloat(this.capital_odds[1].odds),
				this.label_odds_2.text = "x" + parseFloat(this.capital_odds[2].odds),
				this.label_odds_3.text = "x" + parseFloat(this.capital_odds[3].odds),
				this.label_odds_4.text = "x" + parseFloat(this.capital_odds[4].odds),
				this.label_odds_5.text = "x" + parseFloat(this.capital_odds[5].odds),
				this.label_odds_6.text = "x" + parseFloat(this.capital_odds[6].odds),
				this.label_odds_7.text = "x" + parseFloat(this.capital_odds[7].odds),
				this.label_odds_8.text = "x" + parseFloat(this.capital_odds[8].odds),
				this.label_odds_9.text = "x" + parseFloat(this.capital_odds[9].odds),
				this.label_odds_10.text = "x" + parseFloat(this.capital_odds[10].odds),
				this.label_interval_3.text = this.capital_odds[3].display,
				this.label_interval_4.text = this.capital_odds[4].display,
				this.label_interval_5.text = this.capital_odds[5].display,
				this.label_interval_6.text = this.capital_odds[6].display,
				this.label_interval_7.text = this.capital_odds[7].display,
				this.label_interval_8.text = this.capital_odds[8].display,
				this.label_interval_9.text = this.capital_odds[9].display,
				this.label_interval_10.text = this.capital_odds[10].display,
				"XAUUSD" == this.capital ? (this.label_interval_3.size = 18,
				this.label_interval_4.size = 18,
				this.label_interval_5.size = 18,
				this.label_interval_6.size = 18,
				this.label_interval_7.size = 18,
				this.label_interval_8.size = 18,
				this.label_interval_9.size = 18,
				this.label_interval_10.size = 18) : "EURUSD" == this.capital || "GBPUSD" == this.capital ? (this.label_interval_3.size = 18,
				this.label_interval_4.size = 18,
				this.label_interval_5.size = 18,
				this.label_interval_6.size = 18,
				this.label_interval_7.size = 18,
				this.label_interval_8.size = 18,
				this.label_interval_9.size = 18,
				this.label_interval_10.size = 18) : "BTCCNY" == this.capital ? (this.label_interval_3.size = 18,
				this.label_interval_4.size = 18,
				this.label_interval_5.size = 18,
				this.label_interval_6.size = 18,
				this.label_interval_7.size = 18,
				this.label_interval_8.size = 18,
				this.label_interval_9.size = 18,
				this.label_interval_10.size = 18) : (this.label_interval_3.size = 18,
				this.label_interval_4.size = 18,
				this.label_interval_5.size = 18,
				this.label_interval_6.size = 18,
				this.label_interval_7.size = 18,
				this.label_interval_8.size = 18,
				this.label_interval_9.size = 18,
				this.label_interval_10.size = 18)
			}
		}
		,
		i.prototype.startBet = function(t) {
			t.icon_game_title.source = RES.getRes("icon_begin_bet_png"),
			t.can_bet = !0,
			t.auto_bet || t.enableBetBtn()
		}
		,
		i.prototype.stopBet = function(t) {
			t.icon_game_title.source = RES.getRes("icon_wating_settle_png"),
			t.can_bet = !1,
			t.disabledBetBtn()
		}
		,
		i.prototype.disabledBetBtn = function() {
			for (var t in this.btn_bet_array)
				this.btn_bet_array[t].enabled = !1
		}
		,
		i.prototype.enableBetBtn = function() {
			for (var t in this.btn_bet_array)
				this.btn_bet_array[t].enabled = !0
		}
		,
		i.prototype.initBetTotalAmount = function(t) {
			for (var e in this.lb_bet_total_amount_array)
				this.lb_bet_total_amount_array[e].text = "0";
			for (var i in this.bet_total_amount_array)
				this.bet_total_amount_array[i] = 0;
			if (this.totalBetAmount = 0,
			null != t)
				for (var n = 0; n < t.length; n++) {
					var a = t[n];
					this.bet_total_amount_array[a.capital_odds_id] = parseFloat(this.bet_total_amount_array[a.capital_odds_id]) + parseFloat(a.total_amount),
					this.lb_bet_total_amount_array[a.capital_odds_id].text = Utils.moneyFormat(this.bet_total_amount_array[a.capital_odds_id], 2),
					this.totalBetAmount += parseFloat(a.total_amount)
				}
			this._klineMasterBar.updateTotalBetAmount(this.totalBetAmount)
		}
		,
		i.prototype.updateBetTotalAmount = function(t) {
			if (null != t && t.length > 0) {
				this.totalBetAmount = 0;
				for (var e in t) {
					var i = t[e].id
					  , n = t[e].amount;
					this.totalBetAmount = this.totalBetAmount + parseFloat(n),
					this.bet_total_amount_array[i] = parseFloat(n),
					null != this.lb_bet_total_amount_array[i] && (this.lb_bet_total_amount_array[i].text = Utils.moneyFormat(this.bet_total_amount_array[i], 2))
				}
				this._klineMasterBar.updateTotalBetAmount(this.totalBetAmount)
			}
		}
		,
		i.prototype.updateBetTotalAmountForSelf = function(t, e) {
			this.bet_total_amount_array[t] = parseFloat(this.bet_total_amount_array[t]) + parseFloat(e),
			null != this.lb_bet_total_amount_array[t] && (this.lb_bet_total_amount_array[t].text = Utils.moneyFormat(this.bet_total_amount_array[t], 2))
		}
		,
		i.prototype.initMyBetAmount = function() {
			for (var t in this.lb_my_bet_amount_array)
				this.lb_my_bet_amount_array[t].text = "0";
			for (var e in this.my_bet_amount_array)
				this.my_bet_amount_array[e] = 0
		}
		,
		i.prototype.updateMyBetAmount = function(t, e) {
			this.my_bet_amount_array[t] = parseFloat(this.my_bet_amount_array[t]) + parseFloat(e),
			this.lb_my_bet_amount_array[t].text = Utils.moneyFormat(this.my_bet_amount_array[t], 2),
			!this.current_round_first_bet || this.auto_bet || this.repeat_bet || (this.bet_record = null,
			this.bet_record = Array(),
			this.current_round_first_bet = !1),
			this.bet_record[t] = this.my_bet_amount_array[t]
		}
		,
		i.prototype.updateBanker = function() {
			null != this.current_banker ? (void 0 == this.current_banker.avatar_url || null == this.current_banker.avatar_url || "" == this.current_banker.avatar_url ? this.banker_avatar.source = RES.getRes("person_png") : this.loadBankerImage(this.current_banker.avatar_url),
			this.banker_name.text = this.current_banker.name,
			this.banker_balance.text = Utils.moneyFormat(this.current_banker.banker_balance, 2).toString(),
			this.banker_round_remain.text = (this.BANKER_TIMES - this.current_banker.times).toString()) : (this.banker_name.text = "",
			this.banker_balance.text = "",
			this.banker_round_remain.text = "0",
			this.banker_avatar.bitmapData = null)
		}
		,
		i.prototype.updateBankerQueue = function() {
			this.list_banker_queue.dataProvider = new eui.ArrayCollection(this.banker_queue_data),
			this.list_banker_queue.validateNow()
		}
		,
		i.prototype.loadBankerImage = function(t) {
			var e = new egret.ImageLoader;
			e.addEventListener(egret.Event.COMPLETE, this.bankerImageLoadCompleteHandler, this),
			e.load(t)
		}
		,
		i.prototype.bankerImageLoadCompleteHandler = function(t) {
			var e = t.currentTarget;
			this.banker_avatar.bitmapData = e.data
		}
		,
		i.prototype.getBankers = function() {
			this.game_socket && this.game_socket.request(CONST.GameCommand.get_banker, {
				user_id: this.user_id,
				game_room_id: this.room_id
			})
		}
		,
		i.prototype.applyBanker = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1);
			var e = new eui.ArrayCollection;
			e.addItem({
				key: "game_room_id",
				value: this.room_id
			}),
			e.addItem({
				key: "round_id",
				value: this.round_id
			}),
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "trade/applyBanker", e, this.onApplyBankerComplete, this.onApplyBankerIOError, this.onApplyBankerProgress, this)
		}
		,
		i.prototype.onApplyBankerComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_APPLY_BANKER_SUCCESS) {
				if (this.btn_apply_banker.visible = !1,
				this.btn_off_banker.visible = !0,
				this.cancelAutoBet(),
				"banker" == n.message)
					var a = [{
						text: "上庄成功!",
						style: {
							textColor: 16777215,
							size: 50
						}
					}]
					  , s = [{
						text: "提示：",
						style: {
							textColor: 16777215,
							size: 28
						}
					}, {
						text: "按携带金币数量排序，金币最多者选为本期庄家",
						style: {
							textColor: 16597776,
							size: 28
						}
					}];
				else if ("51" == n.message)
					var a = [{
						text: "申请成功!\n",
						style: {
							textColor: 16777215,
							size: 50
						}
					}, {
						text: "(排序 >50 )",
						style: {
							textColor: 16597776,
							size: 28
						}
					}]
					  , s = [{
						text: "提示：",
						style: {
							textColor: 16777215,
							size: 28
						}
					}, {
						text: "按携带金币数量排序，金币最多者选为本期庄家",
						style: {
							textColor: 16597776,
							size: 28
						}
					}];
				else
					var a = [{
						text: "申请成功!\n",
						style: {
							textColor: 16777215,
							size: 50
						}
					}, {
						text: "(排序 " + n.message + " )",
						style: {
							textColor: 16597776,
							size: 28
						}
					}]
					  , s = [{
						text: "提示：",
						style: {
							textColor: 16777215,
							size: 28
						}
					}, {
						text: "按携带金币数量排序，金币最多者选为本期庄家",
						style: {
							textColor: 16597776,
							size: 28
						}
					}];
				var o = new eui.Group;
				o.name = "childGroupTips",
				o.width = 520,
				o.height = 240,
				o.x = 75,
				o.y = 120;
				var r = new eui.Label
				  , l = new eui.Label;
				r.width = o.width,
				r.textAlign = egret.HorizontalAlign.CENTER,
				r.textFlow = a,
				l.width = o.width,
				l.textAlign = egret.HorizontalAlign.LEFT,
				l.multiline = !0,
				l.lineSpacing = 8,
				l.textFlow = s,
				r.y = (o.height - r.height - l.height) / 2,
				l.height > 0 && (r.y = r.y - 15),
				l.y = r.y + 30 + r.height,
				console.log(o.height, r.height, l.height, r.y, l.y),
				o.addChild(r),
				o.addChild(l),
				this.showTip(o, "")
			} else {
				if (403 == n.type)
					return this.destoryAll(),
					void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				if (n.type == MessageCode.CODE_LESS_THAN_BANKER_MIN_AMOUNT)
					return void (this.groupBankerTip.visible = !0);
				var h = n.message
				  , a = [{
					text: "上庄失败!\n",
					style: {
						textColor: 16777215,
						size: 50
					}
				}, {
					text: "(" + h + ")",
					style: {
						textColor: 16597776,
						size: 28
					}
				}]
				  , s = []
				  , o = new eui.Group;
				o.name = "childGroupTips",
				o.width = 520,
				o.height = 240,
				o.x = 75,
				o.y = 120;
				var r = new eui.Label
				  , l = new eui.Label;
				r.width = o.width,
				r.textAlign = egret.HorizontalAlign.CENTER,
				r.textFlow = a,
				l.width = o.width,
				l.textAlign = egret.HorizontalAlign.LEFT,
				l.multiline = !0,
				l.lineSpacing = 8,
				l.textFlow = s,
				r.y = (o.height - r.height - l.height) / 2,
				l.height > 0 && (r.y = r.y - 15),
				l.y = r.y + 30 + r.height,
				console.log(o.height, r.height, l.height, r.y, l.y),
				o.addChild(r),
				o.addChild(l),
				this.showTip(o, "")
			}
		}
		,
		i.prototype.onApplyBankerIOError = function(t) {
			this.closeLoading(this),
			Toast.launch("网络异常,请检查您的网络设置.", -100)
		}
		,
		i.prototype.onApplyBankerProgress = function(t) {}
		,
		i.prototype.offBanker = function() {
			if (t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
			this.can_bet) {
				var e = [{
					text: "下庄失败!",
					style: {
						textColor: 16777215,
						size: 50
					}
				}]
				  , i = [{
					text: "提示：",
					style: {
						textColor: 16777215,
						size: 28
					}
				}, {
					text: "下注期间不能下庄，请在结算时间申请下庄，结算结束自动下庄。",
					style: {
						textColor: 16597776,
						size: 28
					}
				}]
				  , n = new eui.Group;
				n.name = "childGroupTips",
				n.width = 520,
				n.height = 240,
				n.x = 75,
				n.y = 120;
				var a = new eui.Label
				  , s = new eui.Label;
				return a.width = n.width,
				a.textAlign = egret.HorizontalAlign.CENTER,
				a.textFlow = e,
				s.width = n.width,
				s.textAlign = egret.HorizontalAlign.LEFT,
				s.multiline = !0,
				s.lineSpacing = 8,
				s.textFlow = i,
				a.y = (n.height - a.height - s.height) / 2,
				s.height > 0 && (a.y = a.y - 15),
				s.y = a.y + 30 + a.height,
				console.log(n.height, a.height, s.height, a.y, s.y),
				n.addChild(a),
				n.addChild(s),
				void this.showTip(n, "")
			}
			var o = new eui.ArrayCollection;
			o.addItem({
				key: "round_id",
				value: this.round_id
			}),
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "trade/offBanker", o, this.onOffBankerComplete, this.onOffBankerIOError, this.onOffBankerProgress, this)
		}
		,
		i.prototype.onOffBankerComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type != MessageCode.CODE_OFF_BANKER_SUCCESS) {
				if (403 == n.type)
					return this.destoryAll(),
					void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				var a = n.message
				  , s = [{
					text: "下庄失败!\n",
					style: {
						textColor: 16777215,
						size: 50
					}
				}, {
					text: "(" + a + ")",
					style: {
						textColor: 16597776,
						size: 28
					}
				}]
				  , o = []
				  , r = new eui.Group;
				r.name = "childGroupTips",
				r.width = 520,
				r.height = 240,
				r.x = 75,
				r.y = 120;
				var l = new eui.Label
				  , h = new eui.Label;
				return l.width = r.width,
				l.textAlign = egret.HorizontalAlign.CENTER,
				l.textFlow = s,
				h.width = r.width,
				h.textAlign = egret.HorizontalAlign.LEFT,
				h.multiline = !0,
				h.lineSpacing = 8,
				h.textFlow = o,
				l.y = (r.height - l.height - h.height) / 2,
				h.height > 0 && (l.y = l.y - 15),
				h.y = l.y + 30 + l.height,
				console.log(r.height, l.height, h.height, l.y, h.y),
				r.addChild(l),
				r.addChild(h),
				void this.showTip(r, "")
			}
			this.btn_apply_banker.visible = !0,
			this.btn_off_banker.visible = !1;
			var s = [{
				text: "下庄成功!\n",
				style: {
					textColor: 16777215,
					size: 50
				}
			}, {
				text: "(您已离开排庄队列)",
				style: {
					textColor: 16597776,
					size: 28
				}
			}]
			  , o = []
			  , r = new eui.Group;
			r.name = "childGroupTips",
			r.width = 520,
			r.height = 240,
			r.x = 75,
			r.y = 120;
			var l = new eui.Label
			  , h = new eui.Label;
			l.width = r.width,
			l.textAlign = egret.HorizontalAlign.CENTER,
			l.textFlow = s,
			h.width = r.width,
			h.textAlign = egret.HorizontalAlign.LEFT,
			h.multiline = !0,
			h.lineSpacing = 8,
			h.textFlow = o,
			l.y = (r.height - l.height - h.height) / 2,
			h.height > 0 && (l.y = l.y - 15),
			h.y = l.y + 30 + l.height,
			console.log(r.height, l.height, h.height, l.y, h.y),
			r.addChild(l),
			r.addChild(h),
			this.showTip(r, "")
		}
		,
		i.prototype.onOffBankerIOError = function(t) {
			this.closeLoading(this),
			Toast.launch("网络异常,请检查您的网络设置.", -100)
		}
		,
		i.prototype.onOffBankerProgress = function(t) {}
		,
		i.prototype.offBankerQueue = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1);
			var e = new eui.ArrayCollection;
			e.addItem({
				key: "game_room_id",
				value: this.room_id
			}),
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "trade/offBankerQueue", e, this.onoffBankerQueueComplete, this.onoffBankerQueueIOError, this.onoffBankerQueueProgress, this)
		}
		,
		i.prototype.onoffBankerQueueComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_OFF_BANKER_QUEUE_SUCCESS) {
				this.btn_apply_banker.visible = !0,
				this.btn_off_banker.visible = !1,
				this.is_banker = !1,
				this.lb_queue_order_title.visible = !1,
				this.lb_queue_order.visible = !1;
				var a = [{
					text: "下庄成功!\n",
					style: {
						textColor: 16777215,
						size: 50
					}
				}, {
					text: "(您已离开排庄队列)",
					style: {
						textColor: 16597776,
						size: 28
					}
				}]
				  , s = []
				  , o = new eui.Group;
				o.name = "childGroupTips",
				o.width = 520,
				o.height = 240,
				o.x = 75,
				o.y = 120;
				var r = new eui.Label
				  , l = new eui.Label;
				r.width = o.width,
				r.textAlign = egret.HorizontalAlign.CENTER,
				r.textFlow = a,
				l.width = o.width,
				l.textAlign = egret.HorizontalAlign.LEFT,
				l.multiline = !0,
				l.lineSpacing = 8,
				l.textFlow = s,
				r.y = (o.height - r.height - l.height) / 2,
				l.height > 0 && (r.y = r.y - 15),
				l.y = r.y + 30 + r.height,
				console.log(o.height, r.height, l.height, r.y, l.y),
				o.addChild(r),
				o.addChild(l),
				this.showTip(o, "")
			} else {
				if (403 == n.type)
					return this.destoryAll(),
					void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				var h = n.message
				  , a = [{
					text: "下庄失败!\n",
					style: {
						textColor: 16777215,
						size: 50
					}
				}, {
					text: "(" + h + ")",
					style: {
						textColor: 16597776,
						size: 28
					}
				}]
				  , s = []
				  , o = new eui.Group;
				o.name = "childGroupTips",
				o.width = 520,
				o.height = 240,
				o.x = 75,
				o.y = 120;
				var r = new eui.Label
				  , l = new eui.Label;
				r.width = o.width,
				r.textAlign = egret.HorizontalAlign.CENTER,
				r.textFlow = a,
				l.width = o.width,
				l.textAlign = egret.HorizontalAlign.LEFT,
				l.multiline = !0,
				l.lineSpacing = 8,
				l.textFlow = s,
				r.y = (o.height - r.height - l.height) / 2,
				l.height > 0 && (r.y = r.y - 15),
				l.y = r.y + 30 + r.height,
				console.log(o.height, r.height, l.height, r.y, l.y),
				o.addChild(r),
				o.addChild(l),
				this.showTip(o, "")
			}
		}
		,
		i.prototype.onoffBankerQueueIOError = function(t) {
			this.closeLoading(this),
			Toast.launch("网络异常,请检查您的网络设置.", -100)
		}
		,
		i.prototype.onoffBankerQueueProgress = function(t) {}
		,
		i.prototype.getLatestRoundDetail = function() {
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "game_room_id",
				value: this.room_id
			})
			this.gameRoundReady = !1,
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "round/getLatestRoundDetail", t, this.onGetLatestRoundDetailComplete, this.onGetLatestRoundDetailIOError, this.onGetLatestRoundDetailProgress, this)
		}
		,
		i.prototype.onGetLatestRoundDetailComplete = function(e) {
			this.gameRoundReady = !0;
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_ROUND_FOUND) {
				n = n.results;
				var a = n.round
				  , s = n.banker_trade_detail
				  , o = n.my_trade
				  , r = n.online_num;
				if (null != r && this.updateOnlineNum(r),
				null != a && (this.round_id = a.id,
				this.start_time = a.start_time,
				this.end_time = a.end_time,
				this.server_time = n.server_time,
				this.updateTimer(this, null, null)),
				this.initBetTotalAmount(s),
				this.initMyBetAmount(),
				null != o)
					for (var l in o) {
						var h = o[l].capital_odds_id
						  , d = o[l].trade_amount;
						this.my_bet_amount_array[h] = parseFloat(this.my_bet_amount_array[h]) + parseFloat(d),
						this.lb_my_bet_amount_array[h].text = Utils.moneyFormat(this.my_bet_amount_array[h], 2)
					}
			} else {
				if (403 == n.type)
					return this.destoryAll(),
					void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				var _ = this;
				this.closeStatus || setTimeout(function() {
					_.getLatestRoundDetail()
				}, 2e3, _)
			}
		}
		,
		i.prototype.onGetLatestRoundDetailIOError = function(t) {
			this.gameRoundReady = !0
		}
		,
		i.prototype.onGetLatestRoundDetailProgress = function(t) {}
		,
		i.prototype.getCapitalOddsList = function() {
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "game_model_type",
				value: this.game_model_type
			})
			t.addItem({
				key: "capital_key",
				value: this.capital
			})
			t.addItem({
				key: "game_model_type",
				value: 2
			})
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "trade/getCapitalOdds", t, this.onGetCapitalOddsListComplete, this.onGetCapitalOddsListIOError, this.onGetCapitalOddsListProgress, this)
		}
		,
		i.prototype.onGetCapitalOddsListComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_CAPITAL_ODDS_FOUND)
				this.capital_odds = n.results,
				this.initIntervalOdds(),
				this.initKline();
			else {
				if (403 == n.type)
					return this.destoryAll(),
					void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				var a = n.message;
				Toast.launch(a, -100)
			}
		}
		,
		i.prototype.onGetCapitalOddsListIOError = function(t) {}
		,
		i.prototype.onGetCapitalOddsListProgress = function(t) {}
		,
		i.prototype.getUserTaskNum = function() {
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "type",
				value: 5
			})
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "user/task/checknum", t, this.onGetUserTaskNumComplete, this.onGetUserTaskNumIOError, this.onGetUserTaskNumProgress, this)
		}
		,
		i.prototype.onGetUserTaskNumComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_GET_REWARD_SUCCESS) {
				if (parseInt(n.results) > 0) {
					this.stopCheckBalance();
					var a = this
					  , s = {
						closeCallback: function(t) {
							1 == t ? setTimeout(function() {}, 200) : a.destoryAll()
						}
					};
					t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_USER_TASK, s)
				}
			} else {
				if (403 == n.type)
					return this.destoryAll(),
					void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				var o = n.message;
				Toast.launch(o, -100)
			}
		}
		,
		i.prototype.onGetUserTaskNumIOError = function(t) {}
		,
		i.prototype.onGetUserTaskNumProgress = function(t) {}
		,
		i.prototype.checkTradeData = function(e) {
			return this.can_bet ? this.gold_balance < this.bet_amount ? (this.cancelAutoBet(),
			t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_FIRST_TOPUP),
			Toast.launch("余额不足", -100),
			!1) : null == this.round_id || "" == this.round_id ? (Toast.launch("未找到最新回合,请等待最新回合", -100),
			this.cancelAutoBet(),
			!1) : null == e || "" == e ? (Toast.launch("未找到该赔率", -100),
			!1) : null == this.current_banker ? (this.cancelAutoBet(),
			Toast.launch("没有庄家", -100),
			!1) : !0 : (Toast.launch("停止下注", -100),
			!1)
		}
		,
		i.prototype.getMessageList = function() {
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "user/getUserNotice", null, this.onGetMessageComplete, this.onGetMessageIOError, this.onGetMessageProgress, this)
		}
		,
		i.prototype.onGetMessageComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_GET_MESSAGE_SUCCESS)
				for (var a = n.results, s = a.length - 1; s >= 0; s--) {
					var o = a[s];
					Main.noticeList.push({
						user_id: o.user_id,
						message: o.message,
						name: o.name,
						type: o.type,
						is_show: !1
					})
				}
			else if (403 == n.type)
				this.destoryAll(),
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			else {
				n.message
			}
		}
		,
		i.prototype.onGetMessageIOError = function(t) {}
		,
		i.prototype.onGetMessageProgress = function(t) {}
		,
		i.prototype.bet = function(e) {
			var i = e.currentTarget.name;
			this.checkTradeData(i) ? (t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().bet_sound_ready && t.SceneTrade.getInstance().bet_sound.play(0, 1),
			this.trade(this.bet_amount, i)) : t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().disabled_bet_sound_ready && t.SceneTrade.getInstance().disabled_bet_sound.play(0, 1)
		}
		,
		i.prototype.repeatBet = function(e) {
			if (e.current_round_first_bet)
				for (var i in e.bet_record) {
					var n = i
					  , a = e.bet_record[i];
					if (a > e.gold_balance)
						return e.cancelAutoBet(),
						t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_SHOP),
						Toast.launch("余额不足", -100),
						!1;
					a > 0 && e.trade(a, n)
				}
		}
		,
		i.prototype.trade = function(t, e) {
			this.checkTradeData(e) && this.game_socket && (console.log(),
			this.game_socket.request(CONST.GameCommand.create_trade, {
				token: this.user_info.access_token,
				user_id: this.user_id,
				round_id: this.round_id,
				trade_amount: t,
				banker_id: this.current_banker.id,
				capital_odds_id: e,
				game_model_type: this.game_model_type
			}))
		}
		,
		i.prototype.getEwallet = function() {
			this.game_socket && this.game_socket.request(CONST.GameCommand.get_ewallet, {
				user_id: this.user_id,
				ewallet_type: "G"
			})
		}
		,
		i.prototype.updateBalance = function(t) {
			this.label_my_balance.text = parseFloat(parseFloat(t).toFixed(0)).toString(),
			this.gold_balance = t
		}
		,
		i.prototype.showShop = function(e) {
			t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_SHOP, e)
		}
		,
		i.prototype.updateTimer = function(e, i, n) {
			null == i && (i = e.server_time);
			var a = 1e3 * e.start_time
			  , s = 1e3 * e.end_time;
			if ("" != i) {
				null !== e.timer && void 0 !== e.timer && clearInterval(e.timer);
				var o = (new Date).getTime()
				  , r = i - o
				  , l = 0;
				if (a > i && null == n ? (e.startBet(e),
				l = a - i,
				e._klineMasterBar.removeSettleGroup()) : s >= i ? (e.stopBet(e),
				l = s - i,
				e._klineMasterBar.removeTradeGroup(e.capital)) : l = 0,
				l = Math.round(l / 1e3),
				l > 0) {
					var o = (new Date).getTime() + r;
					e._klineMasterBar.setTime(o),
					e.timer_label.text = l.toString(),
					e._klineMasterBar.updateTimeLabel(l.toString()),
					null !== e.timer && void 0 !== e.timer && clearInterval(e.timer),
					e.timer = setInterval(function() {
						o = (new Date).getTime() + r,
						e._klineMasterBar.setTime(o),
						l -= 1,
						l >= 0 && (e.timer_label.text = l.toString(),
						e._klineMasterBar.updateTimeLabel(l),
						e.can_bet ? e._klineMasterBar.drawLineTradeTimer(l) : e._klineMasterBar.drawLineInterval(l, !1)),
						3 == l && null == n && 1 == e.can_bet && e.showTimeDownNotice(e),
						10 >= l && l >= 0 && 0 == e.can_bet && e.playNoticeSound && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().count_down_10_sound_ready && t.SceneTrade.getInstance().count_down_10_sound.play(0, 1),
						0 >= l && s - 5e3 > o && (e.updateTimer(e, o, 1),
						e.showStopBetNotice(e))
					}, 1e3)
				}
			}
		}
		,
		i.prototype.showTip = function(e, i) {
			var n = {
				group: e,
				params: "",
				cancelable: !0,
				callback: function(e) {
					setTimeout(function() {
						"Shop" == i && t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_SHOP)
					}, 200)
				}
			};
			t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_TIP, n)
		}
		,
		i.prototype.showEmergencyNotice = function(e, i) {
			var n = {
				title: e,
				content: i,
				cancelable: !0,
				callback: function(t) {}
			};
			t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_EMERGENCY_NOTICE, n)
		}
		,
		i.prototype.updateOnlineNum = function(t) {
			this._klineMasterBar.lb_online_num.text = t
		}
		,
		i.prototype.partAdded = function(i, n) {
			e.prototype.partAdded.call(this, i, n),
			n == this.list_banker_queue && (this.list_banker_queue.dataProvider = new eui.ArrayCollection(this.banker_queue_data),
			this.list_banker_queue.itemRenderer = t.BankerQueueItem)
		}
		,
		i.prototype.childrenCreated = function() {
			e.prototype.childrenCreated.call(this)
		}
		,
		i
	}(eui.Component);
	t.GameGrabUI = e,
	__reflect(e.prototype, "game.GameGrabUI", ["eui.UIComponent", "egret.DisplayObject"]);
	var i = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.skinName = "resource/ui/main/BankerQueueItem.exml",
			e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e
		}
		return __extends(e, t),
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			void 0 == this.data.user_avatar || null == this.data.user_avatar || "" == this.data.user_avatar ? this.user_avatar.source = RES.getRes("person_png") : this.loadBankerImage(this.data.user_avatar),
			this.vip_grade.source = RES.getRes("icon_vip_" + this.data.vip_grade + "_png"),
			this.balance.text = Utils.moneyFormat(this.data.balance, 2).toString(),
			this.user_name.text = this.data.user_name
		}
		,
		e.prototype.dataChanged = function() {
			null != this.balance && (void 0 == this.data.user_avatar || null == this.data.user_avatar || "" == this.data.user_avatar ? this.user_avatar.source = RES.getRes("person_png") : this.loadBankerImage(this.data.user_avatar),
			this.vip_grade.source = RES.getRes("icon_vip_" + this.data.vip_grade + "_png"),
			this.balance.text = Utils.moneyFormat(this.data.balance, 2).toString(),
			this.user_name.text = this.data.user_name)
		}
		,
		e.prototype.loadBankerImage = function(t) {
			var e = new egret.ImageLoader;
			e.addEventListener(egret.Event.COMPLETE, this.bankerImageLoadCompleteHandler, this),
			e.load(t)
		}
		,
		e.prototype.bankerImageLoadCompleteHandler = function(t) {
			var e = t.currentTarget;
			this.user_avatar.bitmapData = e.data
		}
		,
		e
	}(eui.ItemRenderer);
	t.BankerQueueItem = i,
	__reflect(i.prototype, "game.BankerQueueItem")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i() {
			var t = e.call(this) || this;
			return t.return_type = "",
			t.addEventListener(eui.UIEvent.COMPLETE, t.uiCompHandler, t),
			t.skinName = "resource/ui/main/HeaderBarSkin.exml",
			t
		}
		return __extends(i, e),
		i.getInstance = function(t) {
			return i._instance || t && (i._instance = new i),
			i._instance
		}
		,
		i.setInstance = function(t) {
			i._instance = t
		}
		,
		i.prototype.uiCompHandler = function() {
			var e = this;
			this.imgGoldPlus.addEventListener(egret.TouchEvent.TOUCH_TAP, this.showShop, this),
			this.loadUserInfo(),
			this.loadHeaderImage(),
			this.loadEwallet(),
			this.img_return.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().return_sound_ready && t.SceneTrade.getInstance().return_sound.play(0, 1),
				"home" == e.return_type || ("capital_list" == e.return_type ? t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_HOME) : "user_guide" == e.return_type && t.FooterBar.getInstance().goTo(t.FooterBar.getInstance().btns[0], !1))
			}, this)
		}
		,
		i.prototype.showShop = function(e) {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_SHOP, e.currentTarget.name)
		}
		,
		i.prototype.loadUserInfo = function() {
			var t = Utils.getStorageObj(Keys.FK_UserInfo);
			null != t && void 0 != t && "" != t ? (this.lbUserName.text = Utils.getLimitUserName(t.name, 12),
			this.img_vip.source = RES.getRes("icon_vip_" + t.vip_grade + "_png"),
			this.img_vip.x = this.lbUserName.x + this.lbUserName.width + 10,
			"" != t.avatar_url ? this.avatar_url = t.avatar_url : this.avatar_url = "") : this.avatar_url = ""
		}
		,
		i.prototype.loadHeaderImage = function() {
			var t = new egret.ImageLoader;
			if (t.addEventListener(egret.Event.COMPLETE, this.headerImageLoadCompleteHandler, this),
			null == this.avatar_url || void 0 == this.avatar_url || "" == this.avatar_url) {
				var e = new egret.Bitmap(RES.getRes("person_png"));
				this.showAvatar(e)
			} else
				t.load(this.avatar_url)
		}
		,
		i.prototype.headerImageLoadCompleteHandler = function(t) {
			var e = t.currentTarget
			  , i = new egret.Bitmap(e.data);
			this.showAvatar(i)
		}
		,
		i.prototype.showAvatar = function(t) {
			t.x = 17,
			t.y = 17,
			t.width = 100,
			t.height = 100,
			this.addChild(t);
			var e = new egret.Shape;
			e.graphics.beginFill(255),
			e.graphics.drawCircle(50, 50, 50),
			e.graphics.endFill(),
			e.x = 17,
			e.y = 17,
			this.addChild(e),
			t.mask = e;
			var i = new eui.Image;
			i.source = RES.getRes("userphoto_png"),
			i.width = 125,
			i.height = 124,
			i.x = 2,
			i.y = 9,
			this.addChild(i),
			i.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.openUserAccount, this),
			i.addEventListener(egret.TouchEvent.TOUCH_TAP, this.openUserAccount, this)
		}
		,
		i.prototype.openUserAccount = function() {
			t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_USER_ACCOUNT)
		}
		,
		i.prototype.loadEwallet = function() {
			debugger
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + API.balance, t, this.onGetEwalletComplete, this.onGetEwalletIOError, this.onGetEwalletProgress, this)
		}
		,
		Object.defineProperty(i.prototype, "goldNumber", {
			get: function() {
				var t = Utils.moneyFormatBack(this.lbGold.text);
				return t
			},
			set: function(t) {
				var e = Utils.moneyFormat(t, 2);
				this.lbGold.text = e.toString()
			},
			enumerable: !0,
			configurable: !0
		}),
		i.prototype.onGetEwalletComplete = function(e) {
			debugger
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1}
			 // debugger
			if (n.type == MessageCode.CODE_EWALLET_FOUND) {
				// 余额
				var s = n.results.balance
				this.updateBalance(s)
			} else if (403 == n.type)
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			else {
				n.message
			}
		}
		,
		i.prototype.onGetEwalletIOError = function(t) {}
		,
		i.prototype.onGetEwalletProgress = function(t) {}
		,
		i.prototype.updateBalance = function(t) {
			egret.Tween.get(this).to({
				goldNumber: t
			}, 1e3)
		}
		,
		i.prototype.partAdded = function(t, i) {
			e.prototype.partAdded.call(this, t, i)
		}
		,
		i.prototype.childrenCreated = function() {
			e.prototype.childrenCreated.call(this)
		}
		,
		i
	}(eui.Component);
	t.HeaderBar = e,
	__reflect(e.prototype, "game.HeaderBar", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i() {
			var t = e.call(this) || this;
			return t.count = 0,
			t.type = 1,
			t.addEventListener(eui.UIEvent.COMPLETE, t.uiCompHandler, t),
			t.skinName = "resource/ui/main/HeaderBarV2Skin.exml",
			t
		}
		return __extends(i, e),
		i.getInstance = function(t) {
			return this._instance || t && (this._instance = new i),
			this._instance
		}
		,
		i.prototype.uiCompHandler = function() {
			var e = this;
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			this.imgGoldPlus.addEventListener(egret.TouchEvent.TOUCH_TAP, this.showShop, this),
			this.img_topup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.showShop, this),
			this.img_return.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().return_sound_ready && t.SceneTrade.getInstance().return_sound.play(0, 1),
				t.SceneTrade.getInstance().stopGrabSound(),
				t.SceneTrade.getInstance().playBgSound(),
				1 == e.game_model_type ? t.AppFacade.getInstance().sendNotification(MainNotify.CLOSE_CLASSICAL) : 2 == e.game_model_type && t.AppFacade.getInstance().sendNotification(MainNotify.CLOSE_GRAB);
				var i = {
					reload: !0,
					game_model_type: e.game_model_type
				};
				t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_CAPITAL_LIST, i),
				t.HeaderBar.getInstance(!0).loadEwallet()
			}, this),
			this.imgCaiFuBang.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
				t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_MONEYRANK)
			}, this),
			this.imgTask.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
				t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_USER_TASK)
			}, this),
			this.imgLiShi.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
				t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_MY_SETTLE_HISTORY)
			}, this),
			this.loadUserInfo(),
			this.loadHeaderImage()
		}
		,
		i.prototype.showTopupAnimation = function() {
			this.addEventListener(egret.Event.ENTER_FRAME, this.topUpAnimation, this)
		}
		,
		i.prototype.topUpAnimation = function(t) {
			this.count <= 5 ? 1 == this.type ? this.img_topup.width < 97 && this.img_topup.width >= 83 ? (this.img_topup.width = this.img_topup.width + .7,
			this.img_topup.height = this.img_topup.height + .6) : this.type = 0 : 0 == this.type && (this.img_topup.width <= 98 && this.img_topup.width > 84 ? (this.img_topup.width = this.img_topup.width - .7,
			this.img_topup.height = this.img_topup.height - .6) : (this.count++,
			this.type = 1)) : (this.count = 0,
			this.type = 1,
			this.img_topup.width = 84,
			this.img_topup.height = 72,
			this.removeEventListener(egret.Event.ENTER_FRAME, this.topUpAnimation, this))
		}
		,
		i.prototype.showShop = function(e) {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_SHOP, "G")
		}
		,
		i.prototype.loadUserInfo = function() {
			var t = Utils.getStorageObj(Keys.FK_UserInfo);
			null != t && void 0 != t && "" != t ? (this.lbUserName.text = Utils.getLimitUserName(t.name, 12),
			this.imgVip.source = RES.getRes("icon_vip_" + t.vip_grade + "_png"),
			this.imgVip.x = this.lbUserName.x + this.lbUserName.width + 10,
			"" != t.avatar_url ? this.avatar_url = t.avatar_url : this.avatar_url = "") : this.avatar_url = ""
		}
		,
		i.prototype.loadHeaderImage = function() {
			var t = new egret.ImageLoader;
			if (t.addEventListener(egret.Event.COMPLETE, this.headerImageLoadCompleteHandler, this),
			null == this.avatar_url || void 0 == this.avatar_url || "" == this.avatar_url) {
				var e = new egret.Bitmap(RES.getRes("person_png"));
				this.showAvatar(e)
			} else
				t.load(this.avatar_url)
		}
		,
		i.prototype.headerImageLoadCompleteHandler = function(t) {
			var e = t.currentTarget
			  , i = new egret.Bitmap(e.data);
			this.showAvatar(i)
		}
		,
		i.prototype.showAvatar = function(t) {
			t.fillMode = egret.BitmapFillMode.SCALE,
			t.x = 10,
			t.y = 15,
			t.width = 80,
			t.height = 80,
			this.addChild(t);
			var e = new egret.Shape;
			e.graphics.beginFill(255),
			e.graphics.drawCircle(40, 40, 40),
			e.graphics.endFill(),
			e.x = 10,
			e.y = 15,
			this.addChild(e),
			t.mask = e;
			var i = new eui.Image;
			i.source = RES.getRes("userphoto_png"),
			i.width = 95,
			i.height = 95,
			i.x = 2,
			i.y = 11,
			this.addChild(i),
			i.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.openUserAccount, this),
			i.addEventListener(egret.TouchEvent.TOUCH_TAP, this.openUserAccount, this)
		}
		,
		i.prototype.openUserAccount = function() {
			t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_USER_ACCOUNT)
		}
		,
		i.prototype.loadEwallet = function() {
			var t = new eui.ArrayCollection
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			// "Y" == this.is_sim ? t.addItem({
			// 	key: "ewallet_type",
			// 	value: "S"
			// }) : t.addItem({
			// 	key: "ewallet_type",
			// 	value: "G"
			// }),
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + API.balance, t, this.onGetEwalletComplete, this.onGetEwalletIOError, this.onGetEwalletProgress, this)
		}
		,
		Object.defineProperty(i.prototype, "goldNumber", {
			get: function() {
				var t = Utils.moneyFormatBack(this.lbGold.text);
				return t
			},
			set: function(t) {
				var e = Utils.moneyFormat(t, 2);
				this.lbGold.text = e.toString()
			},
			enumerable: !0,
			configurable: !0
		}),
		i.prototype.onGetEwalletComplete = function(e) {
			debugger
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_EWALLET_FOUND) {
				var a = n.results
				  , s = a.balance;
				this.updateBalance(s)
			} else if (403 == n.type)
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			else {
				n.message
			}
		}
		,
		i.prototype.onGetEwalletIOError = function(t) {}
		,
		i.prototype.onGetEwalletProgress = function(t) {}
		,
		i.prototype.updateBalance = function(t) {
			egret.Tween.get(this).to({
				goldNumber: t
			}, 1e3)
		}
		,
		i.prototype.partAdded = function(t, i) {
			e.prototype.partAdded.call(this, t, i)
		}
		,
		i.prototype.childrenCreated = function() {
			e.prototype.childrenCreated.call(this),
			this.loadEwallet()
		}
		,
		i.prototype.getUserTaskNum = function() {
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "user/task/checknum", null, this.onGetUserTaskNumComplete, this.onGetUserTaskNumIOError, this.onGetUserTaskNumProgress, this)
		}
		,
		i.prototype.onGetUserTaskNumComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			n.results = 500
			if (n.type == MessageCode.CODE_GET_REWARD_SUCCESS)
				parseInt(n.results) > 0 ? this.drawTaskPoint(this.imgTask.x + 14, this.imgTask.y + 15) : this.groupBar2.getChildByName("task_point") && this.groupBar2.contains(this.getChildByName("task_point")) && this.groupBar2.removeChild(this.getChildByName("task_point"));
			else if (403 == n.type)
				return void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN)
		}
		,
		i.prototype.drawTaskPoint = function(t, e) {
			this.getChildByName("task_point") && this.groupBar2.contains(this.getChildByName("task_point")) && this.groupBar2.removeChild(this.getChildByName("task_point"));
			var i = new egret.Shape;
			i.graphics.lineStyle(2, 16777215),
			i.graphics.beginFill(13313558, 1),
			i.graphics.drawCircle(t, e, 10),
			i.graphics.endFill(),
			i.name = "task_point",
			this.groupBar2.addChild(i)
		}
		,
		i.prototype.onGetUserTaskNumIOError = function(t) {}
		,
		i.prototype.onGetUserTaskNumProgress = function(t) {}
		,
		i
	}(eui.Component);
	t.HeaderBarV2 = e,
	__reflect(e.prototype, "game.HeaderBarV2", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i() {
			var t = e.call(this) || this;
			return t.count = 0,
			t.type = 1,
			t.addEventListener(eui.UIEvent.COMPLETE, t.uiCompHandler, t),
			t.skinName = "resource/ui/main/HeaderBarV3Skin.exml",
			t
		}
		return __extends(i, e),
		i.getInstance = function(t) {
			return this._instance || t && (this._instance = new i),
			this._instance
		}
		,
		i.prototype.uiCompHandler = function() {
			var e = this;
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			this.img_change_sim.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeSim, this),
			this.imgGoldPlus.addEventListener(egret.TouchEvent.TOUCH_TAP, this.showShop, this),
			this.img_topup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.showShop, this),
			this.img_return.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().return_sound_ready && t.SceneTrade.getInstance().return_sound.play(0, 1),
				t.SceneTrade.getInstance().stopGrabSound(),
				t.SceneTrade.getInstance().playBgSound(),
				1 == e.game_model_type ? "Y" == e.is_sim ? t.AppFacade.getInstance().sendNotification(MainNotify.CLOSE_CLASSICAL_SIM) : t.AppFacade.getInstance().sendNotification(MainNotify.CLOSE_CLASSICAL) : 2 == e.game_model_type && t.AppFacade.getInstance().sendNotification(MainNotify.CLOSE_GRAB);
				var i = {
					reload: !0,
					game_model_type: e.game_model_type
				};
				t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_CAPITAL_LIST, i),
				t.HeaderBar.getInstance(!0).loadEwallet()
			}, this),
			this.img_withdraw.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
				t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_WITHDRAW)
			}, this),
			this.loadUserInfo(),
			this.loadHeaderImage()
		}
		,
		i.prototype.showTopupAnimation = function() {
			this.addEventListener(egret.Event.ENTER_FRAME, this.topUpAnimation, this)
		}
		,
		i.prototype.topUpAnimation = function(t) {
			this.count <= 5 ? 1 == this.type ? this.img_topup.width < 110 && this.img_topup.width >= 80 ? (this.img_topup.width = this.img_topup.width + 1,
			this.img_topup.height = this.img_topup.height + 1) : this.type = 0 : 0 == this.type && (this.img_topup.width <= 116 && this.img_topup.width > 91 ? (this.img_topup.width = this.img_topup.width - 1,
			this.img_topup.height = this.img_topup.height - 1) : (this.count++,
			this.type = 1)) : (this.count = 0,
			this.type = 1,
			this.img_topup.width = 105,
			this.img_topup.height = 91,
			this.removeEventListener(egret.Event.ENTER_FRAME, this.topUpAnimation, this))
		}
		,
		i.prototype.changeSim = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
			this.getRoomList()
		}
		,
		i.prototype.showShop = function(e) {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_SHOP, "G")
		}
		,
		i.prototype.loadUserInfo = function() {
			var t = Utils.getStorageObj(Keys.FK_UserInfo);
			null != t && void 0 != t && "" != t ? (this.lbUserName.text = Utils.getLimitUserName(t.name, 12),
			this.imgVip.source = RES.getRes("icon_vip_" + t.vip_grade + "_png"),
			this.imgVip.x = this.lbUserName.x + this.lbUserName.width + 10,
			"" != t.avatar_url ? this.avatar_url = t.avatar_url : this.avatar_url = "") : this.avatar_url = ""
		}
		,
		i.prototype.loadHeaderImage = function() {
			var t = new egret.ImageLoader;
			if (t.addEventListener(egret.Event.COMPLETE, this.headerImageLoadCompleteHandler, this),
			null == this.avatar_url || void 0 == this.avatar_url || "" == this.avatar_url) {
				var e = new egret.Bitmap(RES.getRes("person_png"));
				this.showAvatar(e)
			} else
				t.load(this.avatar_url)
		}
		,
		i.prototype.headerImageLoadCompleteHandler = function(t) {
			var e = t.currentTarget
			  , i = new egret.Bitmap(e.data);
			this.showAvatar(i)
		}
		,
		i.prototype.showAvatar = function(t) {
			t.fillMode = egret.BitmapFillMode.SCALE,
			t.x = 10,
			t.y = 15,
			t.width = 80,
			t.height = 80,
			this.addChild(t);
			var e = new egret.Shape;
			e.graphics.beginFill(255),
			e.graphics.drawCircle(40, 40, 40),
			e.graphics.endFill(),
			e.x = 10,
			e.y = 15,
			this.addChild(e),
			t.mask = e;
			var i = new eui.Image;
			i.source = RES.getRes("userphoto_png"),
			i.width = 95,
			i.height = 95,
			i.x = 2,
			i.y = 11,
			this.addChild(i),
			i.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.openUserAccount, this),
			i.addEventListener(egret.TouchEvent.TOUCH_TAP, this.openUserAccount, this)
		}
		,
		i.prototype.openUserAccount = function() {
			t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_USER_ACCOUNT)
		}
		,
		i.prototype.loadEwallet = function() {
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			// "Y" == this.is_sim ? t.addItem({
			// 	key: "ewallet_type",
			// 	value: "S"
			// }) : t.addItem({
			// 	key: "ewallet_type",
			// 	value: "G"
			// }),
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + API.balance, t, this.onGetEwalletComplete, this.onGetEwalletIOError, this.onGetEwalletProgress, this)
		}
		,
		Object.defineProperty(i.prototype, "goldNumber", {
			get: function() {
				var t = Utils.moneyFormatBack(this.lbGold.text);
				return t
			},
			set: function(t) {
				var e = Utils.moneyFormat(t, 2);
				this.lbGold.text = e.toString()
			},
			enumerable: !0,
			configurable: !0
		}),
		i.prototype.onGetEwalletComplete = function(e) {
			debugger
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_EWALLET_FOUND) {
				var a = n.results
				  , s = a.balance;
				this.updateBalance(s)
			} else if (403 == n.type)
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			else {
				n.message
			}
		}
		,
		i.prototype.onGetEwalletIOError = function(t) {}
		,
		i.prototype.onGetEwalletProgress = function(t) {}
		,
		i.prototype.updateBalance = function(t) {
			egret.Tween.get(this).to({
				goldNumber: t
			}, 1e3)
		}
		,
		i.prototype.partAdded = function(t, i) {
			e.prototype.partAdded.call(this, t, i)
		}
		,
		i.prototype.childrenCreated = function() {
			e.prototype.childrenCreated.call(this),
			this.loadEwallet()
		}
		,
		i.prototype.setIsSim = function(t) {
			this.is_sim = t,
			"Y" == this.is_sim ? this.img_change_sim.source = RES.getRes("icon_change_real_png") : this.img_change_sim.source = RES.getRes("icon_change_sim_png")
		}
		,
		i.prototype.getRoomList = function() {
			this.showLoading(this);
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "capital_key",
				value: this.capital
			})
			t.addItem({
				key: "game_model_type",
				value: this.game_model_type
			})
			// "N" == this.is_sim ? t.addItem({
			// 	key: "is_sim",
			// 	value: "Y"
			// }) : t.addItem({
			// 	key: "is_sim",
			// 	value: "N"
			// }),
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "game/game_room/get", t, this.onGetRoomListComplete, this.onGetRoomListIOError, this.onGetRoomListProgress, this)
		}
		,
		i.prototype.onGetRoomListComplete = function(e) {
			this.closeLoading(this);
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_GAME_ROOM_FOUND) {
				var a = n.results[0]
				  , s = Array();
				s.game_model_type = a.game_model_type,
				s.game_room_id = a.id,
				s.capital = a.capital_key,
				s.is_sim = a.is_sim,
				s.change_inform = !0,
				"Y" == a.is_sim ? (t.AppFacade.getInstance().sendNotification(MainNotify.CLOSE_CLASSICAL, s),
				t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_CLASSICAL_SIM, s)) : (t.AppFacade.getInstance().sendNotification(MainNotify.CLOSE_CLASSICAL_SIM, s),
				t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_CLASSICAL, s))
			} else {
				if (403 == n.type)
					return void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				n.message
			}
		}
		,
		i.prototype.onGetRoomListIOError = function(t) {
			this.closeLoading(this)
		}
		,
		i.prototype.onGetRoomListProgress = function(t) {}
		,
		i.prototype.showLoading = function(t) {
			if (null == t.loading_group) {
				t.loading_group = new eui.Group,
				t.loading_group.width = 719,
				t.loading_group.height = 1199,
				t.loading_group.verticalCenter = .5,
				t.loading_group.horizontalCenter = .5;
				var e = new egret.Sprite;
				e.graphics.clear(),
				e.graphics.beginFill(0, .6),
				e.graphics.drawRect(0, 0, GameConfig.curWidth(), GameConfig.curHeight()),
				e.graphics.endFill(),
				e.width = GameConfig.curWidth(),
				e.height = GameConfig.curHeight(),
				e.touchEnabled = !0,
				egret.Tween.get(e).to({
					alpha: 1
				}, 150),
				e.visible = !0,
				t.loading_group.addChild(e),
				null == t.loading_image && (t.loading_image = new eui.Image),
				t.loading_image.verticalCenter = .5,
				t.loading_image.horizontalCenter = .5,
				t.loading_image.source = RES.getRes("loading_run_png"),
				t.loading_image.anchorOffsetX = .5 * t.loading_image.width,
				t.loading_image.anchorOffsetY = .5 * t.loading_image.height,
				t.loading_group.addChild(t.loading_image)
			}
			GameLayerManager.gameLayer().effectLayer.contains(t.loading_group) || (GameLayerManager.gameLayer().effectLayer.addChild(t.loading_group),
			GameLayerManager.gameLayer().effectLayer.addEventListener(egret.Event.ENTER_FRAME, t.runLoading, t))
		}
		,
		i.prototype.runLoading = function(t) {
			this.loading_image.rotation += 3
		}
		,
		i.prototype.closeLoading = function(t) {
			GameLayerManager.gameLayer().mainLayer.$children.length > 1 && GameLayerManager.gameLayer().mainLayer.removeChildAt(1),
			GameLayerManager.gameLayer().effectLayer.contains(t.loading_group) && GameLayerManager.gameLayer().effectLayer.removeChild(t.loading_group),
			GameLayerManager.gameLayer().effectLayer.removeEventListener(egret.Event.ENTER_FRAME, t.runLoading, t)
		}
		,
		i
	}(eui.Component);
	t.HeaderBarV3 = e,
	__reflect(e.prototype, "game.HeaderBarV3", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i() {
			var t = e.call(this) || this;
			return t.type = 1,
			t.count = 0,
			t.closeStatus = !1,
			t.addEventListener(eui.UIEvent.COMPLETE, t.uiCompHandler, t),
			t.skinName = "resource/ui/main/HomePageSkin.exml",
			t
		}
		return __extends(i, e),
		i.getInstance = function() {
			return this._instance || (this._instance = new i),
			this._instance
		}
		,
		i.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			this.subInit()
		}
		,
		i.prototype.reOpen = function() {
			this.subInit(),
			this.closeStatus = !1
		}
		,
		i.prototype.subInit = function() {
			this.headerBar = t.HeaderBar.getInstance(!0),
			this.headerBar.return_type = "home",
			this.groupHeader.addChild(this.headerBar),
			this.footerBar = t.FooterBar.getInstance(),
			this.groupFooter.addChild(this.footerBar);
			var e = getM();
			("" == e || null == e) && this.getRegisterTask(),
			this.btnModel1.addEventListener(egret.TouchEvent.TOUCH_TAP, this.mbtnHandler1, this),
			this.btnModel2.addEventListener(egret.TouchEvent.TOUCH_TAP, this.mbtnHandler2, this),
			this.btnModel3.addEventListener(egret.TouchEvent.TOUCH_TAP, this.mbtnHandler3, this),
			this.imgInvite.addEventListener(egret.TouchEvent.TOUCH_TAP, this.goToInvite, this),
			this.imgCaiFuBang.addEventListener(egret.TouchEvent.TOUCH_TAP, this.openMoneyRank, this),
			this.imgRightShangCheng.addEventListener(egret.TouchEvent.TOUCH_TAP, this.showWithdraw, this),
			this.imgFirstTopup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.showFirstTopup, this),
			this.imgNewTask.addEventListener(egret.TouchEvent.TOUCH_TAP, this.goToNewUserTask, this),
			this.imgHomeShop.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_SHOP)
			}, this),
			this.imgRightSim.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				var e = Array();
				e.game_model_type = 1,
				e.game_room_id = 9,
				e.capital = "BTCCNY",
				e.is_sim = "Y",
				t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_CLASSICAL_SIM, e)
			}, this),
			this.addEventListener(egret.Event.ENTER_FRAME, this.btn3Animation, this)
		}
		,
		i.prototype.goToNewUserTask = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			t.SceneTrade.getInstance().stopBgSound(),
			t.SceneTrade.getInstance().playGrabSound(),
			t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_GRAB_GUIDE)
		}
		,
		i.prototype.showFirstTopup = function(e) {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_FIRST_TOPUP)
		}
		,
		i.prototype.showWithdraw = function(e) {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_WITHDRAW)
		}
		,
		i.prototype.openMoneyRank = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_MONEYRANK)
		}
		,
		i.prototype.mbtnHandler3 = function(e) {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
			t.SceneTrade.getInstance().playBgSound();
			var i = {
				reload: !1,
				game_model_type: 1
			};
			t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_CAPITAL_LIST, i)
		}
		,
		i.prototype.mbtnHandler1 = function(e) {
			var i = ""
			  , n = Utils.getStorageObj(Keys.FK_UserInfo);
			if (null == n || void 0 == n || "" == n)
				return this.destoryAll(),
				void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			var a = n.vip_grade;
			9 > a && (i = "VIP9级可进入竞技场");
			var s = [{
				text: i,
				style: {
					textColor: 16777215,
					size: 32
				}
			}]
			  , o = []
			  , r = new eui.Group;
			r.name = "childGroupTips",
			r.width = 520,
			r.height = 240,
			r.x = 75,
			r.y = 120;
			var l = new eui.Label
			  , h = new eui.Label;
			l.width = r.width,
			l.textAlign = egret.HorizontalAlign.CENTER,
			l.textFlow = s,
			h.width = r.width,
			h.textAlign = egret.HorizontalAlign.LEFT,
			h.multiline = !0,
			h.lineSpacing = 8,
			h.textFlow = o,
			l.y = (r.height - l.height - h.height - 5) / 2,
			h.height > 0 && (l.y = l.y - 15),
			l.height > 0 ? h.y = l.y + l.height : h.y = l.y + 30 + l.height,
			r.addChild(l),
			r.addChild(h),
			this.showTip(r, "")
		}
		,
		i.prototype.mbtnHandler2 = function(e) {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
			t.SceneTrade.getInstance().playBgSound();
			var i = ""
			  , n = Utils.getStorageObj(Keys.FK_UserInfo);
			if (null == n || void 0 == n || "" == n)
				return this.destoryAll(),
				void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			var a = n.vip_grade;
			if (!(6 > a)) {
				var s = {
					reload: !1,
					game_model_type: 2
				};
				return void t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_CAPITAL_LIST, s)
			}
			i = "VIP6级可进入抢庄竞猜";
			var o = [{
				text: i,
				style: {
					textColor: 16777215,
					size: 32
				}
			}]
			  , r = []
			  , l = new eui.Group;
			l.name = "childGroupTips",
			l.width = 520,
			l.height = 240,
			l.x = 75,
			l.y = 120;
			var h = new eui.Label
			  , d = new eui.Label;
			h.width = l.width,
			h.textAlign = egret.HorizontalAlign.CENTER,
			h.textFlow = o,
			d.width = l.width,
			d.textAlign = egret.HorizontalAlign.LEFT,
			d.multiline = !0,
			d.lineSpacing = 8,
			d.textFlow = r,
			h.y = (l.height - h.height - d.height - 5) / 2,
			d.height > 0 && (h.y = h.y - 15),
			h.height > 0 ? d.y = h.y + h.height : d.y = h.y + 30 + h.height,
			l.addChild(h),
			l.addChild(d),
			this.showTip(l, "")
		}
		,
		i.prototype.btn3Animation = function(t) {
			this.count <= 100 ? 1 == this.type ? this.btnModel3.width < 320 && this.btnModel3.width >= 289 ? (this.btnModel3.width = this.btnModel3.width + 1.6,
			this.btnModel3.height = this.btnModel3.height + 1.52) : this.type = 0 : 0 == this.type && (this.btnModel3.width <= 321 && this.btnModel3.width > 290 ? (this.btnModel3.width = this.btnModel3.width - 1.6,
			this.btnModel3.height = this.btnModel3.height - 1.52) : (this.count++,
			this.type = 1)) : (this.btnModel3.width = 290,
			this.btnModel3.height = 266,
			this.removeEventListener(egret.Event.ENTER_FRAME, this.btn3Animation, this))
		}
		,
		i.prototype.goToInvite = function() {
			t.FooterBar.getInstance().goTo(t.FooterBar.getInstance().btns[2], !1)
		}
		,
		i.prototype.goToMiji = function() {
			t.FooterBar.getInstance().goTo(t.FooterBar.getInstance().btns[1], !1)
		}
		,
		i.prototype.showAmountIncrease = function(e, i) {
			t.Fly.flyGold(45, 400, 380, 50, 1e3, 15, e, function() {}, 400, 10)
		}
		,
		i.prototype.getEwallet = function() {
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "ewallet_type",
				value: "G"
			})
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + API.balance, t, this.onGetEwalletComplete, this.onGetEwalletIOError, this.onGetEwalletProgress, this)
		}
		,
		i.prototype.onGetEwalletComplete = function(e) {
			debugger
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_EWALLET_FOUND) {
				var a = n.results
				  , s = a.balance
				  , o = {
					gold_amount: s
				};
				t.AppFacade.getInstance().sendNotification(MainNotify.UPDATE_HEADER_EWALLET, o)
			} else {
				if (403 == n.type)
					return void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				n.message
			}
		}
		,
		i.prototype.onGetEwalletIOError = function(t) {}
		,
		i.prototype.onGetEwalletProgress = function(t) {}
		,
		i.prototype.getAdv = function() {
			t.SceneTrade.is_new_user || HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "user/getAdv", null, this.onGetAdvComplete, this.onGetAdvIOError, this.onGetAdvProgress, this)
		}
		,
		i.prototype.onGetAdvComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			  n.results = [{
			  	show_qrcode: 'http://www.jimmy.com'
			  }]
			if (n.type == MessageCode.CODE_ADV_FOUND) {
				var a = n.results;
				if (null != a)
					if (a = a[0],
					a.show_qrcode && !t.SceneTrade.already_show_qrcode)
						this.openQRCode(),
						t.SceneTrade.already_show_qrcode = !0;
					else {
						var s = null
						  , o = Utils.getStorageObj(Keys.FK_ADV);
						null != o && (s = o.id),
						s != a.id && t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_FIRST_TOPUP),
						Utils.setStorageObj(Keys.FK_ADV, {
							id: a.id,
							always_show: a.always_show
						})
					}
			} else if (403 == n.type)
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			else {
				n.message;
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN)
			}
		}
		,
		i.prototype.onGetAdvIOError = function(t) {}
		,
		i.prototype.onGetAdvProgress = function(t) {}
		,
		i.prototype.getNewUserTask = function() {
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "type",
				value: 4
			})
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "user/task/checknum", t, this.onGetNewUserTaskComplete, this.onGetNewUserTaskIOError, this.onGetNewUserTaskProgress, this)
		}
		,
		i.prototype.onGetNewUserTaskComplete = function(t) {
			var e = t.currentTarget
			  , n = e.response? JSON.parse(e.response): {type: 1};
			if (i.status_code == MessageCode.CODE_GET_REWARD_SUCCESS)
				parseInt(i.results) > 0 ? this.imgNewTask.visible = !0 : this.imgNewTask.visible = !1;
			else if (403 == i.status_code)
				return
		}
		,
		i.prototype.onGetNewUserTaskIOError = function(t) {}
		,
		i.prototype.onGetNewUserTaskProgress = function(t) {}
		,
		i.prototype.getRegisterTask = function() {
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "type",
				value: 1
			})
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "user/task/checknum", t, this.onGetUserTaskNumComplete, this.onGetUserTaskNumIOError, this.onGetUserTaskNumProgress, this)
		}
		,
		i.prototype.onGetUserTaskNumComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_GET_REWARD_SUCCESS)
				if (parseInt(n.results) > 0) {
					t.SceneTrade.is_new_user = !0;
					var a = this
					  , s = {
						closeCallback: function(t) {
							setTimeout(function() {
								a.getAdv()
							}, 200)
						}
					};
					t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_REGISTER_REWARD, s)
				} else
					this.getAdv();
			else {
				if (403 == n.type)
					return;
				this.getAdv()
			}
		}
		,
		i.prototype.onGetUserTaskNumIOError = function(t) {}
		,
		i.prototype.onGetUserTaskNumProgress = function(t) {}
		,
		i.prototype.destoryAll = function() {
			null != this.groupFooter && (this.groupFooter.removeChildren(),
			this.groupHeader.removeChildren(),
			this.closeStatus = !0,
			this.btnModel1.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.mbtnHandler1, this),
			this.btnModel2.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.mbtnHandler2, this),
			this.btnModel3.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.mbtnHandler3, this),
			this.imgInvite.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.goToInvite, this),
			this.imgCaiFuBang.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.openMoneyRank, this),
			this.imgRightShangCheng.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.showWithdraw, this),
			this.imgFirstTopup.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.showFirstTopup, this),
			this.imgNewTask.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.goToNewUserTask, this),
			this.removeEventListener(egret.Event.ENTER_FRAME, this.btn3Animation, this))
		}
		,
		i.prototype.showTip = function(e, i) {
			var n = {
				group: e,
				params: "",
				cancelable: !0,
				callback: function(e) {
					setTimeout(function() {
						"Shop" == i && t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_SHOP)
					}, 200)
				}
			};
			t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_TIP, n)
		}
		,
		i.prototype.partAdded = function(t, i) {
			e.prototype.partAdded.call(this, t, i)
		}
		,
		i.prototype.childrenCreated = function() {
			e.prototype.childrenCreated.call(this),
			this.checkEnterPage()
		}
		,
		i.prototype.openQRCode = function() {
			var t = {
				qrcode_type: "home",
				qrcode_url: "../public/assets/img/home_qrcode.png",
				qrcode_action: "",
				qrcode_title: ""
			};
			showQRCodeImg(t)
		}
		,
		i.prototype.checkEnterPage = function() {
			var e = getM();
			if (null != e && "" != e) {
				if (clearM(),
				"miji" == e)
					return void this.goToMiji();
				if ("jingji" == e)
					return void this.goToInvite();
				if ("topup" == e)
					return void t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_SHOP);
				if ("withdraw" == e)
					return void t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_WITHDRAW);
				if ("newuser" == e)
					return t.SceneTrade.getInstance().stopBgSound(),
					t.SceneTrade.getInstance().playGrabSound(),
					void t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_GRAB_GUIDE)
			}
		}
		,
		i
	}(eui.Component);
	t.HomePage = e,
	__reflect(e.prototype, "game.HomePage", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i() {
			var t = e.call(this) || this;
			return t.balance = 0,
			t.qrcode_url = "",
			t.type = 1,
			t.count = 0,
			t.closeStatus = !1,
			t.addEventListener(eui.UIEvent.COMPLETE, t.uiCompHandler, t),
			t.skinName = "resource/ui/main/InviteUISkin.exml",
			t
		}
		return __extends(i, e),
		i.getInstance = function() {
			return this._instance || (this._instance = new i),
			this._instance
		}
		,
		i.prototype.uiCompHandler = function(t) {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			this.subInit()
		}
		,
		i.prototype.reOpen = function() {
			this.subInit(),
			this.closeStatus = !1
		}
		,
		i.prototype.subInit = function() {
			this.count = 0,
			this.type = 1,
			this.headerBar = t.HeaderBar.getInstance(!0),
			this.groupHeader.addChild(this.headerBar),
			this.footerBar = t.FooterBar.getInstance(),
			this.groupFooter.addChild(this.footerBar),
			this.getMyInvitedUser(),
			this.loadEwallet(),
			this.btn_invite_list.addEventListener(egret.TouchEvent.TOUCH_END, this.showInviteList, this),
			this.img_close.addEventListener(egret.TouchEvent.TOUCH_END, this.close, this),
			this.btn_qrcode.addEventListener(egret.TouchEvent.TOUCH_END, this.btnClickGetQRCode, this),
			this.btn_withdraw.addEventListener(egret.TouchEvent.TOUCH_END, this.btnClickWithdraw, this),
			this.addEventListener(egret.Event.ENTER_FRAME, this.btnQrcodeAnimation, this)
		}
		,
		i.prototype.close = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().return_sound_ready && t.SceneTrade.getInstance().return_sound.play(0, 1),
			this.btn_invite_list.removeEventListener(egret.TouchEvent.TOUCH_END, this.showInviteList, this),
			this.btn_invite_list.removeEventListener(egret.TouchEvent.TOUCH_END, this.close, this),
			this.btn_qrcode.removeEventListener(egret.TouchEvent.TOUCH_END, this.btnClickGetQRCode, this),
			this.btn_withdraw.removeEventListener(egret.TouchEvent.TOUCH_END, this.withdraw, this),
			this.removeEventListener(egret.Event.ENTER_FRAME, this.btnQrcodeAnimation, this),
			t.FooterBar.getInstance().goTo(t.FooterBar.getInstance().btns[0], !1)
		}
		,
		i.prototype.btnQrcodeAnimation = function(t) {
			this.count <= 5 ? 1 == this.type ? this.btn_qrcode.width < 460 && this.btn_qrcode.width >= 430 ? (this.btn_qrcode.width = this.btn_qrcode.width + 1.5,
			this.btn_qrcode.height = this.btn_qrcode.height + .3) : (this.count++,
			this.type = 0) : 0 == this.type && (this.btn_qrcode.width <= 460 && this.btn_qrcode.width > 430 ? (this.btn_qrcode.width = this.btn_qrcode.width - 1.5,
			this.btn_qrcode.height = this.btn_qrcode.height - .3) : this.type = 1) : this.removeEventListener(egret.Event.ENTER_FRAME, this.btnQrcodeAnimation, this)
		}
		,
		i.prototype.showInviteList = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_INVITE_LIST)
		}
		,
		i.prototype.updateUI = function() {
			this.lb_invite_num.text = this.invite_data.recommend_user_1_num + " 人",
			this.lb_expect_total_amount.text = parseFloat(parseFloat(this.invite_data.incoming_rmb).toFixed(3)) + " 元",
			this.lb_obtain_total_amount.text = parseFloat(parseFloat(this.invite_data.unfreeze_rmb).toFixed(3)) + " 元"
		}
		,
		i.prototype.getMyInvitedUser = function() {
			this.showLoading(this),
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "user/getMyInvitedCount", null, this.onGetMyInvitedUserComplete, this.onGetMyInvitedUserIOError, this.onGetMyInvitedUserProgress, this)
		}
		,
		i.prototype.onGetMyInvitedUserComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_USER_FOUND)
				this.invite_data = n.results,
				null != this.invite_data && this.updateUI();
			else {
				if (403 == n.type)
					return void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				n.message
			}
			this.closeLoading(this)
		}
		,
		i.prototype.onGetMyInvitedUserIOError = function(t) {
			this.closeLoading(this),
			Toast.launch("网络异常,请检查您的网络设置.", -100)
		}
		,
		i.prototype.onGetMyInvitedUserProgress = function(t) {}
		,
		i.prototype.btnClickWithdraw = function() {
			var t = "";
			t = this.balance > 0 ? "确认体现 " + this.lb_balance.text + " 元?" : "没有可用余额";
			var e = [{
				text: t,
				style: {
					textColor: 16777215,
					size: 32
				}
			}]
			  , i = []
			  , n = new eui.Group;
			n.name = "childGroupTips",
			n.width = 520,
			n.height = 240,
			n.x = 75,
			n.y = 120;
			var a = new eui.Label
			  , s = new eui.Label;
			a.width = n.width,
			a.textAlign = egret.HorizontalAlign.CENTER,
			a.textFlow = e,
			s.width = n.width,
			s.textAlign = egret.HorizontalAlign.LEFT,
			s.multiline = !0,
			s.lineSpacing = 8,
			s.textFlow = i,
			a.y = (n.height - a.height - s.height - 5) / 2,
			s.height > 0 && (a.y = a.y - 15),
			a.height > 0 ? s.y = a.y + a.height : s.y = a.y + 30 + a.height,
			n.addChild(a),
			n.addChild(s),
			this.showWithdrawDialog(n)
		}
		,
		i.prototype.showWithdrawDialog = function(e) {
			var i = this
			  , n = {
				group: e,
				params: "",
				cancelable: !0,
				callback: function(t) {
					setTimeout(function() {
						i.balance > 0 && i.withdraw()
					}, 200)
				}
			};
			t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_TIP, n)
		}
		,
		i.prototype.withdraw = function() {
			this.applyWithdraw(),
			this.showLoading(this)
		}
		,
		i.prototype.btnClickGetQRCode = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
			this.showQRCode()
		}
		,
		i.prototype.showQRCode = function() {
			if (null != this.qrcode_url && "" != this.qrcode_url) {
				var t = {
					qrcode_type: "invite",
					qrcode_url: GameConfig.API_ADDRESS + this.qrcode_url,
					qrcode_action: "",
					qrcode_title: ""
				};
				showQRCodeImg(t)
			} else
				this.getQRCode()
		}
		,
		i.prototype.getQRCode = function() {
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "user/createQrCode", null, this.onGetQRCodeComplete, this.onGetQRCodeIOError, this.onGetQRCodeProgress, this)
		}
		,
		i.prototype.onGetQRCodeComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_GET_SIGN_SUCCESS) {
				var a = n.results;
				null != a && (this.qrcode_url = a.qrcode_url,
				null != this.qrcode_url && "" != this.qrcode_url && this.showQRCode())
			} else if (403 == n.type)
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			else {
				var s = n.message;
				Toast.launch(s, -100)
			}
		}
		,
		i.prototype.onGetQRCodeIOError = function(t) {}
		,
		i.prototype.onGetQRCodeProgress = function(t) {}
		,
		i.prototype.applyWithdraw = function() {
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "ewallet/agentApplyWithdraw", null, this.onApplyWithdrawComplete, this.onApplyWithdrawIOError, this.onApplyWithdrawProgress, this)
		}
		,
		i.prototype.onApplyWithdrawComplete = function(e) {
			this.closeLoading(this);
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_AGENT_APPLY_WITHDRAW_SUCCESS)
				Toast.launch("申请提现成功", -100),
				this.loadEwallet();
			else if (403 == n.type)
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			else {
				var a = n.message;
				Toast.launch(a, -100)
			}
		}
		,
		i.prototype.onApplyWithdrawIOError = function(t) {
			this.closeLoading(this)
		}
		,
		i.prototype.onApplyWithdrawProgress = function(t) {}
		,
		i.prototype.loadEwallet = function() {
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "ewallet_type",
				value: "R"
			})
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + API.balance, t, this.onGetEwalletComplete, this.onGetEwalletIOError, this.onGetEwalletProgress, this)
		}
		,
		i.prototype.onGetEwalletComplete = function(e) {
			debugger
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_EWALLET_FOUND) {
				var a = n.results;
				this.lb_balance.text = parseFloat(parseFloat(a.balance).toFixed(3)) + " 元",
				this.balance = a.balance
			} else if (403 == n.type)
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			else {
				var s = n.message;
				Toast.launch(s, -100)
			}
		}
		,
		i.prototype.onGetEwalletIOError = function(t) {}
		,
		i.prototype.onGetEwalletProgress = function(t) {}
		,
		i.prototype.showLoading = function(t) {
			if (null == t.loading_group) {
				t.loading_group = new eui.Group,
				t.loading_group.width = 719,
				t.loading_group.height = 1199,
				t.loading_group.verticalCenter = .5,
				t.loading_group.horizontalCenter = .5;
				var e = new egret.Sprite;
				e.graphics.clear(),
				e.graphics.beginFill(0, .6),
				e.graphics.drawRect(0, 0, GameConfig.curWidth(), GameConfig.curHeight()),
				e.graphics.endFill(),
				e.width = GameConfig.curWidth(),
				e.height = GameConfig.curHeight(),
				e.touchEnabled = !0,
				egret.Tween.get(e).to({
					alpha: 1
				}, 150),
				e.visible = !0,
				t.loading_group.addChild(e),
				null == t.loading_image && (t.loading_image = new eui.Image),
				t.loading_image.verticalCenter = .5,
				t.loading_image.horizontalCenter = .5,
				t.loading_image.source = RES.getRes("loading_run_png"),
				t.loading_image.anchorOffsetX = .5 * t.loading_image.width,
				t.loading_image.anchorOffsetY = .5 * t.loading_image.height,
				t.loading_group.addChild(t.loading_image)
			}
			GameLayerManager.gameLayer().effectLayer.contains(t.loading_group) || (GameLayerManager.gameLayer().effectLayer.addChild(t.loading_group),
			GameLayerManager.gameLayer().effectLayer.addEventListener(egret.Event.ENTER_FRAME, t.runLoading, t))
		}
		,
		i.prototype.runLoading = function(t) {
			this.loading_image.rotation += 3
		}
		,
		i.prototype.closeLoading = function(t) {
			GameLayerManager.gameLayer().mainLayer.$children.length > 1 && GameLayerManager.gameLayer().mainLayer.removeChildAt(1),
			GameLayerManager.gameLayer().effectLayer.contains(t.loading_group) && GameLayerManager.gameLayer().effectLayer.removeChild(t.loading_group),
			GameLayerManager.gameLayer().effectLayer.removeEventListener(egret.Event.ENTER_FRAME, t.runLoading, t)
		}
		,
		i.prototype.destoryAll = function() {
			null != this.groupFooter && (this.groupFooter.removeChildren(),
			this.groupHeader.removeChildren(),
			this.closeStatus = !0,
			this.btn_invite_list.removeEventListener(egret.TouchEvent.TOUCH_END, this.showInviteList, this),
			this.btn_invite_list.removeEventListener(egret.TouchEvent.TOUCH_END, this.close, this),
			this.btn_qrcode.removeEventListener(egret.TouchEvent.TOUCH_END, this.btnClickGetQRCode, this),
			this.btn_withdraw.removeEventListener(egret.TouchEvent.TOUCH_END, this.withdraw, this),
			this.removeEventListener(egret.Event.ENTER_FRAME, this.btnQrcodeAnimation, this))
		}
		,
		i
	}(eui.Component);
	t.Invite = e,
	__reflect(e.prototype, "game.Invite", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i() {
			var t = e.call(this) || this;
			return t.type = 1,
			t.type1 = 1,
			t.lastLineIntervalX = 0,
			t.lastLineIntervalDraw = !1,
			t.rulerYArray = [],
			t.options = {
				Capital: "BTCCNY",
				Diff: 30,
				odds: [],
				roundPoint: 2,
				KlineWidth: 0,
				KlineHeight: 0,
				KlineSpaceLeftWidth: 0,
				KlineSpaceRightWidth: 80,
				KlineSpaceTopHeight: 5,
				KlineSpaceBottomHeight: 5,
				BorderWidth: 2,
				LineWidth: 1,
				BorderLineColor: 4670591,
				RightPriceColor: 5394067,
				GridBackColor: 2566750,
				KlineUpColor: 14492160,
				KlineDownColor: 3385873,
				KlineFlatColor: 16777215,
				MA5Color: 7321527,
				MA10Color: 8575232,
				BollColor: 13274818,
				DiffColor: 7321527,
				DeaColor: 14492160,
				RSI1Color: 13274818,
				RSI2Color: 8575232,
				RSI3Color: 7321527,
				FontSize: 15,
				VerticalCount: 4,
				HorizalCount: 5,
				CandleCount: 30,
				InitCandleCount: 60,
				LeftFixed: 4,
				CandleDataArr: null,
				MaxData: 0,
				MinData: 1e7,
				Ratio: 0,
				Coordinate: [],
				SpaceRatio: .8,
				CandleHeight: 0,
				CandleWidth: 0,
				CandleSpaceInterval: 5,
				ChartMarginBottom: 0,
				ChartMarginTop: 0,
				BottomTimeDiff: 6,
				VStep: 0,
				HStep: 0,
				MADisplay: !0
			},
			t.intervalArea = {},
			t.lastPrice = 0,
			t.lastDianCha = 0,
			t.showRuler = !1,
			t.klineSocketReady = !1,
			t.timerRectInterval = null,
			t.oldInterval = 0,
			t.alphaRectInterval = 1,
			t.alphaType = 0,
			t.addEventListener(eui.UIEvent.COMPLETE, t.createCompleteEvent, t),
			t.skinName = "resource/ui/main/KlineMasterBarSkin.exml",
			t
		}
		return __extends(i, e),
		i.prototype.klineSocketStatus = function() {
			return this.klineSocketReady
		}
		,
		i.prototype.setOptions = function(t) {
			"BTCCNY" == t.Capital ? (__extends(t, {
				roundPoint: 2
			}),
			this.imgCapital.source = RES.getRes("icon_btccny_png"),
			this.imgCapitalLogo.source = RES.getRes("icon_btccny_png")) : "EURUSD" == t.Capital ? (__extends(t, {
				roundPoint: 5
			}),
			this.imgCapital.source = RES.getRes("icon_eurusd_png"),
			this.imgCapitalLogo.source = RES.getRes("icon_eurusd_png")) : "XAUUSD" == t.Capital ? (__extends(t, {
				roundPoint: 2
			}),
			this.imgCapital.source = RES.getRes("icon_xauusd_png"),
			this.imgCapitalLogo.source = RES.getRes("icon_xauusd_png")) : "GBPUSD" == t.Capital ? (__extends(t, {
				roundPoint: 5
			}),
			this.imgCapital.source = RES.getRes("icon_gbpusd_png"),
			this.imgCapitalLogo.source = RES.getRes("icon_gbpusd_png")) : "LTCCNY" == t.Capital && (__extends(t, {
				roundPoint: 2
			}),
			this.imgCapital.source = RES.getRes("icon_ltccny_png"),
			this.imgCapitalLogo.source = RES.getRes("icon_ltccny_png")),
			__extends(this.options, t)
		}
		,
		i.prototype.getOptions = function() {
			return this.options
		}
		,
		i.prototype.setPointDiffListener = function(t, e) {
			this.thisObject = e,
			this.pointDiffListener = t
		}
		,
		i.prototype.moveKlineGroup = function() {
			egret.Tween.get(this.groupKline, {
				loop: !1
			}).to({
				x: -1 * (this.groupKline.width / 2)
			}, 1e3)
		}
		,
		i.prototype.moveBackKlineGroup = function() {
			egret.Tween.get(this.groupKline, {
				loop: !1
			}).to({
				x: 0
			}, 1e3)
		}
		,
		i.prototype.setTime = function(t) {
			this.serverTime = t;
			var e = Utils.convertTime(t, "hms");
			this.lbTime.text = e,
			t += 3e4,
			e = Utils.convertTime(t, "hhmm"),
			this.lbPeriod.text = e + "期",
			this.lbPeriod1.text = "第 " + e + " 期"
		}
		,
		i.getInstance = function(t) {
			return this._instance || t && (this._instance = new i),
			this._instance
		}
		,
		i.prototype.createCompleteEvent = function(e) {
			var i = this;
			this.removeEventListener(eui.UIEvent.COMPLETE, this.createCompleteEvent, this),
			this.btnTimeType.addEventListener(egret.TouchEvent.TOUCH_TAP, this.clickTimeType, this),
			this.btnTimeTypeCurrent.addEventListener(egret.TouchEvent.TOUCH_TAP, this.clickTimeType, this),
			this.btnTimeType30s.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeTimeType, this),
			this.btnTimeType1m.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeTimeType, this),
			this.btnTimeType3m.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeTimeType, this),
			this.btnTimeType5m.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeTimeType, this),
			this.btnTimeType15m.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeTimeType, this),
			this.groupTimeTypeOut.addEventListener(egret.TouchEvent.TOUCH_TAP, this.clickTimeTypeOut, this),
			this.groupLastPricePart1.addEventListener(egret.TouchEvent.TOUCH_TAP, this.clickTimeTypeOut, this),
			this.img_topup.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
				t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_SHOP)
			}, this),
			this.init(),
			this.groupSettle.x = 10 + this.options.KlineSpaceLeftWidth + 27 * (this.options.CandleWidth + this.options.CandleSpaceInterval) - 20,
			this.groupSettle.y = this.options.KlineSpaceTopHeight;
			var n = 10 + this.options.KlineWidth + this.options.KlineSpaceRightWidth - 3;
			this.groupSettle.width = n - (this.options.KlineSpaceLeftWidth + 27 * (this.options.CandleWidth + this.options.CandleSpaceInterval)) + 10,
			this.groupSettle.height = this.options.KlineHeight,
			this.groupTrade.x = this.groupSettle.x,
			this.groupTrade.y = this.groupSettle.y,
			this.groupTrade.width = this.groupSettle.width,
			this.groupTrade.height = this.groupSettle.height,
			this.lb_settle_history.addEventListener(egret.TouchEvent.TOUCH_END, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
				i.openSettleHistory()
			}, this),
			this.lb_kline_help.addEventListener(egret.TouchEvent.TOUCH_END, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
				t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_CLASSICAL_KLINE_HEPL)
			}, this)
		}
		,
		i.prototype.openSettleHistory = function() {
			var e = Array();
			e.capital = this.options.Capital,
			t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_SETTLE_HISTORY, e)
		}
		,
		i.prototype.clickTimeType = function(e) {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
			0 == this.groupTimeTypeDD.visible ? (this.groupTimeTypeOut.visible = !0,
			this.groupTimeTypeDD.visible = !0,
			this.setChildIndex(this.groupTimeTypeOut, 99),
			this.setChildIndex(this.groupLastPrice, 100)) : (this.groupTimeTypeOut.visible = !1,
			this.groupTimeTypeDD.visible = !1,
			this.setChildIndex(this.groupTimeTypeOut, 0))
		}
		,
		i.prototype.clickTimeTypeOut = function(t) {
			this.groupTimeTypeOut.visible = !1,
			this.groupTimeTypeDD.visible = !1,
			this.setChildIndex(this.groupTimeTypeOut, 0)
		}
		,
		i.prototype.changeTimeType = function(e) {
			if (t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
			this.groupTimeTypeDD.visible = !1,
			e.currentTarget.name != this.btnTimeType.name) {
				this.btnTimeType.name = e.currentTarget.name,
				this.btnTimeType.img.source = e.currentTarget.img.source,
				this.btnTimeType.img.source.down = e.currentTarget.img.source.down,
				this.btnTimeTypeCurrent.name = e.currentTarget.name,
				this.btnTimeTypeCurrent.img.source = e.currentTarget.img.source,
				this.btnTimeTypeCurrent.img.source.down = e.currentTarget.img.source.down;
				var i = e.currentTarget.name;
				this.setOptions({
					Diff: i
				}),
				this.initKlineSocket(this.options.Capital, i),
				30 != i && this.removeSettleGroup()
			}
		}
		,
		i.prototype.updateLastPricePanel = function(t, e, i, n) {
			this.lbLastPrice.text = parseFloat(e).toFixed(this.options.roundPoint),
			this.lbOpen.text = parseFloat(t).toFixed(this.options.roundPoint),
			e > this.lastPrice ? this.imgUpDown.source = RES.getRes("icon-shang1_png") : e < this.lastPrice && (this.imgUpDown.source = RES.getRes("icon-xia1_png"))
		}
		,
		i.prototype.init = function() {
			this.options.KlineWidth = this.width - 27 - this.options.KlineSpaceLeftWidth - this.options.KlineSpaceRightWidth,
			this.options.KlineHeight = this.groupKline.height - this.options.KlineSpaceTopHeight - this.options.KlineSpaceBottomHeight,
			this.options.CandleHeight = this.options.KlineHeight * this.options.SpaceRatio,
			this.options.CandleWidth = parseFloat((this.options.KlineWidth / this.options.CandleCount - this.options.CandleSpaceInterval).toFixed(6)),
			this.options.ChartMarginTop = parseFloat(((this.options.KlineHeight - this.options.CandleHeight) / 2).toFixed(2)),
			this.options.VStep = this.options.KlineHeight / this.options.VerticalCount,
			this.options.HStep = this.options.KlineWidth / this.options.HorizalCount,
			this.groupKline.removeChildren(),
			this.drawRect(),
			this.drawGrid(),
			this.drawHorizalLine(),
			this.drawVerticalLine(),
			this.drawDemoCandle()
		}
		,
		i.prototype.drawRect = function() {}
		,
		i.prototype.drawGrid = function() {
			var t = 10 + this.options.KlineSpaceLeftWidth
			  , e = this.options.KlineSpaceTopHeight
			  , i = this.options.KlineWidth + this.options.KlineSpaceRightWidth - 3
			  , n = this.options.KlineHeight
			  , a = new egret.Shape;
			a.graphics.lineStyle(this.options.BorderWidth, this.options.BorderLineColor),
			a.graphics.moveTo(t, e),
			a.graphics.beginFill(this.options.GridBackColor, .5),
			a.graphics.drawRect(t, e, i, n),
			a.graphics.endFill(),
			this.groupKline.addChild(a)
		}
		,
		i.prototype.drawHorizalLine = function() {
			for (var t = this.options.HStep, e = 10 + this.options.KlineSpaceLeftWidth, i = this.options.KlineSpaceTopHeight, n = 0; n <= this.options.HorizalCount - 1; n++) {
				var a = e + n * t
				  , s = i
				  , o = new egret.Shape;
				if (0 == n)
					o.graphics.lineStyle(this.options.BorderWidth, this.options.BorderLineColor),
					o.graphics.moveTo(a, s),
					o.graphics.lineTo(a, s + this.options.KlineHeight + 10);
				else
					for (o.graphics.lineStyle(this.options.LineWidth, this.options.BorderLineColor); s < this.options.KlineSpaceTopHeight + this.options.KlineHeight; )
						o.graphics.moveTo(a, s),
						o.graphics.lineTo(a, s + 10),
						s += 15;
				o.graphics.endFill(),
				this.groupKline.addChild(o)
			}
		}
		,
		i.prototype.drawVerticalLine = function() {
			for (var t = this.options.VStep, e = 10 + this.options.KlineSpaceLeftWidth, i = this.options.KlineSpaceTopHeight, n = 1; n < this.options.VerticalCount; n++) {
				var a = e
				  , s = i + n * t
				  , o = new egret.Shape;
				for (o.graphics.lineStyle(this.options.LineWidth, this.options.BorderLineColor); a < this.options.KlineSpaceLeftWidth + this.options.KlineWidth + this.options.KlineSpaceRightWidth; )
					o.graphics.moveTo(a, s),
					o.graphics.lineTo(a + 10, s),
					a += 15;
				o.graphics.endFill(),
				this.groupKline.addChild(o)
			}
		}
		,
		i.prototype.drawDemoCandle = function() {
			var t = []
			  , e = 0
			  , i = 0
			  , n = new eui.Image;
			n.source = RES.getRes("bg_kline_top_1_png"),
			n.width = 113.3,
			n.height = 30.8,
			n.x = 15,
			n.y = 6,
			n.name = "bg_kline_top_1",
			t.push(n);
			var a = new egret.Shape;
			a.name = "candleRect_demo1";
			var s = new egret.Shape;
			s.name = "candleLine_demo1",
			e = 10 + this.options.KlineSpaceLeftWidth + 14,
			i = this.options.KlineSpaceTopHeight + 10 + 1,
			a.graphics.lineStyle(1, 8686003),
			a.graphics.moveTo(e, i),
			a.graphics.drawRect(e, i, 8, 10),
			a.graphics.endFill(),
			s.graphics.lineStyle(1, 8686003),
			s.graphics.moveTo(e + 4, i - 4),
			s.graphics.lineTo(e + 4, i),
			s.graphics.moveTo(e + 4, i + 10),
			s.graphics.lineTo(e + 4, i + 10 + 4),
			s.graphics.endFill();
			var o = new eui.Label;
			o.text = "下注",
			o.size = this.options.FontSize,
			o.textColor = 16777215,
			o.x = e + 4 + 8 + 2,
			o.y = i - 2,
			o.name = "lbDemo1",
			t.push(s),
			t.push(a),
			t.push(o);
			var r = new egret.Shape;
			r.name = "candleRect_demo2";
			var l = new egret.Shape;
			l.name = "candleLine_demo2",
			e = o.x + o.width + 8,
			i = i,
			r.graphics.lineStyle(1, 8686003),
			r.graphics.moveTo(e, i),
			r.graphics.beginFill(8686003, 1),
			r.graphics.drawRect(e, i, 8, 10),
			r.graphics.endFill(),
			l.graphics.lineStyle(1, 8686003),
			l.graphics.moveTo(e + 4, i - 4),
			l.graphics.lineTo(e + 4, i + 10 + 4),
			l.graphics.endFill();
			var h = new eui.Label;
			h.text = "开奖",
			h.size = this.options.FontSize,
			h.textColor = 16777215,
			h.x = e + 4 + 8 + 2,
			h.y = i - 2,
			h.name = "lbDemo2",
			t.push(l),
			t.push(r),
			t.push(h),
			this.addObjArray(t, this.groupKline),
			this.groupKline.addChild(this.group_kline_top),
			this.groupKline.setChildIndex(this.group_kline_top, 100),
			this.groupKline.addChild(this.img_topup),
			this.groupKline.setChildIndex(this.img_topup, 101)
		}
		,
		i.prototype.initSocket = function() {
			this.kline_socket = t.KlineSocket.getInstance(),
			this.kline_socket.setOptions(this.options),
			this.kline_socket.initSocket(this.user_id, this.token)
		}
		,
		i.prototype.initKlineSocket = function(t, e) {
			this.setOptions({
				Capital: t,
				Diff: e
			}),
			this.kline_socket.setOptions(this.options),
			this.kline_socket.initKlineSocket(t, e, this.user_id, this.token)
		}
		,
		i.prototype.Notification_Kline_Init = function(t) {
			if (null != t && void 0 != t && "undefined" != t) {
				var e = t.capitalType
				  , i = t.diff
				  , t = t.data;
				Utils.removeStorage(e + i),
				null == t || void 0 == t || "undefined" == t || t.length <= 0 || this.initSocketData(e, i, t)
			}
		}
		,
		i.prototype.Notification_Kline_Kline = function(e) {
			var i = e.capitalType
			  , n = e.diff
			  , e = e.data;
			if (e = this.mergeCacheData(i, n, e),
			!(null == e || void 0 == e || "undefined" == e || e.length <= 0)) {
				var a = e[1]
				  , s = a[0];
				if (30 == n && s % 60 == 0) {
					var o = a[2] - a[1];
					o = parseFloat(parseFloat(o.toString()).toFixed(this.options.roundPoint));
					var r = this.getWinOddsList(o, a[2])
					  , l = {
						period: Utils.convertTime(s, "hhmm"),
						point_diff: null,
						win_odds: r,
						round_point: this.options.roundPoint
					}
					  , h = this.serverTime / 1e3
					  , d = h - s - 30;
					1 >= d && (t.AppFacade.getInstance().sendNotification(MainNotify.POINT_DIFF, l),
					this.lastDianCha = o,
					this.lastPrice = a[2],
					this.showSettleResult(o, a[2]),
					this.drawLineInterval(0, !0))
				}
				this.initSocketData(i, n, e)
			}
		}
		,
		i.prototype.showSettleResult = function(t, e) {
			var i = parseFloat(e.toString()).toFixed(this.options.roundPoint);
			this.lb_settle_result.text = i;
			var n = parseInt(i.substr(i.length - 1, 1));
			n % 2 == 1 ? this.img_settle_result.source = RES.getRes("icon_classical_settle_single_png") : this.img_settle_result.source = RES.getRes("icon_classical_settle_double_png"),
			0 > t ? this.img_settle_bg.source = RES.getRes("bg_classical_settle_green_png") : t > 0 ? this.img_settle_bg.source = RES.getRes("bg_classical_settle_red_png") : (this.img_settle_bg.source = RES.getRes("bg_classical_settle_white_png"),
			this.img_settle_result.source = RES.getRes("icon_classical_settle_equal_png")),
			this.groupSettleResult.visible = !0
		}
		,
		i.prototype.Notification_Kline_Last_Kline = function(t) {
			var e = t[0]
			  , i = t[2]
			  , n = t[3]
			  , a = t[1]
			  , s = (a[1],
			a[2])
			  , o = (a[3],
			a[4],
			Utils.getStorageObj(i + n));
			if (o && o.length > 0 && o[0]) {
				var r = o[0][0];
				if (e > r)
					return
			}
			if (s > this.options.MaxData || s < this.options.MinData)
				return void (o && o.length > 0 && o[0] ? (this.options.MADisplay && (o = ZhiBiaoTools.getLastMAdata(o, a)),
				this.drawData(o),
				Utils.setStorageObj(i + n, o),
				this.showRuler ? this.drawOpenPriceLine(a) : this.removeOpenPriceLine()) : this.initKlineSocket(i, n));
			if (this.options.MADisplay) {
				var t = ZhiBiaoTools.getLastMAdata(this.options.CandleDataArr, a);
				this.drawMALine(t)
			}
			this.drawLastCandle(a),
			this.drawPriceLine(a)
		}
		,
		i.prototype.initSocketData = function(t, e, i) {
			i.length > this.options.InitCandleCount && i.splice(this.options.InitCandleCount, i.length - this.options.InitCandleCount),
			this.showRuler = !1;
			var n = i[0][0] % 60
			  , a = i[0][1];
			this.options.roundPoint = Utils.getRoundPoint(a),
			30 == e && 0 == n ? this.showRuler = !0 : this.showRuler = !1,
			this.options.MADisplay && (i = ZhiBiaoTools.getMAdata(i)),
			Utils.setStorageObj(t + e, i),
			this.drawData(i);
			this.showRuler ? this.drawOpenPriceLine(i[0]) : this.removeOpenPriceLine()
		}
		,
		i.prototype.drawData = function(t) {
			null == t || void 0 == t || t.length <= 0 || (this.getRatio(t),
			this.initCoordinate(t),
			this.drawCandles(t),
			this.drawKlineBottomTime(t),
			this.drawRightPrice(),
			this.drawLastCandle(t[0]),
			this.drawPriceLine(t[0]),
			this.options.CandleDataArr = t,
			this.options.MADisplay && this.drawMALine(t))
		}
		,
		i.prototype.getRatio = function(t) {
			this.options.MaxData = 0,
			this.options.MinData = 1e7;
			for (var e = 0; e < t.length && !(e >= this.options.CandleCount - this.options.LeftFixed); e++) {
				var i = t[e]
				  , n = (parseFloat(i[1]),
				parseFloat(i[2]),
				parseFloat(i[3]))
				  , a = parseFloat(i[4])
				  , s = 0
				  , o = 1e7;
				Math.pow(10, this.options.roundPoint) / 10;
				if (0 == e) {
					var r = 0;
					n + r > this.options.MaxData && (s = n + r,
					this.options.MaxData = s),
					a - r < this.options.MinData && (o = a - r,
					this.options.MinData = o)
				} else
					n > this.options.MaxData && (s = n,
					this.options.MaxData = s),
					a < this.options.MinData && (o = a,
					this.options.MinData = o)
			}
			this.options.Ratio = this.options.CandleHeight / (this.options.MaxData - this.options.MinData)
		}
		,
		i.prototype.initCoordinate = function(t) {
			this.options.Coordinate = [];
			for (var e = this.options.CandleWidth, i = this.options.CandleSpaceInterval, n = this.options.KlineSpaceLeftWidth, a = this.options.KlineWidth, s = 8, o = 0; o < t.length; o++) {
				if (o > this.options.CandleCount)
					return;
				var r = [];
				r.push(n + a - o * (i + e)),
				r.push(r[0] - e + s),
				this.options.Coordinate.push(r)
			}
		}
		,
		i.prototype.drawCandles = function(t) {
			for (var e, i, n, a, s, o, r, l, h, d, _, p = this.options.Ratio, u = this.options.KlineUpColor, g = this.options.KlineDownColor, c = this.options.KlineFlatColor, m = this.options.MaxData, y = (this.options.MinData,
			c), v = CONST.ODDS_IMG.FLAT, b = [], f = t.length; f >= 0; f--)
				if (!(f >= this.options.CandleCount - this.options.LeftFixed)) {
					var C = new egret.Shape
					  , T = new egret.Shape;
					if (void 0 != t[f] && null != t[f] && (n = t[f][0],
					a = parseFloat(t[f][1]),
					s = t[f][2],
					o = parseFloat(t[f][3]),
					r = parseFloat(t[f][4]),
					l = parseFloat(s) - parseFloat(a),
					a > s ? (y = g,
					_ = a,
					v = CONST.ODDS_IMG.DOWN) : s > a ? (y = u,
					_ = s,
					v = CONST.ODDS_IMG.UP) : (y = c,
					_ = s,
					v = CONST.ODDS_IMG.FLAT),
					h = Math.abs((a - s) * p),
					d = (o - r) * p,
					2 >= h && (h = 2),
					1.5 >= d && (d = 1.5),
					e = this.options.Coordinate[f][1] - (this.options.CandleWidth + this.options.CandleSpaceInterval) * this.options.LeftFixed,
					i = (m - _) * p + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop - 1,
					n % 60 == 30 ? (C.graphics.lineStyle(2, y),
					C.graphics.moveTo(e, i),
					C.graphics.beginFill(3093103, 1),
					C.graphics.drawRect(e, i, this.options.CandleWidth, h),
					C.graphics.endFill()) : (C.graphics.moveTo(e, i),
					C.graphics.beginFill(y, 1),
					C.graphics.drawRect(e, i, this.options.CandleWidth, h),
					C.graphics.endFill()),
					0 == f ? C.name = "candleRect_last" : C.name = "candleRect_" + f,
					e += this.options.CandleWidth / 2,
					i = (m - o) * p + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop - .5,
					T.graphics.lineStyle(2, y),
					T.graphics.moveTo(e, i),
					T.graphics.lineTo(e, i + d),
					T.graphics.endFill(),
					0 == f ? T.name = "candleLine_last" : T.name = "candleLine_" + f,
					b.push(T),
					b.push(C),
					0 != f)) {
						var S = new eui.Image
						  , E = new eui.Label;
						if (0 == f)
							S.name = "oddsRect_last",
							E.name = "oddsLabel_last";
						else {
							var w = f;
							f % 2 != 0 && (w = f - 1),
							0 == w ? (S.name = "oddsRect_last",
							E.name = "oddsLabel_last") : (S.name = "oddsRect_" + w,
							E.name = "oddsLabel_" + w)
						}
						if (30 == this.options.Diff && n % 60 == 0) {
							e = this.options.Coordinate[f][1] - (this.options.CandleWidth + this.options.CandleSpaceInterval) * this.options.LeftFixed - this.options.CandleSpaceInterval - this.options.CandleWidth,
							i = this.groupKline.height - this.options.KlineSpaceBottomHeight - 25;
							var I = !1;
							f >= this.options.CandleCount - this.options.LeftFixed - 1 && (I = !0);
							var L = this.getWinOdds(l, s);
							if (S.source = RES.getRes(v),
							S.width = 35,
							S.height = 25,
							S.x = e,
							S.y = i,
							1 == L.order ? E.text = "X" + parseFloat(L.odds) : E.text = L.display.substr(L.display.length - 1, 1),
							E.fontFamily = "lgzbFont",
							E.x = e,
							E.y = i + 3,
							E.width = 35,
							E.textAlign = "center",
							E.textColor = 16113323,
							E.stroke = 1,
							E.strokeColor = 789259,
							E.size = this.options.FontSize,
							I) {
								this.removeObj(E.name, this.groupKline),
								this.removeObj(S.name, this.groupKline);
								continue
							}
							b.push(S),
							b.push(E)
						} else
							this.removeObj(E.name, this.groupKline),
							this.removeObj(S.name, this.groupKline),
							this.removeObj("oddsLabel_back", this.groupKline)
					}
				}
			this.addObjArray(b, this.groupKline)
		}
		,
		i.prototype.drawKlineBottomTime = function(t) {
			for (var e = [], i = 0; i < t.length; i++)
				i > this.options.CandleCount || (i - 2 == 0 ? e.push(t[i][0]) : (i - 2) % this.options.BottomTimeDiff == 0 && e.push(t[i - 2][0]));
			for (var n = 10 + this.options.KlineSpaceLeftWidth + this.options.KlineWidth - 6 * (this.options.CandleWidth + this.options.CandleSpaceInterval), a = this.options.KlineHeight + 10, s = this.options.BottomTimeDiff * (this.options.CandleWidth + this.options.CandleSpaceInterval), o = [], r = null, i = 0; i < e.length; i++)
				i != e.length - 1 && (r = new eui.Label,
				r.text = Utils.convertTime(e[i], "hm"),
				r.x = n - i * s - 17,
				r.y = a,
				r.size = this.options.FontSize,
				r.name = "lbBottomTime_" + i,
				o.push(r));
			this.addObjArray(o, this.groupKline)
		}
		,
		i.prototype.drawRightPrice = function() {
			for (var t = this.options.VStep / this.options.Ratio, e = this.options.MaxData - (this.options.MaxData - this.options.MinData) / 2, i = t + e, n = t + i, a = e - t, s = a - t, o = [n, i, e, a, s], r = this.options.KlineSpaceLeftWidth + this.options.KlineWidth + 15, l = 0; l < o.length; l++) {
				var h = l * this.options.VStep - 10;
				if (1 == l || 2 == l || 3 == l) {
					var d = new eui.Label;
					d.text = o[l].toFixed(this.options.roundPoint),
					d.size = this.options.FontSize,
					d.textColor = this.options.RightPriceColor,
					d.x = r,
					d.y = h,
					d.name = "lbRightPrice_" + l,
					d.width = 70,
					d.textAlign = egret.HorizontalAlign.RIGHT,
					this.addObj(d, this.groupKline),
					this.groupKline.setChildIndex(d, 999),
					this.groupKline.contains(this.groupTrade) && this.groupKline.setChildIndex(this.groupTrade, 1e3)
				}
			}
		}
		,
		i.prototype.drawPriceLine = function(t) {
			if (!(null == t || void 0 == t || t.length <= 0)) {
				var e = (t[0],
				t[1])
				  , i = t[2]
				  , n = t[3]
				  , a = t[4]
				  , s = i - e;
				"BTCCNY" == this.options.Capital ? s = parseFloat(s.toFixed(this.options.roundPoint)) : (s *= Math.pow(10, this.options.roundPoint),
				s = Math.round(s));
				var o = this.options.KlineFlatColor
				  , r = this.options.KlineFlatColor;
				e > i ? (o = this.options.KlineDownColor,
				r = 97283) : i > e ? (o = this.options.KlineUpColor,
				r = 14355464) : (o = this.options.KlineUpColor,
				r = 0);
				var l = 10 + this.options.KlineSpaceLeftWidth
				  , h = (this.options.MaxData - i) * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop
				  , d = ((this.options.MaxData - e) * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop,
				(this.options.MaxData - n) * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop,
				(this.options.MaxData - a) * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop,
				new egret.Shape);
				d.graphics.lineStyle(.5, 16777215);
				var _ = 0;
				d.graphics.moveTo(l, h),
				this.showRuler ? (_ = 10 + this.options.KlineSpaceLeftWidth + 25 * (this.options.CandleWidth + this.options.CandleSpaceInterval),
				l += _,
				d.graphics.lineTo(l - this.options.CandleWidth / 2, h),
				null == this.imgLineInterval1 && (this.imgLineInterval1 = new eui.Image,
				this.imgLineInterval1.source = RES.getRes("icon_dot_png"),
				this.imgLineInterval1.width = 40,
				this.imgLineInterval1.height = 40,
				this.groupKline.addChild(this.imgLineInterval1)),
				this.groupKline.contains(this.imgLineInterval1) || this.groupKline.addChild(this.imgLineInterval1),
				this.imgLineInterval1.visible = !0,
				this.imgLineInterval1.x = l - 19,
				this.imgLineInterval1.y = h - 20,
				s > 0 ? this.imgLineInterval1.y = this.imgLineInterval1.y - 2 : 0 > s && (this.imgLineInterval1.y = this.imgLineInterval1.y + 2),
				this.groupKline.setChildIndex(this.imgLineInterval1, 1e3)) : (_ = this.options.KlineWidth + this.options.KlineSpaceRightWidth - 3,
				d.graphics.lineTo(l + _ - 120, h),
				null != this.imgLineInterval1 && (this.imgLineInterval1.visible = !1)),
				d.name = "linePrice";
				var p = (parseFloat(e).toFixed(this.options.roundPoint),
				parseFloat(i).toFixed(this.options.roundPoint))
				  , u = new eui.Group;
				u.name = "lbTipPriceGroup",
				u.height = 40,
				u.width = 120;
				var g = new eui.Image;
				g.width = u.width,
				g.height = u.height,
				g.source = RES.getRes("bg_bet_price_png"),
				l = 10 + this.options.KlineSpaceLeftWidth,
				u.y = h - u.height / 2,
				u.x = l + this.options.KlineWidth + this.options.KlineSpaceRightWidth - 3 - u.width,
				u.y = h - u.height / 2;
				var c = u.y - this.groupBetAmount.height - 1;
				this.groupBetAmount.x = l + this.options.KlineWidth + this.options.KlineSpaceRightWidth - 3 - this.groupBetAmount.width,
				this.groupKline.contains(this.groupBetAmount) || this.groupKline.addChild(this.groupBetAmount),
				this.groupKline.setChildIndex(this.groupBetAmount, 1001),
				c <= this.options.KlineSpaceTopHeight + 30 ? this.groupBetAmount.y = u.y + u.height + 1 : this.groupBetAmount.y = c,
				this.groupSettle.visible && (g.rotation = 180,
				g.horizontalCenter = "0",
				g.verticalCenter = "0",
				u.x = 10,
				this.groupBetAmount.x = 10),
				u.addChild(g);
				var m = p.substr(0, p.length - 1)
				  , y = p.substr(p.length - 1, 1)
				  , v = new eui.Label;
				v.text = m,
				v.textColor = 0,
				v.size = 21,
				v.height = u.height,
				v.verticalAlign = "middle",
				this.groupSettle.visible ? v.x = 3 : v.x = 13,
				v.verticalAlign = "middle";
				var b = new eui.Label;
				b.text = y,
				b.textColor = r,
				b.size = 25,
				b.height = u.height,
				b.x = v.x + v.width + 2,
				b.verticalAlign = "middle",
				u.addChild(v),
				u.addChild(b),
				this.addObjArray([d, u], this.groupKline),
				this.groupKline.setChildIndex(this.img_topup, 1e3),
				this.groupKline.setChildIndex(this.groupBetAmount, 1001),
				this.groupKline.setChildIndex(u, 1001)
			}
		}
		,
		i.prototype.updateTotalBetAmount = function(t) {
			("" == t || null == t) && (t = 0);
			var e = Utils.moneyFormat(t, 2).toString();
			this.lbTotalBetAmount.text = e
		}
		,
		i.prototype.drawRectInterval = function() {
			var t = this;
			if (t.removeObj("rectInterval", t.groupKline),
			this.timerRectInterval && (clearInterval(this.timerRectInterval),
			this.timerRectInterval = null),
			0 == this.showRuler)
				return void t.removeObj("rectInterval", t.groupKline);
			for (var e in t.intervalArea)
				if (0 != t.intervalArea[e].c) {
					var i = t.intervalArea[e].i;
					t.oldInterval != i && (t.alphaType = 0,
					t.alphaType = 1,
					t.oldInterval = i),
					0 == t.alphaType ? (t.alphaRectInterval = t.alphaRectInterval - .1,
					t.alphaRectInterval <= .2 && (t.alphaType = 1)) : (t.alphaRectInterval = t.alphaRectInterval + .1,
					t.alphaRectInterval >= .9 && (t.alphaType = 0));
					var n = t.intervalArea[e].x
					  , a = t.intervalArea[e].y
					  , s = t.intervalArea[e].y2
					  , o = t.intervalArea[e].y2
					  , r = t.intervalArea[e].color;
					3 == i ? (o = a - s,
					a = s) : o = s - a;
					var l = new egret.Shape;
					l.name = "rectInterval",
					l.graphics.moveTo(n, a),
					l.graphics.beginFill(r, 1),
					l.graphics.drawRect(n, a, 80, o),
					l.alpha = t.alphaRectInterval,
					l.graphics.endFill(),
					t.addObjArray([l], t.groupKline)
				}
			null == this.timerRectInterval && (this.timerRectInterval = setInterval(function() {
				t.drawRectInterval()
			}, 100))
		}
		,
		i.prototype.drawLineInterval = function(t, e) {
			if (30 != this.options.Diff) {
				0 == this.groupTrade.visible && this.removeSettleGroup();
				var i = this.groupTrade.getChildByName("lbTradeTopTip");
				return null != i && void 0 != i && (i.text = "开奖时间"),
				void this.drawLineTradeTimer(t)
			}
			0 == this.groupSettle.visible && this.removeTradeGroup(null);
			var n = this.lastDianCha
			  , a = this.lastPrice
			  , s = a - n;
			if (null == this.imgLineInterval || this.groupSettle.contains(this.imgLineInterval) || this.groupSettle.addChild(this.imgLineInterval),
			null == this.imgLineInterval || this.imgLineInterval.visible || (this.imgLineInterval.visible = !0),
			this.removeEventListener(egret.Event.ENTER_FRAME, this.dotAnimation, this),
			this.addEventListener(egret.Event.ENTER_FRAME, this.dotAnimation, this),
			!this.lastLineIntervalDraw) {
				if (e)
					this.lastLineIntervalDraw = !0;
				else if (0 == t)
					return;
				var o = 0
				  , r = 0
				  , l = 0;
				n > 0 ? (o = 0,
				l = this.groupSettle.height / 2,
				r = 16001316) : 0 == n ? (o = this.groupSettle.height / 2 - 15,
				l = 30,
				r = 16777215) : 0 > n && (o = this.groupSettle.height / 2,
				l = this.groupSettle.height / 2,
				r = 5169700),
				this.bgSettle = new egret.Shape,
				this.bgSettle.graphics.moveTo(0, o),
				0 == n ? this.bgSettle.graphics.beginFill(r, .8) : this.bgSettle.graphics.beginFill(r, .5),
				this.bgSettle.graphics.drawRect(0, o, this.groupSettle.width, l),
				this.bgSettle.graphics.endFill(),
				this.bgSettle.name = "settle_bg",
				this.addObj(this.bgSettle, this.groupSettle);
				var h = parseFloat(a.toString()).toFixed(this.options.roundPoint)
				  , d = parseInt(h.substr(h.length - 1, 1));
				0 != n ? (this.bgOdds = new eui.Image,
				this.bgOdds.width = 76,
				this.bgOdds.height = 75,
				this.bgOdds.name = "single_double",
				this.bgOdds.x = (this.groupSettle.width - this.bgOdds.width) / 2,
				this.bgOdds.y = o + (this.groupSettle.height / 2 - this.bgOdds.height) / 2,
				d % 2 == 1 ? this.bgOdds.source = RES.getRes("icon_single_png") : this.bgOdds.source = RES.getRes("icon_double_png"),
				this.addObj(this.bgOdds, this.groupSettle)) : (this.bgOdds = new eui.Label,
				this.bgOdds.text = "平",
				this.bgOdds.fontFamily = "lgzbFont",
				this.bgOdds.width = this.groupSettle.width,
				this.bgOdds.height = l,
				this.bgOdds.textAlign = "center",
				this.bgOdds.verticalAlign = "middle",
				this.bgOdds.bold = !0,
				this.bgOdds.stroke = 1,
				this.bgOdds.size = 25,
				this.bgOdds.textColor = 16113323,
				this.bgOdds.name = "single_double",
				this.bgOdds.x = 0,
				this.bgOdds.y = o,
				this.addObj(this.bgOdds, this.groupSettle)),
				this.groupSettle.setChildIndex(this.bgSettle, 999),
				null != this.bgOdds && this.groupSettle.contains(this.bgOdds) && this.groupSettle.setChildIndex(this.bgOdds, 999),
				null != this.lineInterval && this.groupSettle.contains(this.lineInterval) && this.groupSettle.setChildIndex(this.lineInterval, 1001),
				this.groupSettle.setChildIndex(this.lbSettleTopTip, 1002),
				this.groupSettle.setChildIndex(this.lbSettleTopTipTime, 1002);
				var _ = 0
				  , p = this.groupSettle.height / 2
				  , u = this.groupSettle.width
				  , g = u / 30
				  , c = (this.options.MaxData - this.options.MinData) / 2 * .4
				  , m = s + c
				  , y = s - c;
				if (0 == n)
					p = this.groupSettle.height / 2;
				else if (n > 0) {
					var v = m
					  , l = n / (v - s) * (this.groupSettle.height / 2 - 25);
					l > this.groupSettle.height / 2 - 25 && (l = this.groupSettle.height / 2 - 25),
					p = this.groupSettle.height / 2 - l
				} else if (0 > n) {
					var v = y
					  , l = Math.abs(n) / (s - v) * (this.groupSettle.height / 2 - 25);
					l > this.groupSettle.height / 2 - 25 && (l = this.groupSettle.height / 2 - 25),
					p = this.groupSettle.height / 2 + l
				}
				t = 30 - t,
				_ = t * g,
				0 == this.lastLineIntervalX && null != this.lineInterval && (p = this.groupSettle.height / 2,
				this.lineInterval.graphics.lineTo(_, p)),
				_ >= this.groupSettle.width && (_ = 0 == e ? this.groupSettle.width - g / 2 : this.groupSettle.width);
				var b = new eui.Group;
				b.name = "lbGroupDianCha",
				b.width = 42,
				b.height = 100;
				var f = new eui.Image;
				f.width = 93,
				f.height = 42,
				f.x = -1 * f.width + 30 - 2,
				b.addChild(f);
				var C = parseFloat(a.toString()).toFixed(this.options.roundPoint)
				  , T = C.substr(0, C.length - 1)
				  , S = C.substr(C.length - 1, 1)
				  , E = new eui.Label;
				E.text = T,
				E.textColor = 16777215,
				E.size = 15,
				E.textAlign = "center";
				var r = 16777215;
				0 == n ? r = 16777215 : n > 0 ? r = 16001316 : 0 > n && (r = 5169700);
				var w = new eui.Label;
				w.text = S,
				w.textColor = r,
				w.size = 25,
				w.textAlign = "center",
				E.x = f.x + (f.width - E.width) / 2 - 6,
				w.x = E.x + E.width + 2,
				n >= 0 ? (f.source = RES.getRes("bg_classical_kline_open_up_png"),
				f.y = -1 * f.height - 2,
				E.y = f.y + (f.height - E.height) / 2 - 4) : (f.source = RES.getRes("bg_classical_kline_open_down_png"),
				f.y = 0,
				E.y = f.y + (f.height - E.height) / 2 + 4),
				w.y = E.y - 4,
				b.addChild(E),
				b.addChild(w),
				b.y = p,
				b.x = _,
				this.addObj(b, this.groupSettle),
				this.lastLineIntervalX = _,
				this.lineInterval.graphics.lineTo(_, p),
				this.imgLineInterval.x = _ - 25,
				this.imgLineInterval.y = p - 25,
				p = 0;
				var I = new egret.Shape;
				I.graphics.lineStyle(.5, 97307852),
				I.graphics.moveTo(_, p),
				I.graphics.lineTo(_, this.groupSettle.height),
				I.name = "line_move",
				this.addObj(I, this.groupSettle);
				var L = new eui.Image;
				L.source = RES.getRes("icon_settle_timer_png"),
				L.width = 30,
				L.height = 30,
				L.x = _ - L.width / 2,
				L.y = this.groupSettle.height - L.height / 2,
				L.name = "settle_timer",
				this.addObj(L, this.groupSettle),
				this.groupSettle.setChildIndex(L, 999),
				this.groupSettle.setChildIndex(this.groupSettle.getChildByName("settle_end"), 1e3),
				this.groupSettle.setChildIndex(b, 1e3),
				this.lbSettleTopTipTime.y = 2,
				this.lbSettleTopTip.y = this.lbSettleTopTipTime.y,
				this.lbSettleTopTip.x = _ - L.width / 2 - 69,
				this.lbSettleTopTipTime.x = this.lbSettleTopTip.x + this.lbSettleTopTip.width + 3
			}
		}
		,
		i.prototype.drawLineTradeTimer = function(t) {
			var e = 0
			  , i = this.groupSettle.width
			  , n = i / 30;
			t = 30 - t,
			e = t * n,
			e >= this.groupTrade.width && (e = this.groupTrade.width);
			var a = 0
			  , s = new egret.Shape;
			s.graphics.lineStyle(.5, 97307852),
			s.graphics.moveTo(e, a),
			s.graphics.lineTo(e, this.groupTrade.height),
			s.name = "line_move",
			this.addObj(s, this.groupTrade);
			var o = new eui.Image;
			o.source = RES.getRes("icon_settle_timer_png"),
			o.width = 30,
			o.height = 30,
			o.x = e - o.width / 2,
			o.y = this.groupTrade.height - o.height / 2,
			o.name = "settle_timer",
			this.addObj(o, this.groupTrade),
			this.groupTrade.setChildIndex(o, 999),
			this.groupTrade.contains(this.groupTrade.getChildByName("settle_end")) && this.groupTrade.setChildIndex(this.groupTrade.getChildByName("settle_end"), 1e3),
			this.lbTradeTopTip.x = e - o.width / 2 - 69,
			this.lbTradeTopTipTime.x = this.lbTradeTopTip.x + this.lbTradeTopTip.width + 3
		}
		,
		i.prototype.updateTimeLabel = function(t) {
			10 > t && (t = "0" + t),
			30 == t && (t = "00"),
			this.lbTradeTopTipTime.text = "00:" + t,
			this.lbSettleTopTipTime.text = "00:" + t
		}
		,
		i.prototype.drawOpenPriceLine = function(t) {
			if (!(null == t || void 0 == t || t.length <= 0)) {
				var e = t[1]
				  , i = t[2]
				  , n = ((i - e).toFixed(this.options.roundPoint),
				this.options.KlineFlatColor)
				  , a = this.options.KlineFlatColor;
				e > i ? (n = this.options.KlineDownColor,
				a = this.options.KlineDownColor) : i > e ? (n = this.options.KlineUpColor,
				a = this.options.KlineUpColor) : (n = this.options.KlineUpColor,
				a = this.options.KlineFlatColor);
				var s = []
				  , o = 10 + this.options.KlineSpaceLeftWidth + 2
				  , r = (this.options.MaxData - e) * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop
				  , l = new egret.Shape;
				for (l.graphics.lineStyle(1, 13421772); o < 10 + this.options.KlineSpaceLeftWidth + this.options.KlineWidth - this.options.KlineSpaceRightWidth; )
					l.graphics.moveTo(o, r),
					l.graphics.lineTo(o + 3, r),
					o += 6;
				l.name = "lineOpenPrice",
				s.push(l),
				this.addObjArray(s, this.groupKline)
			}
		}
		,
		i.prototype.removeSettleGroup = function() {
			this.groupSettle.removeChildren(),
			this.groupSettle.visible = !1,
			this.groupSettleResult.visible = !1,
			this.removeEventListener(egret.Event.ENTER_FRAME, this.dotAnimation, this),
			this.removeEventListener(egret.Event.ENTER_FRAME, this.bgAnimation, this),
			0 == this.groupTrade.visible && this.drawTradeGroup();
			var t = this.groupTrade.getChildByName("lbTradeTopTip");
			null != t && void 0 != t && (t.text = "下注时间")
		}
		,
		i.prototype.removeTradeGroup = function(t) {
			30 == this.options.Diff ? (this.groupTrade.removeChildren(),
			this.groupTrade.visible = !1,
			0 == this.groupSettle.visible && (null != t && "" != t && void 0 != t && this.setOptions({
				Capital: t
			}),
			this.drawSettleGroup())) : (this.groupSettle.removeChildren(),
			this.groupSettle.visible = !1,
			this.groupSettleResult.visible = !1,
			this.removeEventListener(egret.Event.ENTER_FRAME, this.dotAnimation, this),
			this.removeEventListener(egret.Event.ENTER_FRAME, this.bgAnimation, this),
			0 == this.groupTrade.visible && this.drawTradeGroup())
		}
		,
		i.prototype.drawSettleGroup = function() {
			this.removeEventListener(egret.Event.ENTER_FRAME, this.bgAnimation, this),
			this.addEventListener(egret.Event.ENTER_FRAME, this.bgAnimation, this),
			this.groupSettle.visible = !0,
			this.groupSettle.removeChildren(),
			this.lastLineIntervalDraw = !1,
			this.lastLineIntervalX = 0;
			var t = 0
			  , e = 0
			  , i = (this.groupSettle.width,
			this.groupSettle.height)
			  , n = new egret.Shape;
			n.graphics.moveTo(0, 0),
			n.graphics.beginFill(3028333, 1),
			n.graphics.drawRect(0, 0, this.groupSettle.width, this.groupSettle.height),
			n.graphics.endFill(),
			this.groupSettle.addChild(n);
			var a = new egret.Shape;
			a.graphics.moveTo(0, 0),
			a.graphics.beginFill(0, .5),
			a.graphics.drawRect(0, 0, this.groupSettle.width, this.groupSettle.height),
			a.graphics.endFill(),
			this.groupSettle.addChild(a);
			var s = new egret.Shape;
			s.graphics.lineStyle(.5, 12368570);
			for (var e = 0, t = 0; e < this.groupSettle.height; )
				s.graphics.moveTo(t, e),
				s.graphics.lineTo(t, e + 3),
				e += 6;
			this.groupSettle.addChild(s);
			var o = new egret.Shape;
			o.graphics.lineStyle(2, 12368570);
			for (var e = this.groupSettle.height / 2, t = 0; t < this.groupSettle.width; )
				o.graphics.moveTo(t, e),
				t + 3 < this.groupSettle.width && o.graphics.lineTo(t + 3, e),
				t += 6;
			this.groupSettle.addChild(o);
			var r = new egret.Shape;
			r.graphics.lineStyle(2, 16533785);
			var e = 0
			  , t = this.groupSettle.width;
			r.graphics.moveTo(t, e),
			r.graphics.lineTo(t, this.groupSettle.height),
			this.groupSettle.addChild(r);
			var l = this.options.odds[3].interval_start
			  , h = this.options.odds[5].interval_start;
			"BTCCNY" == this.options.Capital ? (l = parseFloat(l).toFixed(this.options.roundPoint),
			h = parseFloat(h).toFixed(this.options.roundPoint)) : (l *= Math.pow(10, this.options.roundPoint),
			l = Math.round(l),
			h *= Math.pow(10, this.options.roundPoint),
			h = Math.round(h));
			var d = parseFloat(l) + parseFloat(h);
			this.rulerYArray = [];
			for (var _ = 3; 6 > _; _++) {
				var p = parseFloat(this.options.odds[_].interval_start);
				"BTCCNY" == this.options.Capital ? p = parseFloat(p.toFixed(this.options.roundPoint)) : (p *= Math.pow(10, this.options.roundPoint),
				p = Math.round(p));
				var e = 0
				  , t = 0;
				if (0 == p)
					e = this.groupSettle.height / 2;
				else if (p > 0) {
					var i = p / d * (this.groupSettle.height / 2);
					e = this.groupSettle.height / 2 - i
				} else if (0 > p) {
					var i = Math.abs(p) / d * (this.groupSettle.height / 2);
					e = this.groupSettle.height / 2 + i
				}
				var u = new egret.Shape;
				for (u.graphics.lineStyle(.5, 13421772),
				this.rulerYArray.push(e); t < this.groupSettle.width; )
					u.graphics.moveTo(t, e),
					u.graphics.lineTo(t + 2, e),
					t += 5;
				var g = new eui.Label;
				g.text = Math.abs(p).toString(),
				g.size = 15,
				this.groupSettle.addChild(g),
				g.x = this.groupSettle.width + 3,
				g.y = e - 7,
				this.groupSettle.addChild(u)
			}
			this.imgLineInterval = new eui.Image,
			this.imgLineInterval.source = RES.getRes("icon_dot_png"),
			this.imgLineInterval.width = 50,
			this.imgLineInterval.height = 50,
			this.imgLineInterval.visible = !1;
			var c = new eui.Image;
			c.source = RES.getRes("icon_settle_end_png"),
			c.width = 30,
			c.height = 30,
			c.x = this.groupSettle.width - c.width / 2,
			c.y = this.groupSettle.height - c.height / 2,
			c.name = "settle_end",
			this.groupSettle.addChild(c),
			this.groupSettle.addChild(this.imgLineInterval),
			this.lineInterval = new egret.Shape,
			this.lineInterval.graphics.lineStyle(2, 13421772),
			this.lineInterval.graphics.moveTo(0, this.groupSettle.height / 2),
			this.groupSettle.addChild(this.lineInterval),
			this.groupSettle.contains(this.lbSettleTopTip) || this.groupSettle.addChild(this.lbSettleTopTip),
			this.groupSettle.contains(this.lbSettleTopTipTime) || this.groupSettle.addChild(this.lbSettleTopTipTime)
		}
		,
		i.prototype.drawTradeGroup = function() {
			this.groupKline.contains(this.groupTrade) || this.groupKline.addChild(this.groupTrade),
			this.groupTrade.visible = !0,
			this.groupTrade.removeChildren(),
			this.lastLineIntervalX = 0;
			var t = 0
			  , e = 0
			  , i = (this.groupTrade.width,
			this.groupTrade.height,
			new egret.Shape);
			i.graphics.lineStyle(2, 16533785);
			var e = 0
			  , t = this.groupTrade.width;
			i.graphics.moveTo(t, e),
			i.graphics.lineTo(t, this.groupTrade.height),
			this.groupTrade.addChild(i);
			var n = new eui.Image;
			n.source = RES.getRes("icon_settle_end_png"),
			n.width = 30,
			n.height = 30,
			n.x = this.groupSettle.width - n.width / 2,
			n.y = this.groupSettle.height - n.height / 2,
			n.name = "settle_end",
			this.groupTrade.addChild(n),
			this.lineInterval = new egret.Shape,
			this.lineInterval.graphics.lineStyle(2, 13421772),
			this.lineInterval.graphics.moveTo(0, this.groupTrade.height / 2),
			this.groupTrade.addChild(this.lineInterval),
			this.groupKline.setChildIndex(this.groupTrade, 1e3),
			this.groupTrade.contains(this.lbTradeTopTip) || this.groupTrade.addChild(this.lbTradeTopTip),
			this.groupTrade.contains(this.lbTradeTopTipTime) || this.groupTrade.addChild(this.lbTradeTopTipTime)
		}
		,
		i.prototype.removeOpenPriceLine = function() {
			this.removeObj("lineOpenPrice", this.groupKline),
			this.removeObj("lineRuler", this.groupKline);
			for (var t = 3; 10 >= t; t++)
				this.removeObj("lineRulerPrice_" + t.toString(), this.groupKline),
				this.removeObj("lb_ruler_" + t.toString(), this.groupKline)
		}
		,
		i.prototype.drawMALine = function(t) {
			var e, i, n = new egret.Shape, a = new egret.Shape;
			n.name = "lineMA5",
			a.name = "lineMA10",
			n.graphics.lineStyle(1, this.options.MA5Color),
			a.graphics.lineStyle(1, this.options.MA10Color);
			for (var s = 0; s < t.length; s++)
				if (!(s >= this.options.CandleCount - this.options.LeftFixed || 0 == s)) {
					e = this.options.Coordinate[s][1] + 8 - (this.options.CandleWidth + this.options.CandleSpaceInterval) * this.options.LeftFixed;
					var o = this.options.MaxData - this.options.MinData
					  , r = t[s][5];
					r = this.options.MaxData - r,
					r && r > 0 && o >= r && (i = r * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop,
					0 == s ? n.graphics.moveTo(e, i) : n.graphics.lineTo(e, i)),
					r = t[s][6],
					r = this.options.MaxData - r,
					r && r > 0 && o >= r && (i = r * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop,
					0 == s ? a.graphics.moveTo(e, i) : a.graphics.lineTo(e, i))
				}
			n.graphics.endFill(),
			a.graphics.endFill(),
			this.addObjArray([n, a], this.groupKline)
		}
		,
		i.prototype.drawLastCandle = function(t) {
			var e, i, n, a, s, o, r, l, h, d, _, p = this.options.Ratio, u = this.options.KlineUpColor, g = this.options.KlineDownColor, c = this.options.KlineFlatColor, m = this.options.MaxData, y = (this.options.MinData,
			c), v = CONST.ODDS_IMG.FLAT;
			n = t[0],
			a = parseFloat(t[1]).toFixed(this.options.roundPoint),
			r = parseFloat(t[2]).toFixed(this.options.roundPoint),
			s = parseFloat(t[3]).toFixed(this.options.roundPoint),
			o = parseFloat(t[4]).toFixed(this.options.roundPoint),
			l = r - a,
			this.updateLastPricePanel(a, r, s, o),
			this.lastPrice = r,
			this.showRuler && (this.lastDianCha = l),
			a > r ? (y = g,
			_ = a,
			v = CONST.ODDS_IMG.DOWN) : r > a ? (y = u,
			_ = r,
			v = CONST.ODDS_IMG.UP) : (y = c,
			_ = r,
			v = CONST.ODDS_IMG.FLAT),
			h = Math.abs((a - r) * p),
			d = (s - o) * p,
			0 >= h && (h = 2),
			e = this.options.Coordinate[0][1] - (this.options.CandleWidth + this.options.CandleSpaceInterval) * this.options.LeftFixed,
			i = (m - _) * p + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop;
			var b = new egret.Shape
			  , f = new egret.Shape;
			if (b.name = "candleRect_last",
			f.name = "candleLine_last",
			n % 60 == 0 ? (b.graphics.moveTo(e, i),
			b.graphics.beginFill(y, 1),
			b.graphics.drawRect(e, i, this.options.CandleWidth, h),
			b.graphics.endFill()) : (b.graphics.lineStyle(2, y),
			b.graphics.moveTo(e, i),
			b.graphics.beginFill(3159410, 1),
			b.graphics.drawRect(e, i, this.options.CandleWidth, h),
			b.graphics.endFill()),
			e += this.options.CandleWidth / 2,
			i = (this.options.MaxData - s) * p + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop,
			f.graphics.lineStyle(2, y),
			f.graphics.moveTo(e, i),
			f.graphics.lineTo(e, i + d),
			f.graphics.endFill(),
			this.showRuler)
				null == this.imgArrow && (this.imgArrow = new eui.Image,
				this.imgArrow.width = 19,
				this.imgArrow.height = 20,
				this.imgArrow.x = e - this.imgArrow.width / 2,
				this.imgArrow.name = "last_candle_arrow"),
				a > r ? (this.imgArrow.source = RES.getRes("icon_kline_arrow_up_png"),
				this.imgArrow.y = i + d + 15) : r > a ? (this.imgArrow.source = RES.getRes("icon_kline_arrow_down_png"),
				this.imgArrow.y = i - this.imgArrow.height - 15) : (this.imgArrow.source = RES.getRes("icon_kline_arrow_down_png"),
				this.imgArrow.y = i - this.imgArrow.height - 15),
				this.addObj(this.imgArrow, this.groupKline);
			else {
				var C = this.groupKline.getChildByName("last_candle_arrow");
				null != C && this.groupKline.removeChild(C)
			}
			if (30 == this.options.Diff && n % 60 == 0) {
				e = this.options.Coordinate[0][1] - (this.options.CandleWidth + this.options.CandleSpaceInterval) * this.options.LeftFixed - this.options.CandleSpaceInterval - this.options.CandleWidth,
				i = this.groupKline.height - this.options.KlineSpaceBottomHeight - 25,
				null == this.lastOddsImg && (this.lastOddsImg = new eui.Image),
				this.lastOddsImg.name = "oddsRect_last",
				this.lastOddsImg.source = RES.getRes(v),
				this.lastOddsImg.width = 35,
				this.lastOddsImg.height = 25,
				this.lastOddsImg.x = e,
				this.lastOddsImg.y = i,
				this.groupKline.contains(this.lastOddsImg) || this.groupKline.addChild(this.lastOddsImg);
				var T = this.getWinOdds(l, r);
				if (null != this.pointDiffListener) {
					var S = parseFloat(l.toString());
					"BTCCNY" == this.options.Capital ? S = parseFloat(S.toFixed(this.options.roundPoint)) : (S *= Math.pow(10, this.options.roundPoint),
					S = Math.round(S)),
					this.pointDiffListener(S, T, this.thisObject)
				}
				null == this.lastLbOdds && (this.lastLbOdds = new eui.Label),
				this.lastLbOdds.name = "oddsLabel_last",
				1 == T.order ? this.lastLbOdds.text = "X" + parseFloat(T.odds) : this.lastLbOdds.text = T.display.substr(T.display.length - 1, 1),
				this.lastLbOdds.fontFamily = "lgzbFont",
				this.lastLbOdds.x = e,
				this.lastLbOdds.y = i + 3,
				this.lastLbOdds.width = 35,
				this.lastLbOdds.textAlign = "center",
				this.lastLbOdds.textColor = 16113323,
				this.lastLbOdds.stroke = 1,
				this.lastLbOdds.strokeColor = 789259,
				this.lastLbOdds.size = this.options.FontSize,
				this.groupKline.contains(this.lastLbOdds) || this.groupKline.addChild(this.lastLbOdds),
				this.groupKline.setChildIndex(this.lastOddsImg, 1e3),
				this.groupKline.setChildIndex(this.lastLbOdds, 1e3)
			}
			this.addObjArray([f, b], this.groupKline)
		}
		,
		i.prototype.addObj = function(t, e) {
			this.removeObj(t.name, e),
			e.addChild(t)
		}
		,
		i.prototype.addObjArray = function(t, e) {
			for (var i = 0; i < t.length; i++)
				this.addObj(t[i], e)
		}
		,
		i.prototype.removeObj = function(t, e) {
			var i = e.getChildByName(t);
			i && i.parent && (i.parent.removeChild(i),
			i = null)
		}
		,
		i.prototype.mergeCacheData = function(t, e, i) {
			var n = Utils.getStorageObj(t + e);
			if (n && n.length > 0 && i && i.length > 0)
				for (var a = 0; a < n.length; a++) {
					var s = n[a][0]
					  , o = i[i.length - 1][0];
					if (o >= s) {
						n.splice(0, a + 1);
						for (var r = i.length - 1; r >= 0; r--)
							n.unshift(i[r]);
						break
					}
				}
			return n
		}
		,
		i.prototype.getWinOdds = function(t, e) {
			var i = -100
			  , n = -100;
			i = 0 > t ? -1 : t > 0 ? 1 : 0;
			var a = parseFloat(e.toString()).toFixed(this.options.roundPoint)
			  , s = parseInt(a.substr(a.length - 1, 1));
			n = s % 2 == 1 ? 1 : 2;
			for (var o = 0; o < this.options.odds.length; o++)
				if (0 != this.options.odds[o].order && 2 != this.options.odds[o].order) {
					var r = this.options.odds[o].interval_start
					  , l = this.options.odds[o].interval_end;
					if (r == i && null == l || r == i && l == n)
						return 1 == this.options.odds[o].order ? this.options.odds[o] : this.options.odds[o]
				}
		}
		,
		i.prototype.getWinOddsList = function(t, e) {
			var i = -100
			  , n = -100;
			i = 0 > t ? -1 : t > 0 ? 1 : 0;
			var a = parseFloat(e.toString()).toFixed(this.options.roundPoint)
			  , s = parseInt(a.substr(a.length - 1, 1));
			n = s % 2 == 1 ? 1 : 2;
			for (var o = [], r = 0; r < this.options.odds.length; r++) {
				var l = this.options.odds[r].interval_start
				  , h = this.options.odds[r].interval_end;
				(l == i && null == h || l == i && h == n) && o.push(this.options.odds[r])
			}
			return o
		}
		,
		i.prototype.dotAnimation = function(t) {
			1 == this.type ? this.imgLineInterval.alpha <= 1 && this.imgLineInterval.alpha > 0 ? (this.imgLineInterval.alpha = (this.imgLineInterval.alpha - .02).toFixed(2),
			null != this.imgLineInterval1 && (this.imgLineInterval1.alpha = this.imgLineInterval.alpha)) : this.type = 0 : 0 == this.type && (this.imgLineInterval.alpha < 1 && this.imgLineInterval.alpha >= 0 ? (this.imgLineInterval.alpha = (this.imgLineInterval.alpha + .02).toFixed(2),
			null != this.imgLineInterval1 && (this.imgLineInterval1.alpha = this.imgLineInterval.alpha)) : this.type = 1)
		}
		,
		i.prototype.bgAnimation = function(t) {
			null != this.bgSettle && (1 == this.type1 ? this.bgSettle.alpha <= 1 && this.bgSettle.alpha > .2 ? (this.bgSettle.alpha = (this.bgSettle.alpha - .015).toFixed(2),
			null != this.bgOdds && (this.bgOdds.alpha = this.bgSettle.alpha),
			null != this.lastOddsImg && (this.lastOddsImg.alpha = this.bgSettle.alpha),
			null != this.lastLbOdds && (this.lastLbOdds.alpha = this.bgSettle.alpha),
			null != this.imgArrow && (this.imgArrow.alpha = this.bgOdds.alpha)) : this.type1 = 0 : 0 == this.type1 && (this.bgSettle.alpha < 1 && this.bgSettle.alpha >= .2 ? (this.bgSettle.alpha = (this.bgSettle.alpha + .015).toFixed(2),
			null != this.bgOdds && (this.bgOdds.alpha = this.bgSettle.alpha),
			null != this.lastOddsImg && (this.lastOddsImg.alpha = this.bgSettle.alpha),
			null != this.lastLbOdds && (this.lastLbOdds.alpha = this.bgSettle.alpha),
			null != this.imgArrow && (this.imgArrow.alpha = this.bgOdds.alpha)) : this.type1 = 1))
		}
		,
		i.prototype.partAdded = function(t, i) {
			e.prototype.partAdded.call(this, t, i)
		}
		,
		i.prototype.childrenCreated = function() {
			e.prototype.childrenCreated.call(this)
		}
		,
		i
	}(eui.Component);
	t.KlineMasterBar = e,
	__reflect(e.prototype, "game.KlineMasterBar", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i() {
			var t = e.call(this) || this;
			return t.type = 1,
			t.type1 = 1,
			t.lastLineIntervalX = 0,
			t.lastLineIntervalDraw = !1,
			t.rulerYArray = [],
			t.options = {
				Capital: "BTCCNY",
				Diff: 30,
				odds: [],
				roundPoint: 2,
				KlineWidth: 0,
				KlineHeight: 0,
				KlineSpaceLeftWidth: 0,
				KlineSpaceRightWidth: 80,
				KlineSpaceTopHeight: 5,
				KlineSpaceBottomHeight: 5,
				BorderWidth: 2,
				LineWidth: 1,
				BorderLineColor: 4670591,
				RightPriceColor: 5394067,
				GridBackColor: 2566750,
				KlineUpColor: 14492160,
				KlineDownColor: 3385873,
				KlineFlatColor: 16777215,
				MA5Color: 7321527,
				MA10Color: 8575232,
				BollColor: 13274818,
				DiffColor: 7321527,
				DeaColor: 14492160,
				RSI1Color: 13274818,
				RSI2Color: 8575232,
				RSI3Color: 7321527,
				FontSize: 15,
				VerticalCount: 4,
				HorizalCount: 5,
				CandleCount: 30,
				InitCandleCount: 60,
				LeftFixed: 4,
				CandleDataArr: null,
				MaxData: 0,
				MinData: 1e7,
				Ratio: 0,
				Coordinate: [],
				SpaceRatio: .8,
				CandleHeight: 0,
				CandleWidth: 0,
				CandleSpaceInterval: 5,
				ChartMarginBottom: 0,
				ChartMarginTop: 0,
				BottomTimeDiff: 6,
				VStep: 0,
				HStep: 0,
				MADisplay: !0
			},
			t.intervalArea = {},
			t.lastPrice = 0,
			t.lastDianCha = 0,
			t.showRuler = !1,
			t.klineSocketReady = !1,
			t.timerRectInterval = null,
			t.oldInterval = 0,
			t.alphaRectInterval = 1,
			t.alphaType = 0,
			t.addEventListener(eui.UIEvent.COMPLETE, t.createCompleteEvent, t),
			t.skinName = "resource/ui/main/KlineMasterBarV2Skin.exml",
			t
		}
		return __extends(i, e),
		i.prototype.klineSocketStatus = function() {
			return this.klineSocketReady
		}
		,
		i.prototype.setOptions = function(t) {
			"BTCCNY" == t.Capital ? (__extends(t, {
				roundPoint: 2
			}),
			this.imgCapital.source = RES.getRes("icon_btccny_png"),
			this.imgCapitalLogo.source = RES.getRes("icon_btccny_png")) : "EURUSD" == t.Capital ? (__extends(t, {
				roundPoint: 5
			}),
			this.imgCapital.source = RES.getRes("icon_eurusd_png"),
			this.imgCapitalLogo.source = RES.getRes("icon_eurusd_png")) : "XAUUSD" == t.Capital ? (__extends(t, {
				roundPoint: 2
			}),
			this.imgCapital.source = RES.getRes("icon_xauusd_png"),
			this.imgCapitalLogo.source = RES.getRes("icon_xauusd_png")) : "GBPUSD" == t.Capital ? (__extends(t, {
				roundPoint: 5
			}),
			this.imgCapital.source = RES.getRes("icon_gbpusd_png"),
			this.imgCapitalLogo.source = RES.getRes("icon_gbpusd_png")) : "LTCCNY" == t.Capital && (__extends(t, {
				roundPoint: 2
			}),
			this.imgCapital.source = RES.getRes("icon_ltccny_png"),
			this.imgCapitalLogo.source = RES.getRes("icon_ltccny_png")),
			__extends(this.options, t)
		}
		,
		i.prototype.getOptions = function() {
			return this.options
		}
		,
		i.prototype.setPointDiffListener = function(t, e) {
			this.thisObject = e,
			this.pointDiffListener = t
		}
		,
		i.prototype.moveKlineGroup = function() {
			egret.Tween.get(this.groupKline, {
				loop: !1
			}).to({
				x: -1 * (this.groupKline.width / 2)
			}, 1e3)
		}
		,
		i.prototype.moveBackKlineGroup = function() {
			egret.Tween.get(this.groupKline, {
				loop: !1
			}).to({
				x: 0
			}, 1e3)
		}
		,
		i.prototype.setTime = function(t) {
			this.serverTime = t;
			var e = Utils.convertTime(t, "hms");
			this.lbTime.text = e,
			t += 3e4,
			e = Utils.convertTime(t, "hhmm"),
			this.lbPeriod.text = e + "期",
			this.lbPeriod1.text = "第 " + e + " 期"
		}
		,
		i.getInstance = function(t) {
			return this._instance || t && (this._instance = new i),
			this._instance
		}
		,
		i.prototype.createCompleteEvent = function(e) {
			var i = this;
			this.removeEventListener(eui.UIEvent.COMPLETE, this.createCompleteEvent, this),
			this.btnTimeType.addEventListener(egret.TouchEvent.TOUCH_TAP, this.clickTimeType, this),
			this.btnTimeTypeCurrent.addEventListener(egret.TouchEvent.TOUCH_TAP, this.clickTimeType, this),
			this.btnTimeType30s.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeTimeType, this),
			this.btnTimeType1m.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeTimeType, this),
			this.btnTimeType3m.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeTimeType, this),
			this.btnTimeType5m.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeTimeType, this),
			this.btnTimeType15m.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeTimeType, this),
			this.groupTimeTypeOut.addEventListener(egret.TouchEvent.TOUCH_TAP, this.clickTimeTypeOut, this),
			this.groupLastPricePart1.addEventListener(egret.TouchEvent.TOUCH_TAP, this.clickTimeTypeOut, this),
			this.init(),
			this.groupSettle.x = 10 + this.options.KlineSpaceLeftWidth + 27 * (this.options.CandleWidth + this.options.CandleSpaceInterval) - 10,
			this.groupSettle.y = this.options.KlineSpaceTopHeight;
			var n = 10 + this.options.KlineWidth + this.options.KlineSpaceRightWidth - 3;
			this.groupSettle.width = n - (this.options.KlineSpaceLeftWidth + 27 * (this.options.CandleWidth + this.options.CandleSpaceInterval)),
			this.groupSettle.height = this.options.KlineHeight,
			this.groupTrade.x = this.groupSettle.x,
			this.groupTrade.y = this.groupSettle.y,
			this.groupTrade.width = this.groupSettle.width,
			this.groupTrade.height = this.groupSettle.height,
			this.lb_settle_history.addEventListener(egret.TouchEvent.TOUCH_END, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
				i.openSettleHistory()
			}, this),
			this.lb_kline_help.addEventListener(egret.TouchEvent.TOUCH_END, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
				t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_KLINE_HEPL)
			}, this)
		}
		,
		i.prototype.openSettleHistory = function() {
			var e = Array();
			e.capital = this.options.Capital,
			t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_SETTLE_HISTORY, e)
		}
		,
		i.prototype.clickTimeType = function(e) {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
			0 == this.groupTimeTypeDD.visible ? (this.groupTimeTypeOut.visible = !0,
			this.groupTimeTypeDD.visible = !0,
			this.setChildIndex(this.groupTimeTypeOut, 99),
			this.setChildIndex(this.groupLastPrice, 100)) : (this.groupTimeTypeOut.visible = !1,
			this.groupTimeTypeDD.visible = !1,
			this.setChildIndex(this.groupTimeTypeOut, 0))
		}
		,
		i.prototype.clickTimeTypeOut = function(t) {
			this.groupTimeTypeOut.visible = !1,
			this.groupTimeTypeDD.visible = !1,
			this.setChildIndex(this.groupTimeTypeOut, 0)
		}
		,
		i.prototype.changeTimeType = function(e) {
			if (t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
			this.groupTimeTypeDD.visible = !1,
			e.currentTarget.name != this.btnTimeType.name) {
				this.btnTimeType.name = e.currentTarget.name,
				this.btnTimeType.img.source = e.currentTarget.img.source,
				this.btnTimeType.img.source.down = e.currentTarget.img.source.down,
				this.btnTimeTypeCurrent.name = e.currentTarget.name,
				this.btnTimeTypeCurrent.img.source = e.currentTarget.img.source,
				this.btnTimeTypeCurrent.img.source.down = e.currentTarget.img.source.down;
				var i = e.currentTarget.name;
				this.setOptions({
					Diff: i
				}),
				this.initKlineSocket(this.options.Capital, i),
				30 != i && this.removeSettleGroup()
			}
		}
		,
		i.prototype.updateLastPricePanel = function(t, e, i, n) {
			this.lbLastPrice.text = parseFloat(e).toFixed(this.options.roundPoint),
			this.lbOpen.text = parseFloat(t).toFixed(this.options.roundPoint),
			e > this.lastPrice ? this.imgUpDown.source = RES.getRes("icon-shang1_png") : e < this.lastPrice && (this.imgUpDown.source = RES.getRes("icon-xia1_png"))
		}
		,
		i.prototype.init = function() {
			this.options.KlineWidth = this.width - 27 - this.options.KlineSpaceLeftWidth - this.options.KlineSpaceRightWidth,
			this.options.KlineHeight = this.groupKline.height - this.options.KlineSpaceTopHeight - this.options.KlineSpaceBottomHeight,
			this.options.CandleHeight = this.options.KlineHeight * this.options.SpaceRatio,
			this.options.CandleWidth = parseFloat((this.options.KlineWidth / this.options.CandleCount - this.options.CandleSpaceInterval).toFixed(6)),
			this.options.ChartMarginTop = parseFloat(((this.options.KlineHeight - this.options.CandleHeight) / 2).toFixed(2)),
			this.options.VStep = this.options.KlineHeight / this.options.VerticalCount,
			this.options.HStep = this.options.KlineWidth / this.options.HorizalCount,
			this.groupKline.removeChildren(),
			this.drawRect(),
			this.drawGrid(),
			this.drawHorizalLine(),
			this.drawVerticalLine(),
			this.drawDemoCandle()
		}
		,
		i.prototype.drawRect = function() {}
		,
		i.prototype.drawGrid = function() {
			var t = 10 + this.options.KlineSpaceLeftWidth
			  , e = this.options.KlineSpaceTopHeight
			  , i = this.options.KlineWidth + this.options.KlineSpaceRightWidth - 3
			  , n = this.options.KlineHeight
			  , a = new egret.Shape;
			a.graphics.lineStyle(this.options.BorderWidth, this.options.BorderLineColor),
			a.graphics.moveTo(t, e),
			a.graphics.beginFill(this.options.GridBackColor, .5),
			a.graphics.drawRect(t, e, i, n),
			a.graphics.endFill(),
			this.groupKline.addChild(a)
		}
		,
		i.prototype.drawHorizalLine = function() {
			for (var t = this.options.HStep, e = 10 + this.options.KlineSpaceLeftWidth, i = this.options.KlineSpaceTopHeight, n = 0; n <= this.options.HorizalCount - 1; n++) {
				var a = e + n * t
				  , s = i
				  , o = new egret.Shape;
				if (0 == n)
					o.graphics.lineStyle(this.options.BorderWidth, this.options.BorderLineColor),
					o.graphics.moveTo(a, s),
					o.graphics.lineTo(a, s + this.options.KlineHeight + 10);
				else
					for (o.graphics.lineStyle(this.options.LineWidth, this.options.BorderLineColor); s < this.options.KlineSpaceTopHeight + this.options.KlineHeight; )
						o.graphics.moveTo(a, s),
						o.graphics.lineTo(a, s + 10),
						s += 15;
				o.graphics.endFill(),
				this.groupKline.addChild(o)
			}
		}
		,
		i.prototype.drawVerticalLine = function() {
			for (var t = this.options.VStep, e = 10 + this.options.KlineSpaceLeftWidth, i = this.options.KlineSpaceTopHeight, n = 1; n < this.options.VerticalCount; n++) {
				var a = e
				  , s = i + n * t
				  , o = new egret.Shape;
				for (o.graphics.lineStyle(this.options.LineWidth, this.options.BorderLineColor); a < this.options.KlineSpaceLeftWidth + this.options.KlineWidth + this.options.KlineSpaceRightWidth; )
					o.graphics.moveTo(a, s),
					o.graphics.lineTo(a + 10, s),
					a += 15;
				o.graphics.endFill(),
				this.groupKline.addChild(o)
			}
		}
		,
		i.prototype.drawDemoCandle = function() {
			var t = []
			  , e = 0
			  , i = 0
			  , n = new eui.Image;
			n.source = RES.getRes("bg_kline_top_1_png"),
			n.width = 113.3,
			n.height = 30.8,
			n.x = 15,
			n.y = 6,
			n.name = "bg_kline_top_1",
			t.push(n);
			var a = new egret.Shape;
			a.name = "candleRect_demo1";
			var s = new egret.Shape;
			s.name = "candleLine_demo1",
			e = 10 + this.options.KlineSpaceLeftWidth + 14,
			i = this.options.KlineSpaceTopHeight + 10 + 1,
			a.graphics.lineStyle(1, 8686003),
			a.graphics.moveTo(e, i),
			a.graphics.drawRect(e, i, 8, 10),
			a.graphics.endFill(),
			s.graphics.lineStyle(1, 8686003),
			s.graphics.moveTo(e + 4, i - 4),
			s.graphics.lineTo(e + 4, i),
			s.graphics.moveTo(e + 4, i + 10),
			s.graphics.lineTo(e + 4, i + 10 + 4),
			s.graphics.endFill();
			var o = new eui.Label;
			o.text = "下注",
			o.size = this.options.FontSize,
			o.textColor = 16777215,
			o.x = e + 4 + 8 + 2,
			o.y = i - 2,
			o.name = "lbDemo1",
			t.push(s),
			t.push(a),
			t.push(o);
			var r = new egret.Shape;
			r.name = "candleRect_demo2";
			var l = new egret.Shape;
			l.name = "candleLine_demo2",
			e = o.x + o.width + 8,
			i = i,
			r.graphics.lineStyle(1, 8686003),
			r.graphics.moveTo(e, i),
			r.graphics.beginFill(8686003, 1),
			r.graphics.drawRect(e, i, 8, 10),
			r.graphics.endFill(),
			l.graphics.lineStyle(1, 8686003),
			l.graphics.moveTo(e + 4, i - 4),
			l.graphics.lineTo(e + 4, i + 10 + 4),
			l.graphics.endFill();
			var h = new eui.Label;
			h.text = "开奖",
			h.size = this.options.FontSize,
			h.textColor = 16777215,
			h.x = e + 4 + 8 + 2,
			h.y = i - 2,
			h.name = "lbDemo2",
			t.push(l),
			t.push(r),
			t.push(h),
			this.addObjArray(t, this.groupKline),
			this.groupKline.addChild(this.group_kline_top),
			this.groupKline.setChildIndex(this.group_kline_top, 100)
		}
		,
		i.prototype.initSocket = function() {
			this.kline_socket = t.KlineSocket.getInstance(),
			this.kline_socket.setOptions(this.options),
			this.kline_socket.initSocket(this.user_id, this.token)
		}
		,
		i.prototype.initKlineSocket = function(t, e) {
			this.setOptions({
				Capital: t,
				Diff: e
			}),
			this.kline_socket.setOptions(this.options),
			this.kline_socket.initKlineSocket(t, e, this.user_id, this.token)
		}
		,
		i.prototype.Notification_Kline_Init = function(t) {
			if (null != t && void 0 != t && "undefined" != t) {
				var e = t.capitalType
				  , i = t.diff
				  , t = t.data;
				Utils.removeStorage(e + i),
				null == t || void 0 == t || "undefined" == t || t.length <= 0 || this.initSocketData(e, i, t)
			}
		}
		,
		i.prototype.Notification_Kline_Kline = function(e) {
			var i = e.capitalType
			  , n = e.diff
			  , e = e.data;
			if (e = this.mergeCacheData(i, n, e),
			!(null == e || void 0 == e || "undefined" == e || e.length <= 0)) {
				var a = e[1]
				  , s = a[0];
				if (30 == n && s % 60 == 0) {
					var o = a[2] - a[1];
					o = parseFloat(parseFloat(o.toString()).toFixed(this.options.roundPoint));
					var r = {
						period: Utils.convertTime(s, "hhmm"),
						point_diff: o,
						round_point: this.options.roundPoint
					}
					  , l = this.serverTime / 1e3
					  , h = l - s - 30;
					1 >= h && (t.AppFacade.getInstance().sendNotification(MainNotify.POINT_DIFF, r),
					this.lastDianCha = o,
					this.drawLineInterval(0, !0))
				}
				this.initSocketData(i, n, e)
			}
		}
		,
		i.prototype.Notification_Kline_Last_Kline = function(t) {
			var e = t[0]
			  , i = t[2]
			  , n = t[3]
			  , a = t[1]
			  , s = (a[1],
			a[2])
			  , o = (a[3],
			a[4],
			Utils.getStorageObj(i + n));
			if (o && o.length > 0 && o[0]) {
				var r = o[0][0];
				if (e > r)
					return
			}
			if (s > this.options.MaxData || s < this.options.MinData)
				return void (o && o.length > 0 && o[0] ? (this.options.MADisplay && (o = ZhiBiaoTools.getLastMAdata(o, a)),
				this.drawData(o),
				Utils.setStorageObj(i + n, o),
				this.showRuler ? this.drawOpenPriceLine(a) : this.removeOpenPriceLine()) : this.initKlineSocket(i, n));
			if (this.options.MADisplay) {
				var t = ZhiBiaoTools.getLastMAdata(this.options.CandleDataArr, a);
				this.drawMALine(t)
			}
			this.drawLastCandle(a),
			this.drawPriceLine(a)
		}
		,
		i.prototype.initSocketData = function(t, e, i) {
			i.length > this.options.InitCandleCount && i.splice(this.options.InitCandleCount, i.length - this.options.InitCandleCount),
			this.showRuler = !1;
			var n = i[0][0] % 60
			  , a = i[0][1];
			this.options.roundPoint = Utils.getRoundPoint(a),
			30 == e && 0 == n ? this.showRuler = !0 : this.showRuler = !1,
			this.options.MADisplay && (i = ZhiBiaoTools.getMAdata(i)),
			Utils.setStorageObj(t + e, i),
			this.drawData(i);
			this.showRuler ? this.drawOpenPriceLine(i[0]) : this.removeOpenPriceLine()
		}
		,
		i.prototype.drawData = function(t) {
			null == t || void 0 == t || t.length <= 0 || (this.getRatio(t),
			this.initCoordinate(t),
			this.drawCandles(t),
			this.drawKlineBottomTime(t),
			this.drawRightPrice(),
			this.drawLastCandle(t[0]),
			this.drawPriceLine(t[0]),
			this.options.CandleDataArr = t,
			this.options.MADisplay && this.drawMALine(t))
		}
		,
		i.prototype.getRatio = function(t) {
			this.options.MaxData = 0,
			this.options.MinData = 1e7;
			for (var e = 0; e < t.length && !(e >= this.options.CandleCount - this.options.LeftFixed); e++) {
				var i = t[e]
				  , n = (parseFloat(i[1]),
				parseFloat(i[2]),
				parseFloat(i[3]))
				  , a = parseFloat(i[4])
				  , s = 0
				  , o = 1e7;
				Math.pow(10, this.options.roundPoint) / 10;
				if (0 == e) {
					var r = parseFloat(this.options.odds[3].interval_start);
					n + r > this.options.MaxData && (s = n + r,
					this.options.MaxData = s),
					a - r < this.options.MinData && (o = a - r,
					this.options.MinData = o)
				} else
					n > this.options.MaxData && (s = n,
					this.options.MaxData = s),
					a < this.options.MinData && (o = a,
					this.options.MinData = o)
			}
			this.options.Ratio = this.options.CandleHeight / (this.options.MaxData - this.options.MinData)
		}
		,
		i.prototype.initCoordinate = function(t) {
			this.options.Coordinate = [];
			for (var e = this.options.CandleWidth, i = this.options.CandleSpaceInterval, n = this.options.KlineSpaceLeftWidth, a = this.options.KlineWidth, s = 8, o = 0; o < t.length; o++) {
				if (o > this.options.CandleCount)
					return;
				var r = [];
				r.push(n + a - o * (i + e)),
				r.push(r[0] - e + s),
				this.options.Coordinate.push(r)
			}
		}
		,
		i.prototype.drawCandles = function(t) {
			for (var e, i, n, a, s, o, r, l, h, d, _, p = this.options.Ratio, u = this.options.KlineUpColor, g = this.options.KlineDownColor, c = this.options.KlineFlatColor, m = this.options.MaxData, y = (this.options.MinData,
			c), v = CONST.ODDS_IMG.FLAT, b = [], f = t.length; f >= 0; f--)
				if (!(f >= this.options.CandleCount - this.options.LeftFixed)) {
					var C = new egret.Shape
					  , T = new egret.Shape;
					if (void 0 != t[f] && null != t[f] && (n = t[f][0],
					a = parseFloat(t[f][1]),
					s = parseFloat(t[f][2]),
					o = parseFloat(t[f][3]),
					r = parseFloat(t[f][4]),
					l = s - a,
					a > s ? (y = g,
					_ = a,
					v = CONST.ODDS_IMG.DOWN) : s > a ? (y = u,
					_ = s,
					v = CONST.ODDS_IMG.UP) : (y = c,
					_ = s,
					v = CONST.ODDS_IMG.FLAT),
					h = Math.abs((a - s) * p),
					d = (o - r) * p,
					2 >= h && (h = 2),
					1.5 >= d && (d = 1.5),
					e = this.options.Coordinate[f][1] - (this.options.CandleWidth + this.options.CandleSpaceInterval) * this.options.LeftFixed,
					i = (m - _) * p + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop - 1,
					n % 60 == 30 ? (C.graphics.lineStyle(2, y),
					C.graphics.moveTo(e, i),
					C.graphics.beginFill(3093103, 1),
					C.graphics.drawRect(e, i, this.options.CandleWidth, h),
					C.graphics.endFill()) : (C.graphics.moveTo(e, i),
					C.graphics.beginFill(y, 1),
					C.graphics.drawRect(e, i, this.options.CandleWidth, h),
					C.graphics.endFill()),
					0 == f ? C.name = "candleRect_last" : C.name = "candleRect_" + f,
					e += this.options.CandleWidth / 2,
					i = (m - o) * p + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop - .5,
					T.graphics.lineStyle(2, y),
					T.graphics.moveTo(e, i),
					T.graphics.lineTo(e, i + d),
					T.graphics.endFill(),
					0 == f ? T.name = "candleLine_last" : T.name = "candleLine_" + f,
					b.push(T),
					b.push(C),
					0 != f)) {
						var S = new eui.Image
						  , E = new eui.Label;
						if (0 == f)
							S.name = "oddsRect_last",
							E.name = "oddsLabel_last";
						else {
							var w = f;
							f % 2 != 0 && (w = f - 1),
							0 == w ? (S.name = "oddsRect_last",
							E.name = "oddsLabel_last") : (S.name = "oddsRect_" + w,
							E.name = "oddsLabel_" + w)
						}
						if (30 == this.options.Diff && n % 60 == 0) {
							e = this.options.Coordinate[f][1] - (this.options.CandleWidth + this.options.CandleSpaceInterval) * this.options.LeftFixed - this.options.CandleSpaceInterval - this.options.CandleWidth,
							i = this.groupKline.height - this.options.KlineSpaceBottomHeight - 25;
							var I = !1;
							f >= this.options.CandleCount - this.options.LeftFixed - 1 && (I = !0);
							var L = this.getOdds(l);
							if (S.source = RES.getRes(v),
							S.width = 35,
							S.height = 25,
							S.x = e,
							S.y = i,
							E.text = "X" + L.toString(),
							E.fontFamily = "lgzbFont",
							E.x = e,
							E.y = i + 3,
							E.width = 35,
							E.textAlign = "center",
							E.textColor = 16113323,
							E.stroke = 1,
							E.strokeColor = 789259,
							E.size = this.options.FontSize,
							I) {
								this.removeObj(E.name, this.groupKline),
								this.removeObj(S.name, this.groupKline);
								continue
							}
							b.push(S),
							b.push(E)
						} else
							this.removeObj(E.name, this.groupKline),
							this.removeObj(S.name, this.groupKline),
							this.removeObj("oddsLabel_back", this.groupKline)
					}
				}
			this.addObjArray(b, this.groupKline)
		}
		,
		i.prototype.drawKlineBottomTime = function(t) {
			for (var e = [], i = 0; i < t.length; i++)
				i > this.options.CandleCount || (i - 2 == 0 ? e.push(t[i][0]) : (i - 2) % this.options.BottomTimeDiff == 0 && e.push(t[i - 2][0]));
			for (var n = 10 + this.options.KlineSpaceLeftWidth + this.options.KlineWidth - 6 * (this.options.CandleWidth + this.options.CandleSpaceInterval), a = this.options.KlineHeight + 10, s = this.options.BottomTimeDiff * (this.options.CandleWidth + this.options.CandleSpaceInterval), o = [], r = null, i = 0; i < e.length; i++)
				i != e.length - 1 && (r = new eui.Label,
				r.text = Utils.convertTime(e[i], "hm"),
				r.x = n - i * s - 17,
				r.y = a,
				r.size = this.options.FontSize,
				r.name = "lbBottomTime_" + i,
				o.push(r));
			this.addObjArray(o, this.groupKline)
		}
		,
		i.prototype.drawRightPrice = function() {
			for (var t = this.options.VStep / this.options.Ratio, e = this.options.MaxData - (this.options.MaxData - this.options.MinData) / 2, i = t + e, n = t + i, a = e - t, s = a - t, o = [n, i, e, a, s], r = this.options.KlineSpaceLeftWidth + this.options.KlineWidth + 15, l = 0; l < o.length; l++) {
				var h = l * this.options.VStep - 10;
				if (1 == l || 2 == l || 3 == l) {
					var d = new eui.Label;
					d.text = o[l].toFixed(this.options.roundPoint),
					d.size = this.options.FontSize,
					d.textColor = this.options.RightPriceColor,
					d.x = r,
					d.y = h,
					d.name = "lbRightPrice_" + l,
					d.width = 70,
					d.textAlign = egret.HorizontalAlign.RIGHT,
					this.addObj(d, this.groupKline),
					this.groupKline.setChildIndex(d, 999),
					this.groupKline.contains(this.groupTrade) && this.groupKline.setChildIndex(this.groupTrade, 1e3)
				}
			}
		}
		,
		i.prototype.drawPriceLine = function(t) {
			if (!(null == t || void 0 == t || t.length <= 0)) {
				var e = (t[0],
				t[1])
				  , i = t[2]
				  , n = t[3]
				  , a = t[4]
				  , s = i - e;
				"BTCCNY" == this.options.Capital ? s = parseFloat(s.toFixed(this.options.roundPoint)) : (s *= Math.pow(10, this.options.roundPoint),
				s = Math.round(s));
				var o = this.options.KlineFlatColor
				  , r = this.options.KlineFlatColor;
				e > i ? (o = this.options.KlineDownColor,
				r = 97283) : i > e ? (o = this.options.KlineUpColor,
				r = 14355464) : (o = this.options.KlineUpColor,
				r = 0);
				var l = 10 + this.options.KlineSpaceLeftWidth
				  , h = (this.options.MaxData - i) * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop
				  , d = (this.options.MaxData - e) * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop
				  , _ = (this.options.MaxData - n) * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop
				  , p = (this.options.MaxData - a) * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop
				  , u = new egret.Shape;
				u.graphics.lineStyle(.5, 16777215);
				var g = 0;
				u.graphics.moveTo(l, h),
				this.showRuler ? (g = 10 + this.options.KlineSpaceLeftWidth + 25 * (this.options.CandleWidth + this.options.CandleSpaceInterval),
				l += g,
				u.graphics.lineTo(l - this.options.CandleWidth / 2, h),
				null == this.imgLineInterval1 && (this.imgLineInterval1 = new eui.Image,
				this.imgLineInterval1.source = RES.getRes("icon_dot_png"),
				this.imgLineInterval1.width = 40,
				this.imgLineInterval1.height = 40,
				this.groupKline.addChild(this.imgLineInterval1)),
				this.groupKline.contains(this.imgLineInterval1) || this.groupKline.addChild(this.imgLineInterval1),
				this.imgLineInterval1.visible = !0,
				this.imgLineInterval1.x = l - 19,
				this.imgLineInterval1.y = h - 20,
				s > 0 ? this.imgLineInterval1.y = this.imgLineInterval1.y - 2 : 0 > s && (this.imgLineInterval1.y = this.imgLineInterval1.y + 2),
				this.groupKline.setChildIndex(this.imgLineInterval1, 1e3)) : (g = this.options.KlineWidth + this.options.KlineSpaceRightWidth - 3,
				u.graphics.lineTo(l + g - 120, h),
				null != this.imgLineInterval1 && (this.imgLineInterval1.visible = !1)),
				u.name = "linePrice";
				var c = parseFloat(e).toFixed(this.options.roundPoint)
				  , m = parseFloat(i).toFixed(this.options.roundPoint)
				  , y = new eui.Group;
				y.name = "lbTipPriceGroup";
				var v = new eui.Group;
				v.name = "lbTipPriceGroupUp";
				var b = new eui.Image
				  , f = new eui.Image;
				if (this.removeObj("bgDianCha", this.groupKline),
				this.removeObj("lbTipDianCha", this.groupKline),
				this.showRuler) {
					y.width = 150,
					y.height = 45,
					v.width = 150,
					v.height = 45,
					f.source = RES.getRes("bg_settle_price_up_png"),
					b.source = RES.getRes("bg_settle_price_down_png"),
					f.width = y.width,
					f.height = y.height,
					b.width = y.width,
					b.height = y.height,
					y.x = l - y.width - this.options.CandleWidth / 2,
					v.x = y.x;
					var C = new eui.Image;
					C.name = "bgDianCha",
					C.width = 16,
					C.height = 20,
					C.x = y.x + y.width;
					var T = new eui.Label;
					T.name = "lbTipDianCha",
					T.width = 40,
					T.text = Math.abs(s).toString(),
					T.textColor = o,
					T.size = 15,
					T.bold = !0,
					T.x = C.x - this.options.CandleWidth + 3,
					T.textAlign = "center",
					s > 0 ? (v.y = h - v.height,
					y.y = d,
					C.source = RES.getRes("icon_diancha_up_png"),
					C.y = _ - C.height - 10,
					T.y = C.y - T.height - 5) : 0 > s ? (v.y = d - v.height,
					y.y = h,
					C.source = RES.getRes("icon_diancha_down_png"),
					C.y = p + 10,
					T.y = C.y + C.height + 5) : (v.y = h - v.height,
					y.y = h,
					C.source = RES.getRes("icon_diancha_up_png"),
					C.y = _ - C.height - 10,
					T.y = C.y - T.height - 5),
					y.addChild(b),
					v.addChild(f),
					this.addObjArray([C, T], this.groupKline),
					this.groupKline.setChildIndex(T, 1006),
					this.groupBetAmount.visible = !1
				} else {
					y.height = 40,
					y.width = 120,
					l = 10 + this.options.KlineSpaceLeftWidth,
					y.y = h - y.height / 2,
					y.x = l + this.options.KlineWidth + this.options.KlineSpaceRightWidth - 3 - y.width,
					b.source = RES.getRes("bg_bet_price_png"),
					b.width = y.width,
					b.height = y.height;
					var S = y.y - this.groupBetAmount.height - 1;
					this.groupBetAmount.x = l + this.options.KlineWidth + this.options.KlineSpaceRightWidth - 3 - this.groupBetAmount.width,
					this.groupKline.contains(this.groupBetAmount) || this.groupKline.addChild(this.groupBetAmount),
					this.groupBetAmount.visible = !0,
					this.groupKline.setChildIndex(this.groupBetAmount, 1001),
					S <= this.options.KlineSpaceTopHeight + 30 ? this.groupBetAmount.y = y.y + y.height + 1 : this.groupBetAmount.y = S,
					y.y = h - y.height / 2,
					y.addChild(b)
				}
				if (this.showRuler) {
					var E = new eui.Label;
					E.text = "收",
					E.textColor = r,
					E.size = 18,
					E.x = 8,
					E.y = 13;
					var w = new eui.Label;
					if (w.text = "开",
					w.textColor = 0,
					w.size = 18,
					w.x = 8,
					w.y = 13,
					"BTCCNY" == this.options.Capital) {
						var I = m.split(".")
						  , L = I[0].substr(0, I[0].length - 2)
						  , P = I[0].substr(I[0].length - 2, I[0].length - 1)
						  , x = I[1]
						  , O = new eui.Label;
						O.text = L,
						O.textColor = 0,
						O.size = 20,
						O.x = E.x + E.width + 10,
						O.y = 13.5;
						var N = new eui.Label;
						N.text = P + "." + x,
						N.textColor = r,
						N.size = 25,
						N.x = O.x + O.width + 2,
						N.y = 11,
						I = c.split("."),
						L = I[0].substr(0, I[0].length - 2),
						P = I[0].substr(I[0].length - 2, I[0].length - 1),
						x = I[1];
						var A = new eui.Label;
						A.text = L,
						A.textColor = 0,
						A.size = 20,
						A.x = w.x + w.width + 10,
						A.y = 13.5;
						var k = new eui.Label;
						k.text = P + "." + x,
						k.textColor = 0,
						k.size = 25,
						k.x = A.x + A.width + 2,
						k.y = 11
					} else {
						var L = m.substr(0, m.length - 2)
						  , P = m.substr(m.length - 2)
						  , O = new eui.Label;
						O.text = L,
						O.textColor = 0,
						O.size = 20,
						O.x = E.x + E.width + 10,
						O.y = 13.5;
						var N = new eui.Label;
						N.text = P,
						N.textColor = r,
						N.size = 25,
						N.x = O.x + O.width + 2,
						N.y = 11,
						L = c.substr(0, c.length - 2),
						P = c.substr(c.length - 2);
						var A = new eui.Label;
						A.text = L,
						A.textColor = 0,
						A.size = 20,
						A.x = w.x + w.width + 10,
						A.y = 13.5;
						var k = new eui.Label;
						k.text = P,
						k.textColor = 0,
						k.size = 25,
						k.x = A.x + A.width + 2,
						k.y = 11
					}
					s > 0 ? (v.addChild(E),
					v.addChild(O),
					v.addChild(N),
					y.addChild(w),
					y.addChild(A),
					y.addChild(k)) : 0 > s ? (v.addChild(w),
					v.addChild(A),
					v.addChild(k),
					y.addChild(E),
					y.addChild(O),
					y.addChild(N)) : (v.addChild(w),
					v.addChild(A),
					v.addChild(k),
					y.addChild(E),
					y.addChild(O),
					y.addChild(N))
				} else if ("BTCCNY" == this.options.Capital) {
					var I = m.split(".")
					  , L = I[0].substr(0, I[0].length - 2)
					  , P = I[0].substr(I[0].length - 2, I[0].length - 1)
					  , x = I[1]
					  , R = new eui.Label;
					R.text = L,
					R.textColor = 0,
					R.size = 21,
					R.height = y.height,
					R.verticalAlign = "middle",
					R.x = 13,
					R.verticalAlign = "middle";
					var M = new eui.Label;
					M.text = P + "." + x,
					M.textColor = r,
					M.size = 25,
					M.height = y.height,
					M.x = R.x + R.width + 2,
					M.verticalAlign = "middle",
					y.addChild(R),
					y.addChild(M)
				} else {
					var L = m.substr(0, m.length - 2)
					  , P = m.substr(m.length - 2)
					  , R = new eui.Label;
					R.text = L,
					R.textColor = 0,
					R.size = 21,
					R.height = y.height,
					R.x = 20,
					R.verticalAlign = "middle";
					var M = new eui.Label;
					M.text = P,
					M.textColor = r,
					M.size = 25,
					M.height = y.height,
					M.x = R.x + R.width + 2,
					M.verticalAlign = "middle",
					y.addChild(R),
					y.addChild(M)
				}
				this.addObjArray([u, y, v], this.groupKline),
				this.groupKline.setChildIndex(y, 1001),
				this.groupKline.setChildIndex(v, 1001)
			}
		}
		,
		i.prototype.updateTotalBetAmount = function(t) {
			var e = Utils.moneyFormat(t, 2).toString();
			this.lbTotalBetAmount.text = e
		}
		,
		i.prototype.drawRectInterval = function() {
			var t = this;
			if (t.removeObj("rectInterval", t.groupKline),
			this.timerRectInterval && (clearInterval(this.timerRectInterval),
			this.timerRectInterval = null),
			0 == this.showRuler)
				return void t.removeObj("rectInterval", t.groupKline);
			for (var e in t.intervalArea)
				if (0 != t.intervalArea[e].c) {
					var i = t.intervalArea[e].i;
					t.oldInterval != i && (t.alphaType = 0,
					t.alphaType = 1,
					t.oldInterval = i),
					0 == t.alphaType ? (t.alphaRectInterval = t.alphaRectInterval - .1,
					t.alphaRectInterval <= .2 && (t.alphaType = 1)) : (t.alphaRectInterval = t.alphaRectInterval + .1,
					t.alphaRectInterval >= .9 && (t.alphaType = 0));
					var n = t.intervalArea[e].x
					  , a = t.intervalArea[e].y
					  , s = t.intervalArea[e].y2
					  , o = t.intervalArea[e].y2
					  , r = t.intervalArea[e].color;
					3 == i ? (o = a - s,
					a = s) : o = s - a;
					var l = new egret.Shape;
					l.name = "rectInterval",
					l.graphics.moveTo(n, a),
					l.graphics.beginFill(r, 1),
					l.graphics.drawRect(n, a, 80, o),
					l.alpha = t.alphaRectInterval,
					l.graphics.endFill(),
					t.addObjArray([l], t.groupKline)
				}
			null == this.timerRectInterval && (this.timerRectInterval = setInterval(function() {
				t.drawRectInterval()
			}, 100))
		}
		,
		i.prototype.drawLineInterval = function(t, e) {
			if (30 != this.options.Diff) {
				0 == this.groupTrade.visible && this.removeSettleGroup();
				var i = this.groupTrade.getChildByName("lbTradeTopTip");
				return null != i && void 0 != i && (i.text = "开奖时间"),
				void this.drawLineTradeTimer(t)
			}
			0 == this.groupSettle.visible && this.removeTradeGroup(null);
			var n = this.lastDianCha;
			if (this.groupSettle.contains(this.imgLineInterval) || this.groupSettle.addChild(this.imgLineInterval),
			this.imgLineInterval.visible || (this.imgLineInterval.visible = !0),
			this.removeEventListener(egret.Event.ENTER_FRAME, this.dotAnimation, this),
			this.addEventListener(egret.Event.ENTER_FRAME, this.dotAnimation, this),
			!this.lastLineIntervalDraw) {
				if (e)
					this.lastLineIntervalDraw = !0;
				else if (0 == t)
					return;
				var a = this.options.odds[3].interval_start
				  , s = this.options.odds[5].interval_start;
				"BTCCNY" == this.options.Capital ? (a = parseFloat(a).toFixed(this.options.roundPoint),
				s = parseFloat(s).toFixed(this.options.roundPoint)) : (a *= Math.pow(10, this.options.roundPoint),
				a = Math.round(a),
				s *= Math.pow(10, this.options.roundPoint),
				s = Math.round(s));
				var o = parseFloat(a) + parseFloat(s)
				  , r = this.getOddsObj(n)
				  , l = r.order
				  , h = 0
				  , d = 0
				  , _ = 0;
				1 == l ? (h = this.groupSettle.height / 2 - 15,
				_ = 30,
				d = 16777215) : 3 == l ? (h = 0,
				_ = this.rulerYArray[0],
				d = 16001316) : 4 == l ? (h = this.rulerYArray[0],
				_ = this.rulerYArray[1] - this.rulerYArray[0],
				d = 16001316) : 5 == l ? (h = this.rulerYArray[1],
				_ = this.rulerYArray[2] - this.rulerYArray[1],
				d = 16001316) : 6 == l ? (h = this.rulerYArray[2],
				_ = this.rulerYArray[3] - this.rulerYArray[2],
				d = 16001316) : 7 == l ? (h = this.rulerYArray[3],
				_ = this.rulerYArray[4] - this.rulerYArray[3],
				d = 5169700) : 8 == l ? (h = this.rulerYArray[4],
				_ = this.rulerYArray[5] - this.rulerYArray[4],
				d = 5169700) : 9 == l ? (h = this.rulerYArray[5],
				_ = this.rulerYArray[6] - this.rulerYArray[5],
				d = 5169700) : 10 == l && (h = this.rulerYArray[6],
				_ = this.groupSettle.height - this.rulerYArray[6],
				d = 5169700),
				this.bgSettle = new egret.Shape,
				this.bgSettle.graphics.moveTo(0, h),
				1 == l ? this.bgSettle.graphics.beginFill(d, .8) : this.bgSettle.graphics.beginFill(d, .5),
				this.bgSettle.graphics.drawRect(0, h, this.groupSettle.width, _),
				this.bgSettle.graphics.endFill(),
				this.bgSettle.name = "settle_bg",
				this.addObj(this.bgSettle, this.groupSettle),
				this.bgOdds = new eui.Label,
				1 == l ? this.bgOdds.text = "平" : this.bgOdds.text = r.display,
				this.bgOdds.fontFamily = "lgzbFont",
				this.bgOdds.width = this.groupSettle.width,
				this.bgOdds.height = _,
				this.bgOdds.textAlign = "center",
				this.bgOdds.verticalAlign = "middle",
				this.bgOdds.bold = !0,
				this.bgOdds.stroke = 1,
				this.bgOdds.size = 25,
				this.bgOdds.textColor = 16113323,
				this.bgOdds.name = "settle_odds",
				this.bgOdds.x = 0,
				this.bgOdds.y = h,
				this.addObj(this.bgOdds, this.groupSettle),
				this.groupSettle.setChildIndex(this.bgSettle, 999),
				this.groupSettle.setChildIndex(this.bgOdds, 999),
				this.groupSettle.setChildIndex(this.lineInterval, 1001),
				this.groupSettle.setChildIndex(this.lbSettleTopTip, 1002),
				this.groupSettle.setChildIndex(this.lbSettleTopTipTime, 1002),
				"BTCCNY" == this.options.Capital ? n = parseFloat(n.toFixed(this.options.roundPoint)) : (n *= Math.pow(10, this.options.roundPoint),
				n = Math.round(n)),
				n > o && (n = o),
				-1 * o > n && (n = -1 * o);
				var p = 0
				  , u = this.groupSettle.height / 2
				  , g = this.groupSettle.width
				  , c = g / 30;
				if (0 == n)
					u = this.groupSettle.height / 2;
				else if (n > 0) {
					var _ = n / o * (this.groupSettle.height / 2);
					u = this.groupSettle.height / 2 - _
				} else if (0 > n) {
					var _ = Math.abs(n) / o * (this.groupSettle.height / 2);
					u = this.groupSettle.height / 2 + _
				}
				t = 30 - t,
				p = t * c,
				0 == this.lastLineIntervalX && (u = this.groupSettle.height / 2,
				this.lineInterval.graphics.lineTo(p, u)),
				p >= this.groupSettle.width && (p = 0 == e ? this.groupSettle.width - c / 2 : this.groupSettle.width);
				var m = this.lastDianCha;
				"BTCCNY" == this.options.Capital ? m = parseFloat(m.toFixed(this.options.roundPoint)) : (m *= Math.pow(10, this.options.roundPoint),
				m = Math.round(m));
				var y = new eui.Group;
				y.name = "lbGroupDianCha",
				y.width = 40,
				y.height = 100;
				var v = new eui.Label;
				v.text = "",
				v.textColor = d,
				v.width = 40,
				v.size = 14,
				v.textAlign = "center";
				var b = new eui.Label;
				b.text = Math.abs(m).toString(),
				b.textColor = 16777215,
				b.width = 40,
				b.size = 14,
				b.textAlign = "center",
				v.x = 0,
				v.y = -15,
				b.x = 0,
				b.y = v.y + v.height + 15,
				m > 0 ? v.text = "上涨" : 0 > m ? v.text = "下跌" : v.text = "平",
				y.addChild(v),
				y.addChild(b),
				p >= this.groupSettle.width - 20 ? (y.x = p - 40,
				y.y = u) : (y.x = p,
				y.y = u),
				this.addObj(y, this.groupSettle),
				this.lastLineIntervalX = p,
				this.lineInterval.graphics.lineTo(p, u),
				this.imgLineInterval.x = p - 25,
				this.imgLineInterval.y = u - 25,
				u = 0;
				var f = new egret.Shape;
				f.graphics.lineStyle(.5, 97307852),
				f.graphics.moveTo(p, u),
				f.graphics.lineTo(p, this.groupSettle.height),
				f.name = "line_move",
				this.addObj(f, this.groupSettle);
				var C = new eui.Image;
				C.source = RES.getRes("icon_settle_timer_png"),
				C.width = 30,
				C.height = 30,
				C.x = p - C.width / 2,
				C.y = this.groupSettle.height - C.height / 2,
				C.name = "settle_timer",
				this.addObj(C, this.groupSettle),
				this.groupSettle.setChildIndex(C, 999),
				this.groupSettle.setChildIndex(this.groupSettle.getChildByName("settle_end"), 1e3),
				3 == l ? (this.lbSettleTopTipTime.y = C.y - this.lbSettleTopTipTime.height - 15,
				this.lbSettleTopTip.y = this.lbSettleTopTipTime.y) : (this.lbSettleTopTipTime.y = 2,
				this.lbSettleTopTip.y = this.lbSettleTopTipTime.y),
				this.lbSettleTopTip.x = p - C.width / 2 - 69,
				this.lbSettleTopTipTime.x = this.lbSettleTopTip.x + this.lbSettleTopTip.width + 3
			}
		}
		,
		i.prototype.drawLineTradeTimer = function(t) {
			var e = 0
			  , i = this.groupSettle.width
			  , n = i / 30;
			t = 30 - t,
			e = t * n,
			e >= this.groupTrade.width && (e = this.groupTrade.width);
			var a = 0
			  , s = new egret.Shape;
			s.graphics.lineStyle(.5, 97307852),
			s.graphics.moveTo(e, a),
			s.graphics.lineTo(e, this.groupTrade.height),
			s.name = "line_move",
			this.addObj(s, this.groupTrade);
			var o = new eui.Image;
			o.source = RES.getRes("icon_settle_timer_png"),
			o.width = 30,
			o.height = 30,
			o.x = e - o.width / 2,
			o.y = this.groupTrade.height - o.height / 2,
			o.name = "settle_timer",
			this.addObj(o, this.groupTrade),
			this.groupTrade.setChildIndex(o, 999),
			this.groupTrade.contains(this.groupTrade.getChildByName("settle_end")) && this.groupTrade.setChildIndex(this.groupTrade.getChildByName("settle_end"), 1e3),
			this.lbTradeTopTip.x = e - o.width / 2 - 69,
			this.lbTradeTopTipTime.x = this.lbTradeTopTip.x + this.lbTradeTopTip.width + 3
		}
		,
		i.prototype.updateTimeLabel = function(t) {
			10 > t && (t = "0" + t),
			30 == t && (t = "00"),
			this.lbTradeTopTipTime.text = "00:" + t,
			this.lbSettleTopTipTime.text = "00:" + t
		}
		,
		i.prototype.drawOpenPriceLine = function(t) {
			if (!(null == t || void 0 == t || t.length <= 0)) {
				var e = t[1]
				  , i = t[2]
				  , n = ((i - e).toFixed(this.options.roundPoint),
				this.options.KlineFlatColor)
				  , a = this.options.KlineFlatColor;
				e > i ? (n = this.options.KlineDownColor,
				a = this.options.KlineDownColor) : i > e ? (n = this.options.KlineUpColor,
				a = this.options.KlineUpColor) : (n = this.options.KlineUpColor,
				a = this.options.KlineFlatColor);
				var s = []
				  , o = 10 + this.options.KlineSpaceLeftWidth + 2
				  , r = (this.options.MaxData - e) * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop
				  , l = new egret.Shape;
				for (l.graphics.lineStyle(1, 13421772); o < 10 + this.options.KlineSpaceLeftWidth + this.options.KlineWidth - this.options.KlineSpaceRightWidth; )
					l.graphics.moveTo(o, r),
					l.graphics.lineTo(o + 3, r),
					o += 6;
				l.name = "lineOpenPrice",
				s.push(l);
				var o = this.groupSettle.x - 4
				  , r = this.options.KlineSpaceTopHeight
				  , h = new egret.Shape;
				h.graphics.lineStyle(1, 13421772),
				h.graphics.moveTo(o, r),
				h.graphics.lineTo(o, this.options.KlineSpaceTopHeight + this.options.KlineHeight),
				h.name = "lineRuler",
				s.push(h);
				for (var d = 0, _ = 3; 10 >= _; _++) {
					var p = this.options.odds[_]
					  , u = null
					  , g = 0;
					if (6 >= _)
						g = p.interval_start,
						u = p.interval_end,
						p = parseFloat(p.interval_start),
						(null == u || 0 == u || void 0 == u || 0 / 0 == u) && (u = "A");
					else {
						if (!(_ >= 7))
							continue;
						g = p.interval_end,
						u = p.interval_start,
						p = parseFloat(p.interval_end),
						(null == u || 0 == u || void 0 == u || 0 / 0 == u) && (u = "B")
					}
					p = this.options.MaxData - e - p;
					var r = p * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop
					  , o = this.groupSettle.x - 4
					  , c = new egret.Shape;
					c.graphics.lineStyle(1, 13421772),
					c.graphics.moveTo(o, r),
					c.graphics.lineTo(o - 7, r),
					7 == _ && (d = r),
					c.name = "lineRulerPrice_" + _.toString(),
					s.push(c);
					var m = null;
					"A" == u ? m = this.options.KlineSpaceTopHeight : "B" == u ? m = this.options.KlineSpaceTopHeight + this.options.KlineHeight - this.options.ChartMarginBottom : (u = this.options.MaxData - e - u,
					m = u * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop);
					var y = i - e
					  , v = this.getOddsIndex(y)
					  , b = !1;
					v == _ && (b = !0);
					var o = 10 + this.options.KlineSpaceLeftWidth + 26 * (this.options.CandleWidth + this.options.CandleSpaceInterval) + 2;
					this.intervalArea["i_" + _] = {
						i: _,
						x: o,
						y: r,
						y2: m,
						c: b,
						color: n
					};
					var f = new eui.Label;
					"BTCCNY" == this.options.Capital || (g *= Math.pow(10, this.options.roundPoint),
					g = Math.round(g)),
					g = Math.abs(g),
					f.text = g.toString(),
					f.size = 10,
					f.x = o + 5,
					f.y = r - 4,
					s.push(c),
					f.name = "lb_ruler_" + _.toString()
				}
				this.addObjArray(s, this.groupKline)
			}
		}
		,
		i.prototype.removeSettleGroup = function() {
			this.groupSettle.removeChildren(),
			this.groupSettle.visible = !1,
			this.removeEventListener(egret.Event.ENTER_FRAME, this.dotAnimation, this),
			this.removeEventListener(egret.Event.ENTER_FRAME, this.bgAnimation, this),
			0 == this.groupTrade.visible && this.drawTradeGroup();
			var t = this.groupTrade.getChildByName("lbTradeTopTip");
			null != t && void 0 != t && (t.text = "下注时间")
		}
		,
		i.prototype.removeTradeGroup = function(t) {
			30 == this.options.Diff ? (this.groupTrade.removeChildren(),
			this.groupTrade.visible = !1,
			0 == this.groupSettle.visible && (null != t && "" != t && void 0 != t && this.setOptions({
				Capital: t
			}),
			this.drawSettleGroup())) : (this.groupSettle.removeChildren(),
			this.groupSettle.visible = !1,
			this.removeEventListener(egret.Event.ENTER_FRAME, this.dotAnimation, this),
			this.removeEventListener(egret.Event.ENTER_FRAME, this.bgAnimation, this),
			0 == this.groupTrade.visible && this.drawTradeGroup())
		}
		,
		i.prototype.drawSettleGroup = function() {
			this.removeEventListener(egret.Event.ENTER_FRAME, this.bgAnimation, this),
			this.addEventListener(egret.Event.ENTER_FRAME, this.bgAnimation, this),
			this.groupSettle.visible = !0,
			this.groupSettle.removeChildren(),
			this.lastLineIntervalDraw = !1,
			this.lastLineIntervalX = 0;
			var t = 0
			  , e = 0
			  , i = (this.groupSettle.width,
			this.groupSettle.height)
			  , n = new egret.Shape;
			n.graphics.moveTo(0, 0),
			n.graphics.beginFill(3028333, 1),
			n.graphics.drawRect(0, 0, this.groupSettle.width, this.groupSettle.height),
			n.graphics.endFill(),
			this.groupSettle.addChild(n);
			var a = new egret.Shape;
			a.graphics.moveTo(0, 0),
			a.graphics.beginFill(0, .5),
			a.graphics.drawRect(0, 0, this.groupSettle.width, this.groupSettle.height),
			a.graphics.endFill(),
			this.groupSettle.addChild(a);
			var s = new egret.Shape;
			s.graphics.lineStyle(.5, 12368570);
			for (var e = 0, t = 0; e < this.groupSettle.height; )
				s.graphics.moveTo(t, e),
				s.graphics.lineTo(t, e + 3),
				e += 6;
			this.groupSettle.addChild(s);
			var o = new egret.Shape;
			o.graphics.lineStyle(2, 16533785);
			var e = 0
			  , t = this.groupSettle.width;
			o.graphics.moveTo(t, e),
			o.graphics.lineTo(t, this.groupSettle.height),
			this.groupSettle.addChild(o);
			var r = this.options.odds[3].interval_start
			  , l = this.options.odds[5].interval_start;
			"BTCCNY" == this.options.Capital ? (r = parseFloat(r).toFixed(this.options.roundPoint),
			l = parseFloat(l).toFixed(this.options.roundPoint)) : (r *= Math.pow(10, this.options.roundPoint),
			r = Math.round(r),
			l *= Math.pow(10, this.options.roundPoint),
			l = Math.round(l));
			var h = parseFloat(r) + parseFloat(l);
			this.rulerYArray = [];
			for (var d = 3; 10 > d; d++) {
				var _ = parseFloat(this.options.odds[d].interval_start);
				"BTCCNY" == this.options.Capital ? _ = parseFloat(_.toFixed(this.options.roundPoint)) : (_ *= Math.pow(10, this.options.roundPoint),
				_ = Math.round(_));
				var e = 0
				  , t = 0;
				if (0 == _)
					e = this.groupSettle.height / 2;
				else if (_ > 0) {
					var i = _ / h * (this.groupSettle.height / 2);
					e = this.groupSettle.height / 2 - i
				} else if (0 > _) {
					var i = Math.abs(_) / h * (this.groupSettle.height / 2);
					e = this.groupSettle.height / 2 + i
				}
				var p = new egret.Shape;
				for (p.graphics.lineStyle(.5, 13421772),
				this.rulerYArray.push(e); t < this.groupSettle.width; )
					p.graphics.moveTo(t, e),
					p.graphics.lineTo(t + 2, e),
					t += 5;
				var u = new eui.Label;
				u.text = Math.abs(_).toString(),
				u.size = 15,
				this.groupSettle.addChild(u),
				u.x = this.groupSettle.width + 3,
				u.y = e - 7,
				this.groupSettle.addChild(p)
			}
			this.imgLineInterval = new eui.Image,
			this.imgLineInterval.source = RES.getRes("icon_dot_png"),
			this.imgLineInterval.width = 50,
			this.imgLineInterval.height = 50,
			this.imgLineInterval.visible = !1;
			var g = new eui.Image;
			g.source = RES.getRes("icon_settle_end_png"),
			g.width = 30,
			g.height = 30,
			g.x = this.groupSettle.width - g.width / 2,
			g.y = this.groupSettle.height - g.height / 2,
			g.name = "settle_end",
			this.groupSettle.addChild(g),
			this.groupSettle.addChild(this.imgLineInterval),
			this.lineInterval = new egret.Shape,
			this.lineInterval.graphics.lineStyle(2, 13421772),
			this.lineInterval.graphics.moveTo(0, this.groupSettle.height / 2),
			this.groupSettle.addChild(this.lineInterval),
			this.groupSettle.contains(this.lbSettleTopTip) || this.groupSettle.addChild(this.lbSettleTopTip),
			this.groupSettle.contains(this.lbSettleTopTipTime) || this.groupSettle.addChild(this.lbSettleTopTipTime)
		}
		,
		i.prototype.drawTradeGroup = function() {
			this.groupKline.contains(this.groupTrade) || this.groupKline.addChild(this.groupTrade),
			this.groupTrade.visible = !0,
			this.groupTrade.removeChildren(),
			this.lastLineIntervalX = 0;
			var t = 0
			  , e = 0
			  , i = (this.groupTrade.width,
			this.groupTrade.height,
			new egret.Shape);
			i.graphics.lineStyle(2, 16533785);
			var e = 0
			  , t = this.groupTrade.width;
			i.graphics.moveTo(t, e),
			i.graphics.lineTo(t, this.groupTrade.height),
			this.groupTrade.addChild(i);
			var n = new eui.Image;
			n.source = RES.getRes("icon_settle_end_png"),
			n.width = 30,
			n.height = 30,
			n.x = this.groupSettle.width - n.width / 2,
			n.y = this.groupSettle.height - n.height / 2,
			n.name = "settle_end",
			this.groupTrade.addChild(n),
			this.lineInterval = new egret.Shape,
			this.lineInterval.graphics.lineStyle(2, 13421772),
			this.lineInterval.graphics.moveTo(0, this.groupTrade.height / 2),
			this.groupTrade.addChild(this.lineInterval),
			this.groupKline.setChildIndex(this.groupTrade, 1e3),
			this.groupTrade.contains(this.lbTradeTopTip) || this.groupTrade.addChild(this.lbTradeTopTip),
			this.groupTrade.contains(this.lbTradeTopTipTime) || this.groupTrade.addChild(this.lbTradeTopTipTime)
		}
		,
		i.prototype.removeOpenPriceLine = function() {
			this.removeObj("lineOpenPrice", this.groupKline),
			this.removeObj("lineRuler", this.groupKline);
			for (var t = 3; 10 >= t; t++)
				this.removeObj("lineRulerPrice_" + t.toString(), this.groupKline),
				this.removeObj("lb_ruler_" + t.toString(), this.groupKline)
		}
		,
		i.prototype.drawMALine = function(t) {
			var e, i, n = new egret.Shape, a = new egret.Shape;
			n.name = "lineMA5",
			a.name = "lineMA10",
			n.graphics.lineStyle(1, this.options.MA5Color),
			a.graphics.lineStyle(1, this.options.MA10Color);
			for (var s = 0; s < t.length; s++)
				if (!(s >= this.options.CandleCount - this.options.LeftFixed || 0 == s)) {
					e = this.options.Coordinate[s][1] + 8 - (this.options.CandleWidth + this.options.CandleSpaceInterval) * this.options.LeftFixed;
					var o = this.options.MaxData - this.options.MinData
					  , r = t[s][5];
					r = this.options.MaxData - r,
					r && r > 0 && o >= r && (i = r * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop,
					0 == s ? n.graphics.moveTo(e, i) : n.graphics.lineTo(e, i)),
					r = t[s][6],
					r = this.options.MaxData - r,
					r && r > 0 && o >= r && (i = r * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop,
					0 == s ? a.graphics.moveTo(e, i) : a.graphics.lineTo(e, i))
				}
			n.graphics.endFill(),
			a.graphics.endFill(),
			this.addObjArray([n, a], this.groupKline)
		}
		,
		i.prototype.drawLastCandle = function(t) {
			var e, i, n, a, s, o, r, l, h, d, _, p = this.options.Ratio, u = this.options.KlineUpColor, g = this.options.KlineDownColor, c = this.options.KlineFlatColor, m = this.options.MaxData, y = (this.options.MinData,
			c), v = CONST.ODDS_IMG.FLAT;
			n = t[0],
			a = parseFloat(t[1]).toFixed(this.options.roundPoint),
			r = parseFloat(t[2]).toFixed(this.options.roundPoint),
			s = parseFloat(t[3]).toFixed(this.options.roundPoint),
			o = parseFloat(t[4]).toFixed(this.options.roundPoint),
			l = r - a,
			this.updateLastPricePanel(a, r, s, o),
			this.lastPrice = r,
			this.showRuler && (this.lastDianCha = l),
			a > r ? (y = g,
			_ = a,
			v = CONST.ODDS_IMG.DOWN) : r > a ? (y = u,
			_ = r,
			v = CONST.ODDS_IMG.UP) : (y = c,
			_ = r,
			v = CONST.ODDS_IMG.FLAT),
			h = Math.abs((a - r) * p),
			d = (s - o) * p,
			0 >= h && (h = 2),
			e = this.options.Coordinate[0][1] - (this.options.CandleWidth + this.options.CandleSpaceInterval) * this.options.LeftFixed,
			i = (m - _) * p + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop;
			var b = new egret.Shape
			  , f = new egret.Shape;
			if (b.name = "candleRect_last",
			f.name = "candleLine_last",
			n % 60 == 0 ? (b.graphics.moveTo(e, i),
			b.graphics.beginFill(y, 1),
			b.graphics.drawRect(e, i, this.options.CandleWidth, h),
			b.graphics.endFill()) : (b.graphics.lineStyle(2, y),
			b.graphics.moveTo(e, i),
			b.graphics.beginFill(3159410, 1),
			b.graphics.drawRect(e, i, this.options.CandleWidth, h),
			b.graphics.endFill()),
			e += this.options.CandleWidth / 2,
			i = (this.options.MaxData - s) * p + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop,
			f.graphics.lineStyle(2, y),
			f.graphics.moveTo(e, i),
			f.graphics.lineTo(e, i + d),
			f.graphics.endFill(),
			30 == this.options.Diff && n % 60 == 0) {
				e = this.options.Coordinate[0][1] - (this.options.CandleWidth + this.options.CandleSpaceInterval) * this.options.LeftFixed - this.options.CandleSpaceInterval - this.options.CandleWidth,
				i = this.groupKline.height - this.options.KlineSpaceBottomHeight - 25,
				null == this.lastOddsImg && (this.lastOddsImg = new eui.Image),
				this.lastOddsImg.name = "oddsRect_last",
				this.lastOddsImg.source = RES.getRes(v),
				this.lastOddsImg.width = 35,
				this.lastOddsImg.height = 25,
				this.lastOddsImg.x = e,
				this.lastOddsImg.y = i,
				this.groupKline.contains(this.lastOddsImg) || this.groupKline.addChild(this.lastOddsImg);
				var C = this.getOdds(l)
				  , T = this.getOddsObj(l);
				if (null != this.pointDiffListener) {
					var S = parseFloat(l.toString());
					"BTCCNY" == this.options.Capital ? S = parseFloat(S.toFixed(this.options.roundPoint)) : (S *= Math.pow(10, this.options.roundPoint),
					S = Math.round(S)),
					this.pointDiffListener(S, T, this.thisObject)
				}
				null == this.lastLbOdds && (this.lastLbOdds = new eui.Label),
				this.lastLbOdds.name = "oddsLabel_last",
				this.lastLbOdds.text = "X" + C.toString(),
				this.lastLbOdds.fontFamily = "lgzbFont",
				this.lastLbOdds.x = e,
				this.lastLbOdds.y = i + 3,
				this.lastLbOdds.width = 35,
				this.lastLbOdds.textAlign = "center",
				this.lastLbOdds.textColor = 16113323,
				this.lastLbOdds.stroke = 1,
				this.lastLbOdds.strokeColor = 789259,
				this.lastLbOdds.size = this.options.FontSize,
				this.groupKline.contains(this.lastLbOdds) || this.groupKline.addChild(this.lastLbOdds),
				this.groupKline.setChildIndex(this.lastOddsImg, 1e3),
				this.groupKline.setChildIndex(this.lastLbOdds, 1e3);
				var E = this.getOddsIndex(l);
				for (var w in this.intervalArea)
					this.intervalArea[w].i == E ? (this.intervalArea[w].c = !0,
					this.intervalArea[w].color = y) : this.intervalArea[w].c = !1
			}
			this.addObjArray([f, b], this.groupKline)
		}
		,
		i.prototype.addObj = function(t, e) {
			this.removeObj(t.name, e),
			e.addChild(t)
		}
		,
		i.prototype.addObjArray = function(t, e) {
			for (var i = 0; i < t.length; i++)
				this.addObj(t[i], e)
		}
		,
		i.prototype.removeObj = function(t, e) {
			var i = e.getChildByName(t);
			i && i.parent && (i.parent.removeChild(i),
			i = null)
		}
		,
		i.prototype.mergeCacheData = function(t, e, i) {
			var n = Utils.getStorageObj(t + e);
			if (n && n.length > 0 && i && i.length > 0)
				for (var a = 0; a < n.length; a++) {
					var s = n[a][0]
					  , o = i[i.length - 1][0];
					if (o >= s) {
						n.splice(0, a + 1);
						for (var r = i.length - 1; r >= 0; r--)
							n.unshift(i[r]);
						break
					}
				}
			return n
		}
		,
		i.prototype.getOdds = function(t) {
			t = parseFloat(parseFloat(t.toString()).toFixed(this.options.roundPoint));
			for (var e = 0, i = 0; i < this.options.odds.length; i++)
				0 != this.options.odds[i].order && 2 != this.options.odds[i].order && (0 == t ? this.options.odds[i].interval_start == this.options.odds[i].interval_end && 1 == this.options.odds[i].order && (e = this.options.odds[i].odds) : 0 > t ? null == this.options.odds[i].interval_start || void 0 == this.options.odds[i].interval_start || "null" == this.options.odds[i].interval_start || "" == this.options.odds[i].interval_start ? t < this.options.odds[i].interval_end && (e = this.options.odds[i].odds) : t >= this.options.odds[i].interval_start && t < this.options.odds[i].interval_end && (e = this.options.odds[i].odds) : t > 0 && (null == this.options.odds[i].interval_end || void 0 == this.options.odds[i].interval_end || "null" == this.options.odds[i].interval_end || "" == this.options.odds[i].interval_end ? t > this.options.odds[i].interval_start && (e = this.options.odds[i].odds) : t > this.options.odds[i].interval_start && t <= this.options.odds[i].interval_end && (e = this.options.odds[i].odds)));
			return parseFloat(parseFloat(e.toString()).toFixed(1))
		}
		,
		i.prototype.getOddsObj = function(t) {
			t = parseFloat(parseFloat(t.toString()).toFixed(this.options.roundPoint));
			for (var e = null, i = 0; i < this.options.odds.length; i++)
				0 != this.options.odds[i].order && 2 != this.options.odds[i].order && (0 == t ? this.options.odds[i].interval_start == this.options.odds[i].interval_end && 1 == this.options.odds[i].order && (e = this.options.odds[i]) : 0 > t ? null == this.options.odds[i].interval_start || void 0 == this.options.odds[i].interval_start || "null" == this.options.odds[i].interval_start || "" == this.options.odds[i].interval_start ? t < this.options.odds[i].interval_end && (e = this.options.odds[i]) : t >= this.options.odds[i].interval_start && t < this.options.odds[i].interval_end && (e = this.options.odds[i]) : t > 0 && (null == this.options.odds[i].interval_end || void 0 == this.options.odds[i].interval_end || "null" == this.options.odds[i].interval_end || "" == this.options.odds[i].interval_end ? t > this.options.odds[i].interval_start && (e = this.options.odds[i]) : t > this.options.odds[i].interval_start && t <= this.options.odds[i].interval_end && (e = this.options.odds[i])));
			return e
		}
		,
		i.prototype.getOddsIndex = function(t) {
			t = parseFloat(parseFloat(t.toString()).toFixed(this.options.roundPoint));
			for (var e = 0, i = 0; i < this.options.odds.length; i++)
				0 != this.options.odds[i].order && 2 != this.options.odds[i].order && (0 == t ? this.options.odds[i].interval_start == this.options.odds[i].interval_end && 1 == this.options.odds[i].order && (e = i) : 0 > t ? null == this.options.odds[i].interval_start || void 0 == this.options.odds[i].interval_start || "null" == this.options.odds[i].interval_start || "" == this.options.odds[i].interval_start ? t < this.options.odds[i].interval_end && (e = i) : t >= this.options.odds[i].interval_start && t < this.options.odds[i].interval_end && (e = i) : t > 0 && (null == this.options.odds[i].interval_end || void 0 == this.options.odds[i].interval_end || "null" == this.options.odds[i].interval_end || "" == this.options.odds[i].interval_end ? t > this.options.odds[i].interval_start && (e = i) : t > this.options.odds[i].interval_start && t <= this.options.odds[i].interval_end && (e = i)));
			return e
		}
		,
		i.prototype.dotAnimation = function(t) {
			1 == this.type ? this.imgLineInterval.alpha <= 1 && this.imgLineInterval.alpha > 0 ? (this.imgLineInterval.alpha = (this.imgLineInterval.alpha - .02).toFixed(2),
			null != this.imgLineInterval1 && (this.imgLineInterval1.alpha = this.imgLineInterval.alpha)) : this.type = 0 : 0 == this.type && (this.imgLineInterval.alpha < 1 && this.imgLineInterval.alpha >= 0 ? (this.imgLineInterval.alpha = (this.imgLineInterval.alpha + .02).toFixed(2),
			null != this.imgLineInterval1 && (this.imgLineInterval1.alpha = this.imgLineInterval.alpha)) : this.type = 1)
		}
		,
		i.prototype.bgAnimation = function(t) {
			null != this.bgSettle && (1 == this.type1 ? this.bgSettle.alpha <= 1 && this.bgSettle.alpha > .2 ? (this.bgSettle.alpha = (this.bgSettle.alpha - .015).toFixed(2),
			this.bgOdds.alpha = this.bgSettle.alpha,
			null != this.lastOddsImg && (this.lastOddsImg.alpha = this.bgSettle.alpha),
			null != this.lastLbOdds && (this.lastLbOdds.alpha = this.bgSettle.alpha)) : this.type1 = 0 : 0 == this.type1 && (this.bgSettle.alpha < 1 && this.bgSettle.alpha >= .2 ? (this.bgSettle.alpha = (this.bgSettle.alpha + .015).toFixed(2),
			this.bgOdds.alpha = this.bgSettle.alpha,
			null != this.lastOddsImg && (this.lastOddsImg.alpha = this.bgSettle.alpha),
			null != this.lastLbOdds && (this.lastLbOdds.alpha = this.bgSettle.alpha)) : this.type1 = 1))
		}
		,
		i.prototype.partAdded = function(t, i) {
			e.prototype.partAdded.call(this, t, i)
		}
		,
		i.prototype.childrenCreated = function() {
			e.prototype.childrenCreated.call(this)
		}
		,
		i
	}(eui.Component);
	t.KlineMasterBarV2 = e,
	__reflect(e.prototype, "game.KlineMasterBarV2", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i() {
			var t = e.call(this) || this;
			return t.a = null,
			t.b = null,
			t.kline_data1 = ["1495727850", "15158.00", "15163.56", "15163.56", "15158.00"],
			t.kline_data2 = ["1495727880", "15163.56", "15163.56", "15163.56", "15163.56"],
			t.type = 1,
			t.type1 = 1,
			t.objData = {
				key: "BTCCNY30",
				data: [["1495727820", "15150.00", "15158.00", "15160.00", "15150.00"],
				["1495727790", "15146.00", "15150.00", "15155.00", "15144.00"],
				["1495727760", "15164.00", "15146.00", "15164.00", "15140.00"],
				["1495727730", "15180.00", "15164.00", "15183.00", "15164.00"],
				["1495727700", "15185.00", "15180.00", "15188.00", "15180.00"],
				["1495727670", "15188.00", "15185.00", "15195.00", "15180.00"],
				["1495727640", "15198.00", "15188.00", "15198.00", "15186.00"],
				["1495727610", "15195.00", "15198.00", "15200.00", "15192.00"],
				["1495727580", "15190.00", "15195.00", "15201.00", "15181.00"],
				["1495727550", "15184.00", "15190.00", "15191.00", "15182.00"],
				["1495727520", "15184.00", "15184.00", "15190.00", "15180.00"],
				["1495727490", "15186.00", "15184.00", "15190.00", "15181.00"],
				["1495727460", "15180.00", "15186.00", "15188.00", "15178.00"],
				["1495727430", "15178.00", "15180.00", "15184.00", "15175.00"],
				["1495727400", "15150.00", "15178.00", "15182.00", "15150.00"],
				["1495727370", "15142.00", "15150.00", "15155.00", "15140.00"],
				["1495727340", "15145.00", "15142.00", "15154.00", "15139.00"],
				["1495727310", "15146.00", "15145.00", "15150.00", "15141.00"],
				["1495727280", "15148.00", "15146.00", "15152.00", "15142.00"],
				["1495727250", "15168.00", "15148.00", "15175.00", "15140.00"],
				["1495727220", "15180.00", "15168.00", "15182.00", "15168.00"],
				["1495727190", "15211.00", "15180.00", "15193.00", "15175.00"],
				["1495727160", "15194.00", "15211.00", "15213.00", "15182.00"],
				["1495727130", "15190.00", "15194.00", "15195.00", "15187.00"],
				["1495727100", "15181.00", "15190.00", "15192.00", "15180.00"],
				["1495727070", "15172.00", "15181.00", "15178.00", "15169.00"],
				["1495727040", "15178.00", "15172.00", "15170.00", "15178.00"],
				["1495727010", "15183.00", "15178.00", "15188.00", "15175.00"],
				["1495726980", "15189.00", "15183.00", "15197.00", "15175.00"],
				["1495726950", "15193.00", "15189.00", "15193.00", "15181.00"],
				["1495726950", "15173.00", "15189.00", "15193.00", "15171.00"],
				["1495726950", "15170.00", "15173.00", "15179.00", "15188.00"],
				["1495726950", "15163.00", "15170.00", "15173.00", "15161.00"]],
				capitalType: "BTCCNY",
				diff: 30,
				decimalPoint: 5,
				time: "1495727880"
			},
			t.lastLineIntervalX = 0,
			t.lastLineIntervalDraw = !1,
			t.rulerYArray = [],
			t.options = {
				Capital: "BTCCNY",
				Diff: 30,
				odds: [],
				roundPoint: 2,
				KlineWidth: 0,
				KlineHeight: 0,
				KlineSpaceLeftWidth: 0,
				KlineSpaceRightWidth: 80,
				KlineSpaceTopHeight: 5,
				KlineSpaceBottomHeight: 5,
				BorderWidth: 2,
				LineWidth: 1,
				BorderLineColor: 4670591,
				RightPriceColor: 5394067,
				GridBackColor: 2566750,
				KlineUpColor: 14492160,
				KlineDownColor: 3385873,
				KlineFlatColor: 16777215,
				MA5Color: 7321527,
				MA10Color: 8575232,
				BollColor: 13274818,
				DiffColor: 7321527,
				DeaColor: 14492160,
				RSI1Color: 13274818,
				RSI2Color: 8575232,
				RSI3Color: 7321527,
				FontSize: 15,
				VerticalCount: 4,
				HorizalCount: 5,
				CandleCount: 30,
				InitCandleCount: 60,
				LeftFixed: 4,
				CandleDataArr: null,
				MaxData: 0,
				MinData: 1e7,
				Ratio: 0,
				Coordinate: [],
				SpaceRatio: .8,
				CandleHeight: 0,
				CandleWidth: 0,
				CandleSpaceInterval: 5,
				ChartMarginBottom: 0,
				ChartMarginTop: 0,
				BottomTimeDiff: 6,
				VStep: 0,
				HStep: 0,
				MADisplay: !0
			},
			t.intervalArea = {},
			t.lastPrice = 0,
			t.lastDianCha = 0,
			t.showRuler = !1,
			t.seconds = 30,
			t.klineSocketReady = !1,
			t.timerRectInterval = null,
			t.oldInterval = 0,
			t.alphaRectInterval = 1,
			t.alphaType = 0,
			t.addEventListener(eui.UIEvent.COMPLETE, t.createCompleteEvent, t),
			t.skinName = "resource/ui/main/KlineMasterBarV2Skin.exml",
			t
		}
		return __extends(i, e),
		i.prototype.klineSocketStatus = function() {
			return this.klineSocketReady
		}
		,
		i.prototype.setOptions = function(t) {
			"BTCCNY" == t.Capital ? (__extends(t, {
				roundPoint: 2
			}),
			this.imgCapital.source = RES.getRes("icon_btccny_png"),
			this.imgCapitalLogo.source = RES.getRes("icon_btccny_png")) : "EURUSD" == t.Capital ? (__extends(t, {
				roundPoint: 5
			}),
			this.imgCapital.source = RES.getRes("icon_eurusd_png"),
			this.imgCapitalLogo.source = RES.getRes("icon_eurusd_png")) : "XAUUSD" == t.Capital ? (__extends(t, {
				roundPoint: 2
			}),
			this.imgCapital.source = RES.getRes("icon_xauusd_png"),
			this.imgCapitalLogo.source = RES.getRes("icon_xauusd_png")) : "GBPUSD" == t.Capital ? (__extends(t, {
				roundPoint: 5
			}),
			this.imgCapital.source = RES.getRes("icon_gbpusd_png"),
			this.imgCapitalLogo.source = RES.getRes("icon_gbpusd_png")) : "LTCCNY" == t.Capital && (__extends(t, {
				roundPoint: 2
			}),
			this.imgCapital.source = RES.getRes("icon_ltccny_png"),
			this.imgCapitalLogo.source = RES.getRes("icon_ltccny_png")),
			__extends(this.options, t)
		}
		,
		i.prototype.getOptions = function() {
			return this.options
		}
		,
		i.prototype.setPointDiffListener = function(t, e) {
			this.thisObject = e,
			this.pointDiffListener = t
		}
		,
		i.prototype.moveKlineGroup = function() {
			egret.Tween.get(this.groupKline, {
				loop: !1
			}).to({
				x: -1 * (this.groupKline.width / 2)
			}, 1e3)
		}
		,
		i.prototype.moveBackKlineGroup = function() {
			egret.Tween.get(this.groupKline, {
				loop: !1
			}).to({
				x: 0
			}, 1e3)
		}
		,
		i.prototype.setTime = function(t) {
			this.serverTime = t;
			var e = Utils.convertTime(t, "hms");
			return this.lbTime.text = e,
			t += 3e4,
			e = Utils.convertTime(t, "hhmm"),
			this.lbPeriod.text = e + " 期",
			this.lbPeriod1.text = "第 " + e + " 期",
			e
		}
		,
		i.getInstance = function(t) {
			return this._instance || t && (this._instance = new i),
			this._instance
		}
		,
		i.prototype.createCompleteEvent = function(t) {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.createCompleteEvent, this),
			this.btnTimeType.addEventListener(egret.TouchEvent.TOUCH_TAP, this.clickTimeType, this),
			this.btnTimeTypeCurrent.addEventListener(egret.TouchEvent.TOUCH_TAP, this.clickTimeType, this),
			this.btnTimeType30s.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeTimeType, this),
			this.btnTimeType1m.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeTimeType, this),
			this.btnTimeType3m.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeTimeType, this),
			this.btnTimeType5m.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeTimeType, this),
			this.btnTimeType15m.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeTimeType, this),
			this.groupTimeTypeOut.addEventListener(egret.TouchEvent.TOUCH_TAP, this.clickTimeTypeOut, this),
			this.groupLastPricePart1.addEventListener(egret.TouchEvent.TOUCH_TAP, this.clickTimeTypeOut, this),
			this.init(),
			this.groupSettle.x = 10 + this.options.KlineSpaceLeftWidth + 27 * (this.options.CandleWidth + this.options.CandleSpaceInterval) - 10,
			this.groupSettle.y = this.options.KlineSpaceTopHeight;
			var e = 10 + this.options.KlineWidth + this.options.KlineSpaceRightWidth - 3;
			this.groupSettle.width = e - (this.options.KlineSpaceLeftWidth + 27 * (this.options.CandleWidth + this.options.CandleSpaceInterval)),
			this.groupSettle.height = this.options.KlineHeight,
			this.groupTrade.x = this.groupSettle.x,
			this.groupTrade.y = this.groupSettle.y,
			this.groupTrade.width = this.groupSettle.width,
			this.groupTrade.height = this.groupSettle.height
		}
		,
		i.prototype.clickTimeType = function(e) {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
			0 == this.groupTimeTypeDD.visible ? (this.groupTimeTypeOut.visible = !0,
			this.groupTimeTypeDD.visible = !0,
			this.setChildIndex(this.groupTimeTypeOut, 99),
			this.setChildIndex(this.groupLastPrice, 100)) : (this.groupTimeTypeOut.visible = !1,
			this.groupTimeTypeDD.visible = !1,
			this.setChildIndex(this.groupTimeTypeOut, 0))
		}
		,
		i.prototype.clickTimeTypeOut = function(t) {
			this.groupTimeTypeOut.visible = !1,
			this.groupTimeTypeDD.visible = !1,
			this.setChildIndex(this.groupTimeTypeOut, 0)
		}
		,
		i.prototype.changeTimeType = function(e) {
			if (t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
			this.groupTimeTypeDD.visible = !1,
			e.currentTarget.name != this.btnTimeType.name) {
				this.btnTimeType.name = e.currentTarget.name,
				this.btnTimeType.img.source = e.currentTarget.img.source,
				this.btnTimeType.img.source.down = e.currentTarget.img.source.down,
				this.btnTimeTypeCurrent.name = e.currentTarget.name,
				this.btnTimeTypeCurrent.img.source = e.currentTarget.img.source,
				this.btnTimeTypeCurrent.img.source.down = e.currentTarget.img.source.down;
				var i = e.currentTarget.name;
				this.setOptions({
					Diff: i
				}),
				this.initKlineSocket(this.options.Capital, i),
				30 != i && this.removeSettleGroup()
			}
		}
		,
		i.prototype.updateLastPricePanel = function(t, e, i, n) {
			this.lbLastPrice.text = parseFloat(e).toFixed(this.options.roundPoint),
			this.lbOpen.text = parseFloat(t).toFixed(this.options.roundPoint),
			e > this.lastPrice ? this.imgUpDown.source = RES.getRes("icon-shang1_png") : e < this.lastPrice && (this.imgUpDown.source = RES.getRes("icon-xia1_png"))
		}
		,
		i.prototype.init = function() {
			this.options.KlineWidth = this.width - 27 - this.options.KlineSpaceLeftWidth - this.options.KlineSpaceRightWidth,
			this.options.KlineHeight = this.groupKline.height - this.options.KlineSpaceTopHeight - this.options.KlineSpaceBottomHeight,
			this.options.CandleHeight = this.options.KlineHeight * this.options.SpaceRatio,
			this.options.CandleWidth = parseFloat((this.options.KlineWidth / this.options.CandleCount - this.options.CandleSpaceInterval).toFixed(6)),
			this.options.ChartMarginTop = parseFloat(((this.options.KlineHeight - this.options.CandleHeight) / 2).toFixed(2)),
			this.options.VStep = this.options.KlineHeight / this.options.VerticalCount,
			this.options.HStep = this.options.KlineWidth / this.options.HorizalCount,
			this.groupKline.removeChildren(),
			this.drawRect(),
			this.drawGrid(),
			this.drawHorizalLine(),
			this.drawVerticalLine(),
			this.drawDemoCandle()
		}
		,
		i.prototype.drawRect = function() {}
		,
		i.prototype.drawGrid = function() {
			var t = 10 + this.options.KlineSpaceLeftWidth
			  , e = this.options.KlineSpaceTopHeight
			  , i = this.options.KlineWidth + this.options.KlineSpaceRightWidth - 3
			  , n = this.options.KlineHeight
			  , a = new egret.Shape;
			a.graphics.lineStyle(this.options.BorderWidth, this.options.BorderLineColor),
			a.graphics.moveTo(t, e),
			a.graphics.beginFill(this.options.GridBackColor, .5),
			a.graphics.drawRect(t, e, i, n),
			a.graphics.endFill(),
			this.groupKline.addChild(a)
		}
		,
		i.prototype.drawHorizalLine = function() {
			for (var t = this.options.HStep, e = 10 + this.options.KlineSpaceLeftWidth, i = this.options.KlineSpaceTopHeight, n = 0; n <= this.options.HorizalCount - 1; n++) {
				var a = e + n * t
				  , s = i
				  , o = new egret.Shape;
				if (0 == n)
					o.graphics.lineStyle(this.options.BorderWidth, this.options.BorderLineColor),
					o.graphics.moveTo(a, s),
					o.graphics.lineTo(a, s + this.options.KlineHeight + 10);
				else
					for (o.graphics.lineStyle(this.options.LineWidth, this.options.BorderLineColor); s < this.options.KlineSpaceTopHeight + this.options.KlineHeight; )
						o.graphics.moveTo(a, s),
						o.graphics.lineTo(a, s + 10),
						s += 15;
				o.graphics.endFill(),
				this.groupKline.addChild(o)
			}
		}
		,
		i.prototype.drawVerticalLine = function() {
			for (var t = this.options.VStep, e = 10 + this.options.KlineSpaceLeftWidth, i = this.options.KlineSpaceTopHeight, n = 1; n < this.options.VerticalCount; n++) {
				var a = e
				  , s = i + n * t
				  , o = new egret.Shape;
				for (o.graphics.lineStyle(this.options.LineWidth, this.options.BorderLineColor); a < this.options.KlineSpaceLeftWidth + this.options.KlineWidth + this.options.KlineSpaceRightWidth; )
					o.graphics.moveTo(a, s),
					o.graphics.lineTo(a + 10, s),
					a += 15;
				o.graphics.endFill(),
				this.groupKline.addChild(o)
			}
		}
		,
		i.prototype.drawDemoCandle = function() {
			var t = []
			  , e = 0
			  , i = 0
			  , n = new eui.Image;
			n.source = RES.getRes("bg_kline_top_1_png"),
			n.width = 113.3,
			n.height = 30.8,
			n.x = 15,
			n.y = 6,
			n.name = "bg_kline_top_1",
			t.push(n);
			var a = new egret.Shape;
			a.name = "candleRect_demo1";
			var s = new egret.Shape;
			s.name = "candleLine_demo1",
			e = 10 + this.options.KlineSpaceLeftWidth + 14,
			i = this.options.KlineSpaceTopHeight + 10 + 1,
			a.graphics.lineStyle(1, 8686003),
			a.graphics.moveTo(e, i),
			a.graphics.drawRect(e, i, 8, 10),
			a.graphics.endFill(),
			s.graphics.lineStyle(1, 8686003),
			s.graphics.moveTo(e + 4, i - 4),
			s.graphics.lineTo(e + 4, i),
			s.graphics.moveTo(e + 4, i + 10),
			s.graphics.lineTo(e + 4, i + 10 + 4),
			s.graphics.endFill();
			var o = new eui.Label;
			o.text = "下注",
			o.size = this.options.FontSize,
			o.textColor = 16777215,
			o.x = e + 4 + 8 + 2,
			o.y = i - 2,
			o.name = "lbDemo1",
			t.push(s),
			t.push(a),
			t.push(o);
			var r = new egret.Shape;
			r.name = "candleRect_demo2";
			var l = new egret.Shape;
			l.name = "candleLine_demo2",
			e = o.x + o.width + 8,
			i = i,
			r.graphics.lineStyle(1, 8686003),
			r.graphics.moveTo(e, i),
			r.graphics.beginFill(8686003, 1),
			r.graphics.drawRect(e, i, 8, 10),
			r.graphics.endFill(),
			l.graphics.lineStyle(1, 8686003),
			l.graphics.moveTo(e + 4, i - 4),
			l.graphics.lineTo(e + 4, i + 10 + 4),
			l.graphics.endFill();
			var h = new eui.Label;
			h.text = "开奖",
			h.size = this.options.FontSize,
			h.textColor = 16777215,
			h.x = e + 4 + 8 + 2,
			h.y = i - 2,
			h.name = "lbDemo2",
			t.push(l),
			t.push(r),
			t.push(h),
			this.addObjArray(t, this.groupKline),
			this.groupKline.addChild(this.group_kline_top),
			this.groupKline.setChildIndex(this.group_kline_top, 100)
		}
		,
		i.prototype.initSocket = function() {
			this.kline_socket = t.KlineSocket.getInstance(),
			this.kline_socket.setOptions(this.options),
			this.kline_socket.initSocket(this.user_id, this.token)
		}
		,
		i.prototype.initKlineSocket = function(t, e) {
			this.setOptions({
				Capital: t,
				Diff: e
			}),
			this.kline_socket.setOptions(this.options),
			this.kline_socket.initKlineSocket(t, e, this.user_id, this.token)
		}
		,
		i.prototype.Notification_Kline_Init = function() {
			if (i = this.objData,
			null != i && void 0 != i && "undefined" != i) {
				var t = i.capitalType
				  , e = i.diff
				  , i = i.data;
				Utils.removeStorage(t + e),
				null == i || void 0 == i || "undefined" == i || i.length <= 0 || this.initSocketData(t, e, i)
			}
		}
		,
		i.prototype.Notification_Kline_Kline = function(e) {
			var i = e.capitalType
			  , n = e.diff
			  , e = e.data;
			if (e = this.mergeCacheData(i, n, e),
			!(null == e || void 0 == e || "undefined" == e || e.length <= 0)) {
				var a = e[1]
				  , s = a[0];
				if (30 == n && s % 60 == 0) {
					var o = a[2] - a[1];
					o = parseFloat(parseFloat(o.toString()).toFixed(this.options.roundPoint));
					var r = {
						period: Utils.convertTime(s, "hhmm"),
						point_diff: o,
						round_point: this.options.roundPoint
					}
					  , l = this.serverTime / 1e3
					  , h = l - s - 30;
					1 >= h && (t.AppFacade.getInstance().sendNotification(MainNotify.POINT_DIFF, r),
					this.lastDianCha = o,
					this.drawLineInterval(0, !0))
				}
				this.initSocketData(i, n, e)
			}
		}
		,
		i.prototype.Notification_Kline_Last_Kline = function(t) {
			var e = t[0]
			  , i = t[2]
			  , n = t[3]
			  , a = t[1]
			  , s = (a[1],
			a[2])
			  , o = (a[3],
			a[4],
			Utils.getStorageObj(i + n));
			if (o && o.length > 0 && o[0]) {
				var r = o[0][0];
				if (e > r)
					return
			}
			if (s > this.options.MaxData || s < this.options.MinData)
				return void (o && o.length > 0 && o[0] ? (this.options.MADisplay && (o = ZhiBiaoTools.getLastMAdata(o, a)),
				this.drawData(o),
				Utils.setStorageObj(i + n, o),
				this.showRuler ? this.drawOpenPriceLine(a) : this.removeOpenPriceLine()) : this.initKlineSocket(i, n));
			if (this.options.MADisplay) {
				var t = ZhiBiaoTools.getLastMAdata(this.options.CandleDataArr, a);
				this.drawMALine(t)
			}
			this.drawLastCandle(a),
			this.drawPriceLine(a)
		}
		,
		i.prototype.initSocketData = function(t, e, i) {
			i.length > this.options.InitCandleCount && i.splice(this.options.InitCandleCount, i.length - this.options.InitCandleCount),
			this.showRuler = !1;
			var n = i[0][0] % 60
			  , a = i[0][1];
			this.options.roundPoint = Utils.getRoundPoint(a),
			30 == e && 0 == n ? this.showRuler = !0 : this.showRuler = !1,
			this.options.MADisplay && (i = ZhiBiaoTools.getMAdata(i)),
			Utils.setStorageObj(t + e, i),
			this.drawData(i);
			this.showRuler ? this.drawOpenPriceLine(i[0]) : this.removeOpenPriceLine()
		}
		,
		i.prototype.newCandle = function(t) {
			1 == t ? this.b = this.kline_data1 : this.b = this.kline_data2;
			this.objData.data.unshift(this.b),
			this.Notification_Kline_Init(),
			this.a = this.b[2]
		}
		,
		i.prototype.startTimer = function(t) {
			var e = this
			  , i = "R";
			this.timer = setInterval(function() {
				var n = Math.random();
				n = 10 * n,
				2 == t ? e.seconds >= 16 && e.seconds <= 30 ? (e.seconds <= 30 && (e.b[2] = 15163.56),
				e.seconds <= 29 && (e.b[2] = 15162.01),
				e.seconds <= 28 && (e.b[2] = 15160.56),
				e.seconds <= 27 && (e.b[2] = 15158.81),
				e.seconds <= 26 && (e.b[2] = 15157.97),
				e.seconds <= 25 && (e.b[2] = 15158.1),
				e.seconds <= 24 && (e.b[2] = 15161.56),
				e.seconds <= 23 && (e.b[2] = 15163.22),
				e.seconds <= 22 && (e.b[2] = 15165.16),
				e.seconds <= 21 && (e.b[2] = 15167.36),
				e.seconds <= 20 && (e.b[2] = 15169.81),
				e.seconds <= 19 && (e.b[2] = 15171.01),
				e.seconds <= 18 && (e.b[2] = 15173.56),
				e.seconds <= 17 && (e.b[2] = 15175.16),
				e.seconds <= 16 && (e.b[2] = 15175.86)) : e.seconds >= 10 && e.seconds < 16 ? (e.seconds <= 15 && (e.b[2] = 15175.86),
				e.seconds <= 14 && (e.b[2] = 15174.01),
				e.seconds <= 13 && (e.b[2] = 15181.56),
				e.seconds <= 12 && (e.b[2] = 15183.16),
				e.seconds <= 11 && (e.b[2] = 15182.56),
				e.seconds <= 10 && (e.b[2] = 15182.11)) : e.seconds < 10 && (e.seconds <= 9 && (e.b[2] = 15182.56),
				e.seconds <= 8 && (e.b[2] = 15183.06),
				e.seconds <= 7 && (e.b[2] = 15183.96),
				e.seconds <= 6 && (e.b[2] = 15184.36),
				e.seconds <= 5 && (e.b[2] = 15186.36),
				e.seconds <= 4 && (e.b[2] = 15187.16),
				e.seconds <= 3 && (e.b[2] = 15189.26),
				e.seconds <= 2 && (e.b[2] = 15191.96),
				e.seconds <= 1 && (e.b[2] = 15192.56)) : (e.a = parseFloat(e.a),
				e.a <= 15153 ? (e.b[2] = parseFloat(e.a) + n + "",
				i = "R") : e.a >= 15165 ? (e.b[2] = e.a - n + "",
				i = "F") : "R" == i ? e.b[2] = e.a + n + "" : "F" == i && (e.b[2] = e.a - n + ""),
				e.seconds <= 5 && (e.b[2] = 15160.56),
				e.seconds <= 4 && (e.b[2] = 15161.56),
				e.seconds <= 3 && (e.b[2] = 15162.56),
				e.seconds <= 2 && (e.b[2] = 15163.56)),
				e.b[2] > e.b[3] && (e.b[3] = e.b[2]),
				e.b[2] < e.b[4] && (e.b[4] = e.b[2]),
				1 == t ? this.kline_data1 = e.b : this.kline_data2 = e.b;
				var a = [e.b[0], e.b, "BTCCNY", 30, 0];
				e.Notification_Kline_Last_Kline(a)
			}, 1e3)
		}
		,
		i.prototype.stopTimer = function() {
			clearInterval(this.timer)
		}
		,
		i.prototype.clearTimer = function(t) {
			if (2 == t) {
				this.kline_data2[2] = parseFloat(this.kline_data2[1]) + parseFloat("29") + "";
				var e = [this.kline_data2[0], this.kline_data2, "BTCCNY", 30, 0];
				this.Notification_Kline_Last_Kline(e)
			} else {
				this.kline_data1[2] = "15163.56";
				var e = [this.kline_data1[0], this.kline_data1, "BTCCNY", 30, 0];
				this.Notification_Kline_Last_Kline(e)
			}
			clearInterval(this.timer)
		}
		,
		i.prototype.drawData = function(t) {
			null == t || void 0 == t || t.length <= 0 || (this.getRatio(t),
			this.initCoordinate(t),
			this.drawCandles(t),
			this.drawKlineBottomTime(t),
			this.drawRightPrice(),
			this.drawLastCandle(t[0]),
			this.drawPriceLine(t[0]),
			this.options.CandleDataArr = t,
			this.options.MADisplay && this.drawMALine(t))
		}
		,
		i.prototype.getRatio = function(t) {
			this.options.MaxData = 0,
			this.options.MinData = 1e7;
			for (var e = 0; e < t.length && !(e >= this.options.CandleCount - this.options.LeftFixed); e++) {
				var i = t[e]
				  , n = (parseFloat(i[1]),
				parseFloat(i[2]),
				parseFloat(i[3]))
				  , a = parseFloat(i[4])
				  , s = 0
				  , o = 1e7;
				Math.pow(10, this.options.roundPoint) / 10;
				if (0 == e) {
					var r = parseFloat(this.options.odds[3].interval_start);
					n + r > this.options.MaxData && (s = n + r,
					this.options.MaxData = s),
					a - r < this.options.MinData && (o = a - r,
					this.options.MinData = o)
				} else
					n > this.options.MaxData && (s = n,
					this.options.MaxData = s),
					a < this.options.MinData && (o = a,
					this.options.MinData = o)
			}
			this.options.Ratio = this.options.CandleHeight / (this.options.MaxData - this.options.MinData)
		}
		,
		i.prototype.initCoordinate = function(t) {
			this.options.Coordinate = [];
			for (var e = this.options.CandleWidth, i = this.options.CandleSpaceInterval, n = this.options.KlineSpaceLeftWidth, a = this.options.KlineWidth, s = 8, o = 0; o < t.length; o++) {
				if (o > this.options.CandleCount)
					return;
				var r = [];
				r.push(n + a - o * (i + e)),
				r.push(r[0] - e + s),
				this.options.Coordinate.push(r)
			}
		}
		,
		i.prototype.drawCandles = function(t) {
			for (var e, i, n, a, s, o, r, l, h, d, _, p = this.options.Ratio, u = this.options.KlineUpColor, g = this.options.KlineDownColor, c = this.options.KlineFlatColor, m = this.options.MaxData, y = (this.options.MinData,
			c), v = CONST.ODDS_IMG.FLAT, b = [], f = t.length; f >= 0; f--)
				if (!(f >= this.options.CandleCount - this.options.LeftFixed)) {
					var C = new egret.Shape
					  , T = new egret.Shape;
					if (void 0 != t[f] && null != t[f] && (n = t[f][0],
					a = parseFloat(t[f][1]),
					s = parseFloat(t[f][2]),
					o = parseFloat(t[f][3]),
					r = parseFloat(t[f][4]),
					l = s - a,
					a > s ? (y = g,
					_ = a,
					v = CONST.ODDS_IMG.DOWN) : s > a ? (y = u,
					_ = s,
					v = CONST.ODDS_IMG.UP) : (y = c,
					_ = s,
					v = CONST.ODDS_IMG.FLAT),
					h = Math.abs((a - s) * p),
					d = (o - r) * p,
					2 >= h && (h = 2),
					1.5 >= d && (d = 1.5),
					e = this.options.Coordinate[f][1] - (this.options.CandleWidth + this.options.CandleSpaceInterval) * this.options.LeftFixed,
					i = (m - _) * p + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop - 1,
					n % 60 == 30 ? (C.graphics.lineStyle(2, y),
					C.graphics.moveTo(e, i),
					C.graphics.beginFill(3093103, 1),
					C.graphics.drawRect(e, i, this.options.CandleWidth, h),
					C.graphics.endFill()) : (C.graphics.moveTo(e, i),
					C.graphics.beginFill(y, 1),
					C.graphics.drawRect(e, i, this.options.CandleWidth, h),
					C.graphics.endFill()),
					0 == f ? C.name = "candleRect_last" : C.name = "candleRect_" + f,
					e += this.options.CandleWidth / 2,
					i = (m - o) * p + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop - .5,
					T.graphics.lineStyle(2, y),
					T.graphics.moveTo(e, i),
					T.graphics.lineTo(e, i + d),
					T.graphics.endFill(),
					0 == f ? T.name = "candleLine_last" : T.name = "candleLine_" + f,
					b.push(T),
					b.push(C),
					0 != f)) {
						var S = new eui.Image
						  , E = new eui.Label;
						if (0 == f)
							S.name = "oddsRect_last",
							E.name = "oddsLabel_last";
						else {
							var w = f;
							f % 2 != 0 && (w = f - 1),
							0 == w ? (S.name = "oddsRect_last",
							E.name = "oddsLabel_last") : (S.name = "oddsRect_" + w,
							E.name = "oddsLabel_" + w)
						}
						if (30 == this.options.Diff && n % 60 == 0) {
							e = this.options.Coordinate[f][1] - (this.options.CandleWidth + this.options.CandleSpaceInterval) * this.options.LeftFixed - this.options.CandleSpaceInterval - this.options.CandleWidth,
							i = this.groupKline.height - this.options.KlineSpaceBottomHeight - 25;
							var I = !1;
							f >= this.options.CandleCount - this.options.LeftFixed - 1 && (I = !0);
							var L = this.getOdds(l);
							if (S.source = RES.getRes(v),
							S.width = 35,
							S.height = 25,
							S.x = e,
							S.y = i,
							E.text = "X" + L.toString(),
							E.fontFamily = "lgzbFont",
							E.x = e,
							E.y = i + 3,
							E.width = 35,
							E.textAlign = "center",
							E.textColor = 16113323,
							E.stroke = 1,
							E.strokeColor = 789259,
							E.size = this.options.FontSize,
							I) {
								this.removeObj(E.name, this.groupKline),
								this.removeObj(S.name, this.groupKline);
								continue
							}
							b.push(S),
							b.push(E)
						} else
							this.removeObj(E.name, this.groupKline),
							this.removeObj(S.name, this.groupKline),
							this.removeObj("oddsLabel_back", this.groupKline)
					}
				}
			this.addObjArray(b, this.groupKline)
		}
		,
		i.prototype.drawKlineBottomTime = function(t) {
			for (var e = [], i = 0; i < t.length; i++)
				i > this.options.CandleCount || (i - 2 == 0 ? e.push(t[i][0]) : (i - 2) % this.options.BottomTimeDiff == 0 && e.push(t[i - 2][0]));
			for (var n = 10 + this.options.KlineSpaceLeftWidth + this.options.KlineWidth - 6 * (this.options.CandleWidth + this.options.CandleSpaceInterval), a = this.options.KlineHeight + 10, s = this.options.BottomTimeDiff * (this.options.CandleWidth + this.options.CandleSpaceInterval), o = [], r = null, i = 0; i < e.length; i++)
				i != e.length - 1 && (r = new eui.Label,
				r.text = Utils.convertTime(e[i], "hm"),
				r.x = n - i * s - 17,
				r.y = a,
				r.size = this.options.FontSize,
				r.name = "lbBottomTime_" + i,
				o.push(r));
			this.addObjArray(o, this.groupKline)
		}
		,
		i.prototype.drawRightPrice = function() {
			for (var t = this.options.VStep / this.options.Ratio, e = this.options.MaxData - (this.options.MaxData - this.options.MinData) / 2, i = t + e, n = t + i, a = e - t, s = a - t, o = [n, i, e, a, s], r = this.options.KlineSpaceLeftWidth + this.options.KlineWidth + 15, l = 0; l < o.length; l++) {
				var h = l * this.options.VStep - 10;
				if (1 == l || 2 == l || 3 == l) {
					var d = new eui.Label;
					d.text = o[l].toFixed(this.options.roundPoint),
					d.size = this.options.FontSize,
					d.textColor = this.options.RightPriceColor,
					d.x = r,
					d.y = h,
					d.name = "lbRightPrice_" + l,
					d.width = 70,
					d.textAlign = egret.HorizontalAlign.RIGHT,
					this.addObj(d, this.groupKline),
					this.groupKline.setChildIndex(d, 999),
					this.groupKline.contains(this.groupTrade) && this.groupKline.setChildIndex(this.groupTrade, 1e3)
				}
			}
		}
		,
		i.prototype.drawPriceLine = function(t) {
			if (!(null == t || void 0 == t || t.length <= 0)) {
				var e = (t[0],
				t[1])
				  , i = t[2]
				  , n = t[3]
				  , a = t[4]
				  , s = i - e;
				"BTCCNY" == this.options.Capital ? s = parseFloat(s.toFixed(this.options.roundPoint)) : (s *= Math.pow(10, this.options.roundPoint),
				s = Math.round(s));
				var o = this.options.KlineFlatColor
				  , r = this.options.KlineFlatColor;
				e > i ? (o = this.options.KlineDownColor,
				r = 97283) : i > e ? (o = this.options.KlineUpColor,
				r = 14355464) : (o = this.options.KlineUpColor,
				r = 0);
				var l = 10 + this.options.KlineSpaceLeftWidth
				  , h = (this.options.MaxData - i) * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop
				  , d = (this.options.MaxData - e) * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop
				  , _ = (this.options.MaxData - n) * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop
				  , p = (this.options.MaxData - a) * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop
				  , u = new egret.Shape;
				u.graphics.lineStyle(.5, 16777215);
				var g = 0;
				u.graphics.moveTo(l, h),
				this.showRuler ? (g = 10 + this.options.KlineSpaceLeftWidth + 25 * (this.options.CandleWidth + this.options.CandleSpaceInterval),
				l += g,
				u.graphics.lineTo(l - this.options.CandleWidth / 2, h),
				null == this.imgLineInterval1 && (this.imgLineInterval1 = new eui.Image,
				this.imgLineInterval1.source = RES.getRes("icon_dot_png"),
				this.imgLineInterval1.width = 40,
				this.imgLineInterval1.height = 40,
				this.groupKline.addChild(this.imgLineInterval1)),
				this.groupKline.contains(this.imgLineInterval1) || this.groupKline.addChild(this.imgLineInterval1),
				this.imgLineInterval1.visible = !0,
				this.imgLineInterval1.x = l - 19,
				this.imgLineInterval1.y = h - 20,
				s > 0 ? this.imgLineInterval1.y = this.imgLineInterval1.y - 2 : 0 > s && (this.imgLineInterval1.y = this.imgLineInterval1.y + 2),
				this.groupKline.setChildIndex(this.imgLineInterval1, 1e3)) : (g = this.options.KlineWidth + this.options.KlineSpaceRightWidth - 3,
				u.graphics.lineTo(l + g - 120, h),
				null != this.imgLineInterval1 && (this.imgLineInterval1.visible = !1)),
				u.name = "linePrice";
				var c = parseFloat(e).toFixed(this.options.roundPoint)
				  , m = parseFloat(i).toFixed(this.options.roundPoint)
				  , y = new eui.Group;
				y.name = "lbTipPriceGroup";
				var v = new eui.Group;
				v.name = "lbTipPriceGroupUp";
				var b = new eui.Image
				  , f = new eui.Image;
				if (this.removeObj("bgDianCha", this.groupKline),
				this.removeObj("lbTipDianCha", this.groupKline),
				this.showRuler) {
					y.width = 150,
					y.height = 45,
					v.width = 150,
					v.height = 45,
					f.source = RES.getRes("bg_settle_price_up_png"),
					b.source = RES.getRes("bg_settle_price_down_png"),
					f.width = y.width,
					f.height = y.height,
					b.width = y.width,
					b.height = y.height,
					y.x = l - y.width - this.options.CandleWidth / 2,
					v.x = y.x;
					var C = new eui.Image;
					C.name = "bgDianCha",
					C.width = 16,
					C.height = 20,
					C.x = y.x + y.width;
					var T = new eui.Label;
					T.name = "lbTipDianCha",
					T.width = 40,
					T.text = Math.abs(s).toString(),
					T.textColor = o,
					T.size = 15,
					T.bold = !0,
					T.x = C.x - this.options.CandleWidth + 3,
					T.textAlign = "center",
					s > 0 ? (v.y = h - v.height,
					y.y = d,
					C.source = RES.getRes("icon_diancha_up_png"),
					C.y = _ - C.height - 10,
					T.y = C.y - T.height - 5) : 0 > s ? (v.y = d - v.height,
					y.y = h,
					C.source = RES.getRes("icon_diancha_down_png"),
					C.y = p + 10,
					T.y = C.y + C.height + 5) : (v.y = h - v.height,
					y.y = h,
					C.source = RES.getRes("icon_diancha_up_png"),
					C.y = _ - C.height - 10,
					T.y = C.y - T.height - 5),
					y.addChild(b),
					v.addChild(f),
					this.addObjArray([C, T], this.groupKline),
					this.groupKline.setChildIndex(T, 1006),
					this.groupBetAmount.visible = !1
				} else {
					y.height = 40,
					y.width = 120,
					l = 10 + this.options.KlineSpaceLeftWidth,
					y.y = h - y.height / 2,
					y.x = l + this.options.KlineWidth + this.options.KlineSpaceRightWidth - 3 - y.width,
					b.source = RES.getRes("bg_bet_price_png"),
					b.width = y.width,
					b.height = y.height;
					var S = y.y - this.groupBetAmount.height - 1;
					this.groupBetAmount.x = l + this.options.KlineWidth + this.options.KlineSpaceRightWidth - 3 - this.groupBetAmount.width,
					this.groupKline.contains(this.groupBetAmount) || this.groupKline.addChild(this.groupBetAmount),
					this.groupBetAmount.visible = !0,
					this.groupKline.setChildIndex(this.groupBetAmount, 1001),
					S <= this.options.KlineSpaceTopHeight + 30 ? this.groupBetAmount.y = y.y + y.height + 1 : this.groupBetAmount.y = S,
					y.y = h - y.height / 2,
					y.addChild(b)
				}
				if (this.showRuler) {
					var E = new eui.Label;
					E.text = "收",
					E.textColor = r,
					E.size = 18,
					E.x = 8,
					E.y = 13;
					var w = new eui.Label;
					if (w.text = "开",
					w.textColor = 0,
					w.size = 18,
					w.x = 8,
					w.y = 13,
					"BTCCNY" == this.options.Capital) {
						var I = m.split(".")
						  , L = I[0].substr(0, I[0].length - 2)
						  , P = I[0].substr(I[0].length - 2, I[0].length - 1)
						  , x = I[1]
						  , O = new eui.Label;
						O.text = L,
						O.textColor = 0,
						O.size = 20,
						O.x = E.x + E.width + 10,
						O.y = 13.5;
						var N = new eui.Label;
						N.text = P + "." + x,
						N.textColor = r,
						N.size = 25,
						N.x = O.x + O.width + 2,
						N.y = 11,
						I = c.split("."),
						L = I[0].substr(0, I[0].length - 2),
						P = I[0].substr(I[0].length - 2, I[0].length - 1),
						x = I[1];
						var A = new eui.Label;
						A.text = L,
						A.textColor = 0,
						A.size = 20,
						A.x = w.x + w.width + 10,
						A.y = 13.5;
						var k = new eui.Label;
						k.text = P + "." + x,
						k.textColor = 0,
						k.size = 25,
						k.x = A.x + A.width + 2,
						k.y = 11
					} else {
						var L = m.substr(0, m.length - 2)
						  , P = m.substr(m.length - 2)
						  , O = new eui.Label;
						O.text = L,
						O.textColor = 0,
						O.size = 20,
						O.x = E.x + E.width + 10,
						O.y = 13.5;
						var N = new eui.Label;
						N.text = P,
						N.textColor = r,
						N.size = 25,
						N.x = O.x + O.width + 2,
						N.y = 11,
						L = c.substr(0, c.length - 2),
						P = c.substr(c.length - 2);
						var A = new eui.Label;
						A.text = L,
						A.textColor = 0,
						A.size = 20,
						A.x = w.x + w.width + 10,
						A.y = 13.5;
						var k = new eui.Label;
						k.text = P,
						k.textColor = 0,
						k.size = 25,
						k.x = A.x + A.width + 2,
						k.y = 11
					}
					s > 0 ? (v.addChild(E),
					v.addChild(O),
					v.addChild(N),
					y.addChild(w),
					y.addChild(A),
					y.addChild(k)) : 0 > s ? (v.addChild(w),
					v.addChild(A),
					v.addChild(k),
					y.addChild(E),
					y.addChild(O),
					y.addChild(N)) : (v.addChild(w),
					v.addChild(A),
					v.addChild(k),
					y.addChild(E),
					y.addChild(O),
					y.addChild(N))
				} else if ("BTCCNY" == this.options.Capital) {
					var I = m.split(".")
					  , L = I[0].substr(0, I[0].length - 2)
					  , P = I[0].substr(I[0].length - 2, I[0].length - 1)
					  , x = I[1]
					  , R = new eui.Label;
					R.text = L,
					R.textColor = 0,
					R.size = 21,
					R.height = y.height,
					R.verticalAlign = "middle",
					R.x = 13,
					R.verticalAlign = "middle";
					var M = new eui.Label;
					M.text = P + "." + x,
					M.textColor = r,
					M.size = 25,
					M.height = y.height,
					M.x = R.x + R.width + 2,
					M.verticalAlign = "middle",
					y.addChild(R),
					y.addChild(M)
				} else {
					var L = m.substr(0, m.length - 2)
					  , P = m.substr(m.length - 2)
					  , R = new eui.Label;
					R.text = L,
					R.textColor = 0,
					R.size = 21,
					R.height = y.height,
					R.x = 20,
					R.verticalAlign = "middle";
					var M = new eui.Label;
					M.text = P,
					M.textColor = r,
					M.size = 25,
					M.height = y.height,
					M.x = R.x + R.width + 2,
					M.verticalAlign = "middle",
					y.addChild(R),
					y.addChild(M)
				}
				this.addObjArray([u, y, v], this.groupKline),
				this.groupKline.setChildIndex(y, 1001),
				this.groupKline.setChildIndex(v, 1001)
			}
		}
		,
		i.prototype.updateTotalBetAmount = function(t) {
			var e = Utils.moneyFormat(t, 2).toString();
			this.lbTotalBetAmount.text = e
		}
		,
		i.prototype.drawRectInterval = function() {
			var t = this;
			if (t.removeObj("rectInterval", t.groupKline),
			this.timerRectInterval && (clearInterval(this.timerRectInterval),
			this.timerRectInterval = null),
			0 == this.showRuler)
				return void t.removeObj("rectInterval", t.groupKline);
			for (var e in t.intervalArea)
				if (0 != t.intervalArea[e].c) {
					var i = t.intervalArea[e].i;
					t.oldInterval != i && (t.alphaType = 0,
					t.alphaType = 1,
					t.oldInterval = i),
					0 == t.alphaType ? (t.alphaRectInterval = t.alphaRectInterval - .1,
					t.alphaRectInterval <= .2 && (t.alphaType = 1)) : (t.alphaRectInterval = t.alphaRectInterval + .1,
					t.alphaRectInterval >= .9 && (t.alphaType = 0));
					var n = t.intervalArea[e].x
					  , a = t.intervalArea[e].y
					  , s = t.intervalArea[e].y2
					  , o = t.intervalArea[e].y2
					  , r = t.intervalArea[e].color;
					3 == i ? (o = a - s,
					a = s) : o = s - a;
					var l = new egret.Shape;
					l.name = "rectInterval",
					l.graphics.moveTo(n, a),
					l.graphics.beginFill(r, 1),
					l.graphics.drawRect(n, a, 80, o),
					l.alpha = t.alphaRectInterval,
					l.graphics.endFill(),
					t.addObjArray([l], t.groupKline)
				}
			null == this.timerRectInterval && (this.timerRectInterval = setInterval(function() {
				t.drawRectInterval()
			}, 100))
		}
		,
		i.prototype.drawLineInterval = function(t, e) {
			if (30 != this.options.Diff) {
				0 == this.groupTrade.visible && this.removeSettleGroup();
				var i = this.groupTrade.getChildByName("lbTradeTopTip");
				return null != i && void 0 != i && (i.text = "开奖时间"),
				void this.drawLineTradeTimer(t)
			}
			0 == this.groupSettle.visible && this.removeTradeGroup(null);
			var n = this.lastDianCha;
			if (this.groupSettle.contains(this.imgLineInterval) || this.groupSettle.addChild(this.imgLineInterval),
			this.imgLineInterval.visible || (this.imgLineInterval.visible = !0),
			this.removeEventListener(egret.Event.ENTER_FRAME, this.dotAnimation, this),
			this.addEventListener(egret.Event.ENTER_FRAME, this.dotAnimation, this),
			!this.lastLineIntervalDraw) {
				if (e)
					this.lastLineIntervalDraw = !0;
				else if (0 == t)
					return;
				var a = this.options.odds[3].interval_start
				  , s = this.options.odds[5].interval_start;
				"BTCCNY" == this.options.Capital ? (a = parseFloat(a).toFixed(this.options.roundPoint),
				s = parseFloat(s).toFixed(this.options.roundPoint)) : (a *= Math.pow(10, this.options.roundPoint),
				a = Math.round(a),
				s *= Math.pow(10, this.options.roundPoint),
				s = Math.round(s));
				var o = parseFloat(a) + parseFloat(s)
				  , r = this.getOddsObj(n)
				  , l = r.order
				  , h = 0
				  , d = 0
				  , _ = 0;
				1 == l ? (h = this.groupSettle.height / 2 - 15,
				_ = 30,
				d = 16777215) : 3 == l ? (h = 0,
				_ = this.rulerYArray[0],
				d = 16001316) : 4 == l ? (h = this.rulerYArray[0],
				_ = this.rulerYArray[1] - this.rulerYArray[0],
				d = 16001316) : 5 == l ? (h = this.rulerYArray[1],
				_ = this.rulerYArray[2] - this.rulerYArray[1],
				d = 16001316) : 6 == l ? (h = this.rulerYArray[2],
				_ = this.rulerYArray[3] - this.rulerYArray[2],
				d = 16001316) : 7 == l ? (h = this.rulerYArray[3],
				_ = this.rulerYArray[4] - this.rulerYArray[3],
				d = 5169700) : 8 == l ? (h = this.rulerYArray[4],
				_ = this.rulerYArray[5] - this.rulerYArray[4],
				d = 5169700) : 9 == l ? (h = this.rulerYArray[5],
				_ = this.rulerYArray[6] - this.rulerYArray[5],
				d = 5169700) : 10 == l && (h = this.rulerYArray[6],
				_ = this.groupSettle.height - this.rulerYArray[6],
				d = 5169700),
				this.bgSettle = new egret.Shape,
				this.bgSettle.graphics.moveTo(0, h),
				1 == l ? this.bgSettle.graphics.beginFill(d, .8) : this.bgSettle.graphics.beginFill(d, .5),
				this.bgSettle.graphics.drawRect(0, h, this.groupSettle.width, _),
				this.bgSettle.graphics.endFill(),
				this.bgSettle.name = "settle_bg",
				this.addObj(this.bgSettle, this.groupSettle),
				this.bgOdds = new eui.Label,
				1 == l ? this.bgOdds.text = "平" : this.bgOdds.text = r.display,
				this.bgOdds.fontFamily = "lgzbFont",
				this.bgOdds.width = this.groupSettle.width,
				this.bgOdds.height = _,
				this.bgOdds.textAlign = "center",
				this.bgOdds.verticalAlign = "middle",
				this.bgOdds.bold = !0,
				this.bgOdds.stroke = 1,
				this.bgOdds.size = 25,
				this.bgOdds.textColor = 16113323,
				this.bgOdds.name = "settle_odds",
				this.bgOdds.x = 0,
				this.bgOdds.y = h,
				this.addObj(this.bgOdds, this.groupSettle),
				this.groupSettle.setChildIndex(this.bgSettle, 999),
				this.groupSettle.setChildIndex(this.bgOdds, 999),
				this.groupSettle.setChildIndex(this.lineInterval, 1001),
				this.groupSettle.setChildIndex(this.lbSettleTopTip, 1002),
				this.groupSettle.setChildIndex(this.lbSettleTopTipTime, 1002),
				"BTCCNY" == this.options.Capital ? n = parseFloat(n.toFixed(this.options.roundPoint)) : (n *= Math.pow(10, this.options.roundPoint),
				n = Math.round(n)),
				n > o && (n = o),
				-1 * o > n && (n = -1 * o);
				var p = 0
				  , u = this.groupSettle.height / 2
				  , g = this.groupSettle.width
				  , c = g / 30;
				if (0 == n)
					u = this.groupSettle.height / 2;
				else if (n > 0) {
					var _ = n / o * (this.groupSettle.height / 2);
					u = this.groupSettle.height / 2 - _
				} else if (0 > n) {
					var _ = Math.abs(n) / o * (this.groupSettle.height / 2);
					u = this.groupSettle.height / 2 + _
				}
				t = 30 - t,
				p = t * c,
				0 == this.lastLineIntervalX && (u = this.groupSettle.height / 2,
				this.lineInterval.graphics.lineTo(p, u)),
				p >= this.groupSettle.width && (p = 0 == e ? this.groupSettle.width - c / 2 : this.groupSettle.width);
				var m = this.lastDianCha;
				"BTCCNY" == this.options.Capital ? m = parseFloat(m.toFixed(this.options.roundPoint)) : (m *= Math.pow(10, this.options.roundPoint),
				m = Math.round(m));
				var y = new eui.Group;
				y.name = "lbGroupDianCha",
				y.width = 40,
				y.height = 100;
				var v = new eui.Label;
				v.text = "",
				v.textColor = d,
				v.width = 40,
				v.size = 14,
				v.textAlign = "center";
				var b = new eui.Label;
				b.text = Math.abs(m).toString(),
				b.textColor = 16777215,
				b.width = 40,
				b.size = 14,
				b.textAlign = "center",
				v.x = 0,
				v.y = -15,
				b.x = 0,
				b.y = v.y + v.height + 15,
				m > 0 ? v.text = "上涨" : 0 > m ? v.text = "下跌" : v.text = "平",
				y.addChild(v),
				y.addChild(b),
				p >= this.groupSettle.width - 20 ? (y.x = p - 40,
				y.y = u) : (y.x = p,
				y.y = u),
				this.addObj(y, this.groupSettle),
				this.lastLineIntervalX = p,
				this.lineInterval.graphics.lineTo(p, u),
				this.imgLineInterval.x = p - 25,
				this.imgLineInterval.y = u - 25,
				u = 0;
				var f = new egret.Shape;
				f.graphics.lineStyle(.5, 97307852),
				f.graphics.moveTo(p, u),
				f.graphics.lineTo(p, this.groupSettle.height),
				f.name = "line_move",
				this.addObj(f, this.groupSettle);
				var C = new eui.Image;
				C.source = RES.getRes("icon_settle_timer_png"),
				C.width = 30,
				C.height = 30,
				C.x = p - C.width / 2,
				C.y = this.groupSettle.height - C.height / 2,
				C.name = "settle_timer",
				this.addObj(C, this.groupSettle),
				this.groupSettle.setChildIndex(C, 999),
				this.groupSettle.setChildIndex(this.groupSettle.getChildByName("settle_end"), 1e3),
				3 == l ? (this.lbSettleTopTipTime.y = C.y - this.lbSettleTopTipTime.height - 15,
				this.lbSettleTopTip.y = this.lbSettleTopTipTime.y) : (this.lbSettleTopTipTime.y = 2,
				this.lbSettleTopTip.y = this.lbSettleTopTipTime.y),
				this.lbSettleTopTip.x = p - C.width / 2 - 69,
				this.lbSettleTopTipTime.x = this.lbSettleTopTip.x + this.lbSettleTopTip.width + 3
			}
		}
		,
		i.prototype.drawLineTradeTimer = function(t) {
			var e = 0
			  , i = this.groupSettle.width
			  , n = i / 30;
			t = 30 - t,
			e = t * n,
			e >= this.groupTrade.width && (e = this.groupTrade.width);
			var a = 0
			  , s = new egret.Shape;
			s.graphics.lineStyle(.5, 97307852),
			s.graphics.moveTo(e, a),
			s.graphics.lineTo(e, this.groupTrade.height),
			s.name = "line_move",
			this.addObj(s, this.groupTrade);
			var o = new eui.Image;
			o.source = RES.getRes("icon_settle_timer_png"),
			o.width = 30,
			o.height = 30,
			o.x = e - o.width / 2,
			o.y = this.groupTrade.height - o.height / 2,
			o.name = "settle_timer",
			this.addObj(o, this.groupTrade),
			this.groupTrade.setChildIndex(o, 999),
			this.groupTrade.setChildIndex(this.groupTrade.getChildByName("settle_end"), 1e3),
			this.lbTradeTopTip.x = e - o.width / 2 - 69,
			this.lbTradeTopTipTime.x = this.lbTradeTopTip.x + this.lbTradeTopTip.width + 3
		}
		,
		i.prototype.updateTimeLabel = function(t) {
			10 > t && (t = "0" + t),
			30 == t && (t = "00"),
			this.lbTradeTopTipTime.text = "00:" + t,
			this.lbSettleTopTipTime.text = "00:" + t
		}
		,
		i.prototype.drawOpenPriceLine = function(t) {
			if (!(null == t || void 0 == t || t.length <= 0)) {
				var e = t[1]
				  , i = t[2]
				  , n = ((i - e).toFixed(this.options.roundPoint),
				this.options.KlineFlatColor)
				  , a = this.options.KlineFlatColor;
				e > i ? (n = this.options.KlineDownColor,
				a = this.options.KlineDownColor) : i > e ? (n = this.options.KlineUpColor,
				a = this.options.KlineUpColor) : (n = this.options.KlineUpColor,
				a = this.options.KlineFlatColor);
				var s = []
				  , o = 10 + this.options.KlineSpaceLeftWidth + 2
				  , r = (this.options.MaxData - e) * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop
				  , l = new egret.Shape;
				for (l.graphics.lineStyle(1, 13421772); o < 10 + this.options.KlineSpaceLeftWidth + this.options.KlineWidth - this.options.KlineSpaceRightWidth; )
					l.graphics.moveTo(o, r),
					l.graphics.lineTo(o + 3, r),
					o += 6;
				l.name = "lineOpenPrice",
				s.push(l);
				var o = this.groupSettle.x - 4
				  , r = this.options.KlineSpaceTopHeight
				  , h = new egret.Shape;
				h.graphics.lineStyle(1, 13421772),
				h.graphics.moveTo(o, r),
				h.graphics.lineTo(o, this.options.KlineSpaceTopHeight + this.options.KlineHeight),
				h.name = "lineRuler",
				s.push(h);
				for (var d = 0, _ = 3; 10 >= _; _++) {
					var p = this.options.odds[_]
					  , u = null
					  , g = 0;
					if (6 >= _)
						g = p.interval_start,
						u = p.interval_end,
						p = parseFloat(p.interval_start),
						(null == u || 0 == u || void 0 == u || 0 / 0 == u) && (u = "A");
					else {
						if (!(_ >= 7))
							continue;
						g = p.interval_end,
						u = p.interval_start,
						p = parseFloat(p.interval_end),
						(null == u || 0 == u || void 0 == u || 0 / 0 == u) && (u = "B")
					}
					p = this.options.MaxData - e - p;
					var r = p * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop
					  , o = this.groupSettle.x - 4
					  , c = new egret.Shape;
					c.graphics.lineStyle(1, 13421772),
					c.graphics.moveTo(o, r),
					c.graphics.lineTo(o - 7, r),
					7 == _ && (d = r),
					c.name = "lineRulerPrice_" + _.toString(),
					s.push(c);
					var m = null;
					"A" == u ? m = this.options.KlineSpaceTopHeight : "B" == u ? m = this.options.KlineSpaceTopHeight + this.options.KlineHeight - this.options.ChartMarginBottom : (u = this.options.MaxData - e - u,
					m = u * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop);
					var y = i - e
					  , v = this.getOddsIndex(y)
					  , b = !1;
					v == _ && (b = !0);
					var o = 10 + this.options.KlineSpaceLeftWidth + 26 * (this.options.CandleWidth + this.options.CandleSpaceInterval) + 2;
					this.intervalArea["i_" + _] = {
						i: _,
						x: o,
						y: r,
						y2: m,
						c: b,
						color: n
					};
					var f = new eui.Label;
					"BTCCNY" == this.options.Capital || (g *= Math.pow(10, this.options.roundPoint),
					g = Math.round(g)),
					g = Math.abs(g),
					f.text = g.toString(),
					f.size = 10,
					f.x = o + 5,
					f.y = r - 4,
					s.push(c),
					f.name = "lb_ruler_" + _.toString()
				}
				this.addObjArray(s, this.groupKline)
			}
		}
		,
		i.prototype.removeSettleGroup = function() {
			this.groupSettle.removeChildren(),
			this.groupSettle.visible = !1,
			this.removeEventListener(egret.Event.ENTER_FRAME, this.dotAnimation, this),
			this.removeEventListener(egret.Event.ENTER_FRAME, this.bgAnimation, this),
			0 == this.groupTrade.visible && this.drawTradeGroup();
			var t = this.groupTrade.getChildByName("lbTradeTopTip");
			null != t && void 0 != t && (t.text = "下注时间")
		}
		,
		i.prototype.removeTradeGroup = function(t) {
			30 == this.options.Diff ? (this.groupTrade.removeChildren(),
			this.groupTrade.visible = !1,
			0 == this.groupSettle.visible && (null != t && "" != t && void 0 != t && this.setOptions({
				Capital: t
			}),
			this.drawSettleGroup())) : (this.groupSettle.removeChildren(),
			this.groupSettle.visible = !1,
			this.removeEventListener(egret.Event.ENTER_FRAME, this.dotAnimation, this),
			this.removeEventListener(egret.Event.ENTER_FRAME, this.bgAnimation, this),
			0 == this.groupTrade.visible && this.drawTradeGroup())
		}
		,
		i.prototype.drawSettleGroup = function() {
			this.removeEventListener(egret.Event.ENTER_FRAME, this.bgAnimation, this),
			this.addEventListener(egret.Event.ENTER_FRAME, this.bgAnimation, this),
			this.groupSettle.visible = !0,
			this.groupSettle.removeChildren(),
			this.lastLineIntervalDraw = !1,
			this.lastLineIntervalX = 0;
			var t = 0
			  , e = 0
			  , i = (this.groupSettle.width,
			this.groupSettle.height)
			  , n = new egret.Shape;
			n.graphics.moveTo(0, 0),
			n.graphics.beginFill(3028333, 1),
			n.graphics.drawRect(0, 0, this.groupSettle.width, this.groupSettle.height),
			n.graphics.endFill(),
			this.groupSettle.addChild(n);
			var a = new egret.Shape;
			a.graphics.moveTo(0, 0),
			a.graphics.beginFill(0, .5),
			a.graphics.drawRect(0, 0, this.groupSettle.width, this.groupSettle.height),
			a.graphics.endFill(),
			this.groupSettle.addChild(a);
			var s = new egret.Shape;
			s.graphics.lineStyle(.5, 12368570);
			for (var e = 0, t = 0; e < this.groupSettle.height; )
				s.graphics.moveTo(t, e),
				s.graphics.lineTo(t, e + 3),
				e += 6;
			this.groupSettle.addChild(s);
			var o = new egret.Shape;
			o.graphics.lineStyle(2, 16533785);
			var e = 0
			  , t = this.groupSettle.width;
			o.graphics.moveTo(t, e),
			o.graphics.lineTo(t, this.groupSettle.height),
			this.groupSettle.addChild(o);
			var r = this.options.odds[3].interval_start
			  , l = this.options.odds[5].interval_start;
			"BTCCNY" == this.options.Capital ? (r = parseFloat(r).toFixed(this.options.roundPoint),
			l = parseFloat(l).toFixed(this.options.roundPoint)) : (r *= Math.pow(10, this.options.roundPoint),
			r = Math.round(r),
			l *= Math.pow(10, this.options.roundPoint),
			l = Math.round(l));
			var h = parseFloat(r) + parseFloat(l);
			this.rulerYArray = [];
			for (var d = 3; 10 > d; d++) {
				var _ = parseFloat(this.options.odds[d].interval_start);
				"BTCCNY" == this.options.Capital ? _ = parseFloat(_.toFixed(this.options.roundPoint)) : (_ *= Math.pow(10, this.options.roundPoint),
				_ = Math.round(_));
				var e = 0
				  , t = 0;
				if (0 == _)
					e = this.groupSettle.height / 2;
				else if (_ > 0) {
					var i = _ / h * (this.groupSettle.height / 2);
					e = this.groupSettle.height / 2 - i
				} else if (0 > _) {
					var i = Math.abs(_) / h * (this.groupSettle.height / 2);
					e = this.groupSettle.height / 2 + i
				}
				var p = new egret.Shape;
				for (p.graphics.lineStyle(.5, 13421772),
				this.rulerYArray.push(e); t < this.groupSettle.width; )
					p.graphics.moveTo(t, e),
					p.graphics.lineTo(t + 2, e),
					t += 5;
				var u = new eui.Label;
				u.text = Math.abs(_).toString(),
				u.size = 15,
				this.groupSettle.addChild(u),
				u.x = this.groupSettle.width + 3,
				u.y = e - 7,
				this.groupSettle.addChild(p)
			}
			this.imgLineInterval = new eui.Image,
			this.imgLineInterval.source = RES.getRes("icon_dot_png"),
			this.imgLineInterval.width = 50,
			this.imgLineInterval.height = 50,
			this.imgLineInterval.visible = !1;
			var g = new eui.Image;
			g.source = RES.getRes("icon_settle_end_png"),
			g.width = 30,
			g.height = 30,
			g.x = this.groupSettle.width - g.width / 2,
			g.y = this.groupSettle.height - g.height / 2,
			g.name = "settle_end",
			this.groupSettle.addChild(g),
			this.groupSettle.addChild(this.imgLineInterval),
			this.lineInterval = new egret.Shape,
			this.lineInterval.graphics.lineStyle(2, 13421772),
			this.lineInterval.graphics.moveTo(0, this.groupSettle.height / 2),
			this.groupSettle.addChild(this.lineInterval),
			this.groupSettle.contains(this.lbSettleTopTip) || this.groupSettle.addChild(this.lbSettleTopTip),
			this.groupSettle.contains(this.lbSettleTopTipTime) || this.groupSettle.addChild(this.lbSettleTopTipTime)
		}
		,
		i.prototype.drawTradeGroup = function() {
			this.groupKline.contains(this.groupTrade) || this.groupKline.addChild(this.groupTrade),
			this.groupTrade.visible = !0,
			this.groupTrade.removeChildren(),
			this.lastLineIntervalX = 0;
			var t = 0
			  , e = 0
			  , i = (this.groupTrade.width,
			this.groupTrade.height,
			new egret.Shape);
			i.graphics.lineStyle(2, 16533785);
			var e = 0
			  , t = this.groupTrade.width;
			i.graphics.moveTo(t, e),
			i.graphics.lineTo(t, this.groupTrade.height),
			this.groupTrade.addChild(i);
			var n = new eui.Image;
			n.source = RES.getRes("icon_settle_end_png"),
			n.width = 30,
			n.height = 30,
			n.x = this.groupSettle.width - n.width / 2,
			n.y = this.groupSettle.height - n.height / 2,
			n.name = "settle_end",
			this.groupTrade.addChild(n),
			this.lineInterval = new egret.Shape,
			this.lineInterval.graphics.lineStyle(2, 13421772),
			this.lineInterval.graphics.moveTo(0, this.groupTrade.height / 2),
			this.groupTrade.addChild(this.lineInterval),
			this.groupKline.setChildIndex(this.groupTrade, 1e3),
			this.groupTrade.contains(this.lbTradeTopTip) || this.groupTrade.addChild(this.lbTradeTopTip),
			this.groupTrade.contains(this.lbTradeTopTipTime) || this.groupTrade.addChild(this.lbTradeTopTipTime)
		}
		,
		i.prototype.removeOpenPriceLine = function() {
			this.removeObj("lineOpenPrice", this.groupKline),
			this.removeObj("lineRuler", this.groupKline);
			for (var t = 3; 10 >= t; t++)
				this.removeObj("lineRulerPrice_" + t.toString(), this.groupKline),
				this.removeObj("lb_ruler_" + t.toString(), this.groupKline)
		}
		,
		i.prototype.drawMALine = function(t) {
			var e, i, n = new egret.Shape, a = new egret.Shape;
			n.name = "lineMA5",
			a.name = "lineMA10",
			n.graphics.lineStyle(1, this.options.MA5Color),
			a.graphics.lineStyle(1, this.options.MA10Color);
			for (var s = 0; s < t.length; s++)
				if (!(s >= this.options.CandleCount - this.options.LeftFixed || 0 == s)) {
					e = this.options.Coordinate[s][1] + 8 - (this.options.CandleWidth + this.options.CandleSpaceInterval) * this.options.LeftFixed;
					var o = this.options.MaxData - this.options.MinData
					  , r = t[s][5];
					r = this.options.MaxData - r,
					r && r > 0 && o >= r && (i = r * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop,
					0 == s ? n.graphics.moveTo(e, i) : n.graphics.lineTo(e, i)),
					r = t[s][6],
					r = this.options.MaxData - r,
					r && r > 0 && o >= r && (i = r * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop,
					0 == s ? a.graphics.moveTo(e, i) : a.graphics.lineTo(e, i))
				}
			n.graphics.endFill(),
			a.graphics.endFill(),
			this.addObjArray([n, a], this.groupKline)
		}
		,
		i.prototype.drawLastCandle = function(t) {
			var e, i, n, a, s, o, r, l, h, d, _, p = this.options.Ratio, u = this.options.KlineUpColor, g = this.options.KlineDownColor, c = this.options.KlineFlatColor, m = this.options.MaxData, y = (this.options.MinData,
			c), v = CONST.ODDS_IMG.FLAT;
			n = t[0],
			a = parseFloat(t[1]).toFixed(this.options.roundPoint),
			r = parseFloat(t[2]).toFixed(this.options.roundPoint),
			s = parseFloat(t[3]).toFixed(this.options.roundPoint),
			o = parseFloat(t[4]).toFixed(this.options.roundPoint),
			l = r - a,
			this.updateLastPricePanel(a, r, s, o),
			this.lastPrice = r,
			this.showRuler && (this.lastDianCha = l),
			a > r ? (y = g,
			_ = a,
			v = CONST.ODDS_IMG.DOWN) : r > a ? (y = u,
			_ = r,
			v = CONST.ODDS_IMG.UP) : (y = c,
			_ = r,
			v = CONST.ODDS_IMG.FLAT),
			h = Math.abs((a - r) * p),
			d = (s - o) * p,
			0 >= h && (h = 2),
			e = this.options.Coordinate[0][1] - (this.options.CandleWidth + this.options.CandleSpaceInterval) * this.options.LeftFixed,
			i = (m - _) * p + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop;
			var b = new egret.Shape
			  , f = new egret.Shape;
			if (b.name = "candleRect_last",
			f.name = "candleLine_last",
			n % 60 == 0 ? (b.graphics.moveTo(e, i),
			b.graphics.beginFill(y, 1),
			b.graphics.drawRect(e, i, this.options.CandleWidth, h),
			b.graphics.endFill()) : (b.graphics.lineStyle(2, y),
			b.graphics.moveTo(e, i),
			b.graphics.beginFill(3159410, 1),
			b.graphics.drawRect(e, i, this.options.CandleWidth, h),
			b.graphics.endFill()),
			e += this.options.CandleWidth / 2,
			i = (this.options.MaxData - s) * p + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop,
			f.graphics.lineStyle(2, y),
			f.graphics.moveTo(e, i),
			f.graphics.lineTo(e, i + d),
			f.graphics.endFill(),
			30 == this.options.Diff && n % 60 == 0) {
				e = this.options.Coordinate[0][1] - (this.options.CandleWidth + this.options.CandleSpaceInterval) * this.options.LeftFixed - this.options.CandleSpaceInterval - this.options.CandleWidth,
				i = this.groupKline.height - this.options.KlineSpaceBottomHeight - 25,
				null == this.lastOddsImg && (this.lastOddsImg = new eui.Image),
				this.lastOddsImg.name = "oddsRect_last",
				this.lastOddsImg.source = RES.getRes(v),
				this.lastOddsImg.width = 35,
				this.lastOddsImg.height = 25,
				this.lastOddsImg.x = e,
				this.lastOddsImg.y = i,
				this.groupKline.contains(this.lastOddsImg) || this.groupKline.addChild(this.lastOddsImg);
				var C = this.getOdds(l)
				  , T = this.getOddsObj(l);
				if (null != this.pointDiffListener) {
					var S = parseFloat(l.toString());
					"BTCCNY" == this.options.Capital ? S = parseFloat(S.toFixed(this.options.roundPoint)) : (S *= Math.pow(10, this.options.roundPoint),
					S = Math.round(S)),
					this.pointDiffListener(S, T, this.thisObject)
				}
				null == this.lastLbOdds && (this.lastLbOdds = new eui.Label),
				this.lastLbOdds.name = "oddsLabel_last",
				this.lastLbOdds.text = "X" + C.toString(),
				this.lastLbOdds.fontFamily = "lgzbFont",
				this.lastLbOdds.x = e,
				this.lastLbOdds.y = i + 3,
				this.lastLbOdds.width = 35,
				this.lastLbOdds.textAlign = "center",
				this.lastLbOdds.textColor = 16113323,
				this.lastLbOdds.stroke = 1,
				this.lastLbOdds.strokeColor = 789259,
				this.lastLbOdds.size = this.options.FontSize,
				this.groupKline.contains(this.lastLbOdds) || this.groupKline.addChild(this.lastLbOdds),
				this.groupKline.setChildIndex(this.lastOddsImg, 1e3),
				this.groupKline.setChildIndex(this.lastLbOdds, 1e3);
				var E = this.getOddsIndex(l);
				for (var w in this.intervalArea)
					this.intervalArea[w].i == E ? (this.intervalArea[w].c = !0,
					this.intervalArea[w].color = y) : this.intervalArea[w].c = !1
			}
			this.addObjArray([f, b], this.groupKline)
		}
		,
		i.prototype.addObj = function(t, e) {
			this.removeObj(t.name, e),
			e.addChild(t)
		}
		,
		i.prototype.addObjArray = function(t, e) {
			for (var i = 0; i < t.length; i++)
				this.addObj(t[i], e)
		}
		,
		i.prototype.removeObj = function(t, e) {
			var i = e.getChildByName(t);
			i && i.parent && (i.parent.removeChild(i),
			i = null)
		}
		,
		i.prototype.mergeCacheData = function(t, e, i) {
			var n = Utils.getStorageObj(t + e);
			if (n && n.length > 0 && i && i.length > 0)
				for (var a = 0; a < n.length; a++) {
					var s = n[a][0]
					  , o = i[i.length - 1][0];
					if (o >= s) {
						n.splice(0, a + 1);
						for (var r = i.length - 1; r >= 0; r--)
							n.unshift(i[r]);
						break
					}
				}
			return n
		}
		,
		i.prototype.getOdds = function(t) {
			t = parseFloat(parseFloat(t.toString()).toFixed(this.options.roundPoint));
			for (var e = 0, i = 0; i < this.options.odds.length; i++)
				0 != this.options.odds[i].order && 2 != this.options.odds[i].order && (0 == t ? this.options.odds[i].interval_start == this.options.odds[i].interval_end && 1 == this.options.odds[i].order && (e = this.options.odds[i].odds) : 0 > t ? null == this.options.odds[i].interval_start || void 0 == this.options.odds[i].interval_start || "null" == this.options.odds[i].interval_start || "" == this.options.odds[i].interval_start ? t < this.options.odds[i].interval_end && (e = this.options.odds[i].odds) : t >= this.options.odds[i].interval_start && t < this.options.odds[i].interval_end && (e = this.options.odds[i].odds) : t > 0 && (null == this.options.odds[i].interval_end || void 0 == this.options.odds[i].interval_end || "null" == this.options.odds[i].interval_end || "" == this.options.odds[i].interval_end ? t > this.options.odds[i].interval_start && (e = this.options.odds[i].odds) : t > this.options.odds[i].interval_start && t <= this.options.odds[i].interval_end && (e = this.options.odds[i].odds)));
			return parseFloat(parseFloat(e.toString()).toFixed(1))
		}
		,
		i.prototype.getOddsObj = function(t) {
			t = parseFloat(parseFloat(t.toString()).toFixed(this.options.roundPoint));
			for (var e = null, i = 0; i < this.options.odds.length; i++)
				0 != this.options.odds[i].order && 2 != this.options.odds[i].order && (0 == t ? this.options.odds[i].interval_start == this.options.odds[i].interval_end && 1 == this.options.odds[i].order && (e = this.options.odds[i]) : 0 > t ? null == this.options.odds[i].interval_start || void 0 == this.options.odds[i].interval_start || "null" == this.options.odds[i].interval_start || "" == this.options.odds[i].interval_start ? t < this.options.odds[i].interval_end && (e = this.options.odds[i]) : t >= this.options.odds[i].interval_start && t < this.options.odds[i].interval_end && (e = this.options.odds[i]) : t > 0 && (null == this.options.odds[i].interval_end || void 0 == this.options.odds[i].interval_end || "null" == this.options.odds[i].interval_end || "" == this.options.odds[i].interval_end ? t > this.options.odds[i].interval_start && (e = this.options.odds[i]) : t > this.options.odds[i].interval_start && t <= this.options.odds[i].interval_end && (e = this.options.odds[i])));
			return e
		}
		,
		i.prototype.getOddsIndex = function(t) {
			t = parseFloat(parseFloat(t.toString()).toFixed(this.options.roundPoint));
			for (var e = 0, i = 0; i < this.options.odds.length; i++)
				0 != this.options.odds[i].order && 2 != this.options.odds[i].order && (0 == t ? this.options.odds[i].interval_start == this.options.odds[i].interval_end && 1 == this.options.odds[i].order && (e = i) : 0 > t ? null == this.options.odds[i].interval_start || void 0 == this.options.odds[i].interval_start || "null" == this.options.odds[i].interval_start || "" == this.options.odds[i].interval_start ? t < this.options.odds[i].interval_end && (e = i) : t >= this.options.odds[i].interval_start && t < this.options.odds[i].interval_end && (e = i) : t > 0 && (null == this.options.odds[i].interval_end || void 0 == this.options.odds[i].interval_end || "null" == this.options.odds[i].interval_end || "" == this.options.odds[i].interval_end ? t > this.options.odds[i].interval_start && (e = i) : t > this.options.odds[i].interval_start && t <= this.options.odds[i].interval_end && (e = i)));
			return e
		}
		,
		i.prototype.dotAnimation = function(t) {
			1 == this.type ? this.imgLineInterval.alpha <= 1 && this.imgLineInterval.alpha > 0 ? (this.imgLineInterval.alpha = (this.imgLineInterval.alpha - .02).toFixed(2),
			null != this.imgLineInterval1 && (this.imgLineInterval1.alpha = this.imgLineInterval.alpha)) : this.type = 0 : 0 == this.type && (this.imgLineInterval.alpha < 1 && this.imgLineInterval.alpha >= 0 ? (this.imgLineInterval.alpha = (this.imgLineInterval.alpha + .02).toFixed(2),
			null != this.imgLineInterval1 && (this.imgLineInterval1.alpha = this.imgLineInterval.alpha)) : this.type = 1)
		}
		,
		i.prototype.bgAnimation = function(t) {
			null != this.bgSettle && (1 == this.type1 ? this.bgSettle.alpha <= 1 && this.bgSettle.alpha > .2 ? (this.bgSettle.alpha = (this.bgSettle.alpha - .015).toFixed(2),
			this.bgOdds.alpha = this.bgSettle.alpha,
			null != this.lastOddsImg && (this.lastOddsImg.alpha = this.bgSettle.alpha),
			null != this.lastLbOdds && (this.lastLbOdds.alpha = this.bgSettle.alpha)) : this.type1 = 0 : 0 == this.type1 && (this.bgSettle.alpha < 1 && this.bgSettle.alpha >= .2 ? (this.bgSettle.alpha = (this.bgSettle.alpha + .015).toFixed(2),
			this.bgOdds.alpha = this.bgSettle.alpha,
			null != this.lastOddsImg && (this.lastOddsImg.alpha = this.bgSettle.alpha),
			null != this.lastLbOdds && (this.lastLbOdds.alpha = this.bgSettle.alpha)) : this.type1 = 1))
		}
		,
		i.prototype.partAdded = function(t, i) {
			e.prototype.partAdded.call(this, t, i)
		}
		,
		i.prototype.childrenCreated = function() {
			e.prototype.childrenCreated.call(this)
		}
		,
		i
	}(eui.Component);
	t.KlineMasterBarV3 = e,
	__reflect(e.prototype, "game.KlineMasterBarV3", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i() {
			var t = e.call(this) || this;
			return t.type = 1,
			t.type1 = 1,
			t.lastLineIntervalX = 0,
			t.lastLineIntervalDraw = !1,
			t.rulerYArray = [],
			t.options = {
				Capital: "BTCCNY",
				Diff: 30,
				odds: [],
				roundPoint: 2,
				KlineWidth: 0,
				KlineHeight: 0,
				KlineSpaceLeftWidth: 0,
				KlineSpaceRightWidth: 80,
				KlineSpaceTopHeight: 5,
				KlineSpaceBottomHeight: 5,
				BorderWidth: 2,
				LineWidth: 1,
				BorderLineColor: 4670591,
				RightPriceColor: 5394067,
				GridBackColor: 2566750,
				KlineUpColor: 14492160,
				KlineDownColor: 3385873,
				KlineFlatColor: 16777215,
				MA5Color: 7321527,
				MA10Color: 8575232,
				BollColor: 13274818,
				DiffColor: 7321527,
				DeaColor: 14492160,
				RSI1Color: 13274818,
				RSI2Color: 8575232,
				RSI3Color: 7321527,
				FontSize: 15,
				VerticalCount: 4,
				HorizalCount: 5,
				CandleCount: 30,
				InitCandleCount: 60,
				LeftFixed: 4,
				CandleDataArr: null,
				MaxData: 0,
				MinData: 1e7,
				Ratio: 0,
				Coordinate: [],
				SpaceRatio: .8,
				CandleHeight: 0,
				CandleWidth: 0,
				CandleSpaceInterval: 5,
				ChartMarginBottom: 0,
				ChartMarginTop: 0,
				BottomTimeDiff: 6,
				VStep: 0,
				HStep: 0,
				MADisplay: !0
			},
			t.intervalArea = {},
			t.lastPrice = 0,
			t.lastDianCha = 0,
			t.showRuler = !1,
			t.klineSocketReady = !1,
			t.timerRectInterval = null,
			t.oldInterval = 0,
			t.alphaRectInterval = 1,
			t.alphaType = 0,
			t.addEventListener(eui.UIEvent.COMPLETE, t.createCompleteEvent, t),
			t.skinName = "resource/ui/main/KlineMasterBarSkin.exml",
			t
		}
		return __extends(i, e),
		i.prototype.klineSocketStatus = function() {
			return this.klineSocketReady
		}
		,
		i.prototype.setOptions = function(t) {
			"BTCCNY" == t.Capital ? (__extends(t, {
				roundPoint: 2
			}),
			this.imgCapital.source = RES.getRes("icon_btccny_png"),
			this.imgCapitalLogo.source = RES.getRes("icon_btccny_png")) : "EURUSD" == t.Capital ? (__extends(t, {
				roundPoint: 5
			}),
			this.imgCapital.source = RES.getRes("icon_eurusd_png"),
			this.imgCapitalLogo.source = RES.getRes("icon_eurusd_png")) : "XAUUSD" == t.Capital ? (__extends(t, {
				roundPoint: 2
			}),
			this.imgCapital.source = RES.getRes("icon_xauusd_png"),
			this.imgCapitalLogo.source = RES.getRes("icon_xauusd_png")) : "GBPUSD" == t.Capital ? (__extends(t, {
				roundPoint: 5
			}),
			this.imgCapital.source = RES.getRes("icon_gbpusd_png"),
			this.imgCapitalLogo.source = RES.getRes("icon_gbpusd_png")) : "LTCCNY" == t.Capital && (__extends(t, {
				roundPoint: 2
			}),
			this.imgCapital.source = RES.getRes("icon_ltccny_png"),
			this.imgCapitalLogo.source = RES.getRes("icon_ltccny_png")),
			__extends(this.options, t)
		}
		,
		i.prototype.getOptions = function() {
			return this.options
		}
		,
		i.prototype.setPointDiffListener = function(t, e) {
			this.thisObject = e,
			this.pointDiffListener = t
		}
		,
		i.prototype.moveKlineGroup = function() {
			egret.Tween.get(this.groupKline, {
				loop: !1
			}).to({
				x: -1 * (this.groupKline.width / 2)
			}, 1e3)
		}
		,
		i.prototype.moveBackKlineGroup = function() {
			egret.Tween.get(this.groupKline, {
				loop: !1
			}).to({
				x: 0
			}, 1e3)
		}
		,
		i.prototype.setTime = function(t) {
			this.serverTime = t;
			var e = Utils.convertTime(t, "hms");
			this.lbTime.text = e,
			t += 3e4,
			e = Utils.convertTime(t, "hhmm"),
			this.lbPeriod.text = e + "期",
			this.lbPeriod1.text = "第 " + e + " 期"
		}
		,
		i.getInstance = function(t) {
			return this._instance || t && (this._instance = new i),
			this._instance
		}
		,
		i.prototype.createCompleteEvent = function(e) {
			var i = this;
			this.removeEventListener(eui.UIEvent.COMPLETE, this.createCompleteEvent, this),
			this.btnTimeType.addEventListener(egret.TouchEvent.TOUCH_TAP, this.clickTimeType, this),
			this.btnTimeTypeCurrent.addEventListener(egret.TouchEvent.TOUCH_TAP, this.clickTimeType, this),
			this.btnTimeType30s.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeTimeType, this),
			this.btnTimeType1m.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeTimeType, this),
			this.btnTimeType3m.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeTimeType, this),
			this.btnTimeType5m.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeTimeType, this),
			this.btnTimeType15m.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeTimeType, this),
			this.groupTimeTypeOut.addEventListener(egret.TouchEvent.TOUCH_TAP, this.clickTimeTypeOut, this),
			this.groupLastPricePart1.addEventListener(egret.TouchEvent.TOUCH_TAP, this.clickTimeTypeOut, this),
			this.img_topup.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
				t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_SHOP)
			}, this),
			this.init(),
			this.groupSettle.x = 10 + this.options.KlineSpaceLeftWidth + 27 * (this.options.CandleWidth + this.options.CandleSpaceInterval) - 20,
			this.groupSettle.y = this.options.KlineSpaceTopHeight;
			var n = 10 + this.options.KlineWidth + this.options.KlineSpaceRightWidth - 3;
			this.groupSettle.width = n - (this.options.KlineSpaceLeftWidth + 27 * (this.options.CandleWidth + this.options.CandleSpaceInterval)) + 10,
			this.groupSettle.height = this.options.KlineHeight,
			this.groupTrade.x = this.groupSettle.x,
			this.groupTrade.y = this.groupSettle.y,
			this.groupTrade.width = this.groupSettle.width,
			this.groupTrade.height = this.groupSettle.height,
			this.lb_settle_history.addEventListener(egret.TouchEvent.TOUCH_END, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
				i.openSettleHistory()
			}, this),
			this.lb_kline_help.addEventListener(egret.TouchEvent.TOUCH_END, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
				t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_KLINE_HEPL)
			}, this)
		}
		,
		i.prototype.openSettleHistory = function() {
			var e = Array();
			e.capital = this.options.Capital,
			t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_SETTLE_HISTORY, e)
		}
		,
		i.prototype.clickTimeType = function(e) {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
			0 == this.groupTimeTypeDD.visible ? (this.groupTimeTypeOut.visible = !0,
			this.groupTimeTypeDD.visible = !0,
			this.setChildIndex(this.groupTimeTypeOut, 99),
			this.setChildIndex(this.groupLastPrice, 100)) : (this.groupTimeTypeOut.visible = !1,
			this.groupTimeTypeDD.visible = !1,
			this.setChildIndex(this.groupTimeTypeOut, 0))
		}
		,
		i.prototype.clickTimeTypeOut = function(t) {
			this.groupTimeTypeOut.visible = !1,
			this.groupTimeTypeDD.visible = !1,
			this.setChildIndex(this.groupTimeTypeOut, 0)
		}
		,
		i.prototype.changeTimeType = function(e) {
			if (t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
			this.groupTimeTypeDD.visible = !1,
			e.currentTarget.name != this.btnTimeType.name) {
				this.btnTimeType.name = e.currentTarget.name,
				this.btnTimeType.img.source = e.currentTarget.img.source,
				this.btnTimeType.img.source.down = e.currentTarget.img.source.down,
				this.btnTimeTypeCurrent.name = e.currentTarget.name,
				this.btnTimeTypeCurrent.img.source = e.currentTarget.img.source,
				this.btnTimeTypeCurrent.img.source.down = e.currentTarget.img.source.down;
				var i = e.currentTarget.name;
				this.setOptions({
					Diff: i
				}),
				this.initKlineSocket(this.options.Capital, i),
				30 != i && this.removeSettleGroup()
			}
		}
		,
		i.prototype.updateLastPricePanel = function(t, e, i, n) {
			this.lbLastPrice.text = parseFloat(e).toFixed(this.options.roundPoint),
			this.lbOpen.text = parseFloat(t).toFixed(this.options.roundPoint),
			e > this.lastPrice ? this.imgUpDown.source = RES.getRes("icon-shang1_png") : e < this.lastPrice && (this.imgUpDown.source = RES.getRes("icon-xia1_png"))
		}
		,
		i.prototype.init = function() {
			this.options.KlineWidth = this.width - 27 - this.options.KlineSpaceLeftWidth - this.options.KlineSpaceRightWidth,
			this.options.KlineHeight = this.groupKline.height - this.options.KlineSpaceTopHeight - this.options.KlineSpaceBottomHeight,
			this.options.CandleHeight = this.options.KlineHeight * this.options.SpaceRatio,
			this.options.CandleWidth = parseFloat((this.options.KlineWidth / this.options.CandleCount - this.options.CandleSpaceInterval).toFixed(6)),
			this.options.ChartMarginTop = parseFloat(((this.options.KlineHeight - this.options.CandleHeight) / 2).toFixed(2)),
			this.options.VStep = this.options.KlineHeight / this.options.VerticalCount,
			this.options.HStep = this.options.KlineWidth / this.options.HorizalCount,
			this.groupKline.removeChildren(),
			this.drawRect(),
			this.drawGrid(),
			this.drawHorizalLine(),
			this.drawVerticalLine(),
			this.drawDemoCandle()
		}
		,
		i.prototype.drawRect = function() {}
		,
		i.prototype.drawGrid = function() {
			var t = 10 + this.options.KlineSpaceLeftWidth
			  , e = this.options.KlineSpaceTopHeight
			  , i = this.options.KlineWidth + this.options.KlineSpaceRightWidth - 3
			  , n = this.options.KlineHeight
			  , a = new egret.Shape;
			a.graphics.lineStyle(this.options.BorderWidth, this.options.BorderLineColor),
			a.graphics.moveTo(t, e),
			a.graphics.beginFill(this.options.GridBackColor, .5),
			a.graphics.drawRect(t, e, i, n),
			a.graphics.endFill(),
			this.groupKline.addChild(a)
		}
		,
		i.prototype.drawHorizalLine = function() {
			for (var t = this.options.HStep, e = 10 + this.options.KlineSpaceLeftWidth, i = this.options.KlineSpaceTopHeight, n = 0; n <= this.options.HorizalCount - 1; n++) {
				var a = e + n * t
				  , s = i
				  , o = new egret.Shape;
				if (0 == n)
					o.graphics.lineStyle(this.options.BorderWidth, this.options.BorderLineColor),
					o.graphics.moveTo(a, s),
					o.graphics.lineTo(a, s + this.options.KlineHeight + 10);
				else
					for (o.graphics.lineStyle(this.options.LineWidth, this.options.BorderLineColor); s < this.options.KlineSpaceTopHeight + this.options.KlineHeight; )
						o.graphics.moveTo(a, s),
						o.graphics.lineTo(a, s + 10),
						s += 15;
				o.graphics.endFill(),
				this.groupKline.addChild(o)
			}
		}
		,
		i.prototype.drawVerticalLine = function() {
			for (var t = this.options.VStep, e = 10 + this.options.KlineSpaceLeftWidth, i = this.options.KlineSpaceTopHeight, n = 1; n < this.options.VerticalCount; n++) {
				var a = e
				  , s = i + n * t
				  , o = new egret.Shape;
				for (o.graphics.lineStyle(this.options.LineWidth, this.options.BorderLineColor); a < this.options.KlineSpaceLeftWidth + this.options.KlineWidth + this.options.KlineSpaceRightWidth; )
					o.graphics.moveTo(a, s),
					o.graphics.lineTo(a + 10, s),
					a += 15;
				o.graphics.endFill(),
				this.groupKline.addChild(o)
			}
		}
		,
		i.prototype.drawDemoCandle = function() {
			var t = []
			  , e = 0
			  , i = 0
			  , n = new eui.Image;
			n.source = RES.getRes("bg_kline_top_1_png"),
			n.width = 113.3,
			n.height = 30.8,
			n.x = 15,
			n.y = 6,
			n.name = "bg_kline_top_1",
			t.push(n);
			var a = new egret.Shape;
			a.name = "candleRect_demo1";
			var s = new egret.Shape;
			s.name = "candleLine_demo1",
			e = 10 + this.options.KlineSpaceLeftWidth + 14,
			i = this.options.KlineSpaceTopHeight + 10 + 1,
			a.graphics.lineStyle(1, 8686003),
			a.graphics.moveTo(e, i),
			a.graphics.drawRect(e, i, 8, 10),
			a.graphics.endFill(),
			s.graphics.lineStyle(1, 8686003),
			s.graphics.moveTo(e + 4, i - 4),
			s.graphics.lineTo(e + 4, i),
			s.graphics.moveTo(e + 4, i + 10),
			s.graphics.lineTo(e + 4, i + 10 + 4),
			s.graphics.endFill();
			var o = new eui.Label;
			o.text = "下注",
			o.size = this.options.FontSize,
			o.textColor = 16777215,
			o.x = e + 4 + 8 + 2,
			o.y = i - 2,
			o.name = "lbDemo1",
			t.push(s),
			t.push(a),
			t.push(o);
			var r = new egret.Shape;
			r.name = "candleRect_demo2";
			var l = new egret.Shape;
			l.name = "candleLine_demo2",
			e = o.x + o.width + 8,
			i = i,
			r.graphics.lineStyle(1, 8686003),
			r.graphics.moveTo(e, i),
			r.graphics.beginFill(8686003, 1),
			r.graphics.drawRect(e, i, 8, 10),
			r.graphics.endFill(),
			l.graphics.lineStyle(1, 8686003),
			l.graphics.moveTo(e + 4, i - 4),
			l.graphics.lineTo(e + 4, i + 10 + 4),
			l.graphics.endFill();
			var h = new eui.Label;
			h.text = "开奖",
			h.size = this.options.FontSize,
			h.textColor = 16777215,
			h.x = e + 4 + 8 + 2,
			h.y = i - 2,
			h.name = "lbDemo2",
			t.push(l),
			t.push(r),
			t.push(h),
			this.addObjArray(t, this.groupKline),
			this.groupKline.addChild(this.group_kline_top),
			this.groupKline.setChildIndex(this.group_kline_top, 100),
			this.groupKline.addChild(this.img_topup),
			this.groupKline.setChildIndex(this.img_topup, 101)
		}
		,
		i.prototype.initSocket = function() {
			this.kline_socket = t.KlineSocket.getInstance(),
			this.kline_socket.setOptions(this.options),
			this.kline_socket.initSocket(this.user_id, this.token)
		}
		,
		i.prototype.initKlineSocket = function(t, e) {
			this.setOptions({
				Capital: t,
				Diff: e
			}),
			this.kline_socket.setOptions(this.options),
			this.kline_socket.initKlineSocket(t, e, this.user_id, this.token)
		}
		,
		i.prototype.Notification_Kline_Init = function(t) {
			if (null != t && void 0 != t && "undefined" != t) {
				var e = t.capitalType
				  , i = t.diff
				  , t = t.data;
				Utils.removeStorage(e + i),
				null == t || void 0 == t || "undefined" == t || t.length <= 0 || this.initSocketData(e, i, t)
			}
		}
		,
		i.prototype.Notification_Kline_Kline = function(e) {
			var i = e.capitalType
			  , n = e.diff
			  , e = e.data;
			if (e = this.mergeCacheData(i, n, e),
			!(null == e || void 0 == e || "undefined" == e || e.length <= 0)) {
				var a = e[1]
				  , s = a[0];
				if (30 == n && s % 60 == 30) {
					var o = a[2] - a[1];
					o = parseFloat(parseFloat(o.toString()).toFixed(this.options.roundPoint));
					var r = this.getWinOddsList(o, a[2])
					  , l = {
						period: Utils.convertTime(s, "hhmm"),
						point_diff: null,
						win_odds: r,
						round_point: this.options.roundPoint
					}
					  , h = this.serverTime / 1e3
					  , d = h - s - 30;
					1 >= d && (t.AppFacade.getInstance().sendNotification(MainNotify.POINT_DIFF, l),
					this.lastDianCha = o,
					this.lastPrice = a[2],
					this.showSettleResult(o, a[2]),
					this.drawLineInterval(0, !0))
				}
				this.initSocketData(i, n, e)
			}
		}
		,
		i.prototype.showSettleResult = function(t, e) {
			var i = parseFloat(e.toString()).toFixed(this.options.roundPoint);
			this.lb_settle_result.text = i;
			var n = parseInt(i.substr(i.length - 1, 1));
			n % 2 == 1 ? this.img_settle_result.source = RES.getRes("icon_classical_settle_single_png") : this.img_settle_result.source = RES.getRes("icon_classical_settle_double_png"),
			0 > t ? this.img_settle_bg.source = RES.getRes("bg_classical_settle_green_png") : t > 0 ? this.img_settle_bg.source = RES.getRes("bg_classical_settle_red_png") : (this.img_settle_bg.source = RES.getRes("bg_classical_settle_white_png"),
			this.img_settle_result.source = RES.getRes("icon_classical_settle_equal_png")),
			this.groupSettleResult.visible = !0
		}
		,
		i.prototype.Notification_Kline_Last_Kline = function(t) {
			var e = t[0]
			  , i = t[2]
			  , n = t[3]
			  , a = t[1]
			  , s = (a[1],
			a[2])
			  , o = (a[3],
			a[4],
			Utils.getStorageObj(i + n));
			if (o && o.length > 0 && o[0]) {
				var r = o[0][0];
				if (e > r)
					return
			}
			if (s > this.options.MaxData || s < this.options.MinData)
				return void (o && o.length > 0 && o[0] ? (this.options.MADisplay && (o = ZhiBiaoTools.getLastMAdata(o, a)),
				this.drawData(o),
				Utils.setStorageObj(i + n, o),
				this.showRuler ? this.drawOpenPriceLine(a) : this.removeOpenPriceLine()) : this.initKlineSocket(i, n));
			if (this.options.MADisplay) {
				var t = ZhiBiaoTools.getLastMAdata(this.options.CandleDataArr, a);
				this.drawMALine(t)
			}
			this.drawLastCandle(a),
			this.drawPriceLine(a)
		}
		,
		i.prototype.initSocketData = function(t, e, i) {
			i.length > this.options.InitCandleCount && i.splice(this.options.InitCandleCount, i.length - this.options.InitCandleCount),
			this.showRuler = !1;
			var n = i[0][0] % 60
			  , a = i[0][1];
			this.options.roundPoint = Utils.getRoundPoint(a),
			30 == e && 30 == n ? this.showRuler = !0 : this.showRuler = !1,
			this.options.MADisplay && (i = ZhiBiaoTools.getMAdata(i)),
			Utils.setStorageObj(t + e, i),
			this.drawData(i);
			this.showRuler ? this.drawOpenPriceLine(i[0]) : this.removeOpenPriceLine()
		}
		,
		i.prototype.drawData = function(t) {
			null == t || void 0 == t || t.length <= 0 || (this.getRatio(t),
			this.initCoordinate(t),
			this.drawCandles(t),
			this.drawKlineBottomTime(t),
			this.drawRightPrice(),
			this.drawLastCandle(t[0]),
			this.drawPriceLine(t[0]),
			this.options.CandleDataArr = t,
			this.options.MADisplay && this.drawMALine(t))
		}
		,
		i.prototype.getRatio = function(t) {
			this.options.MaxData = 0,
			this.options.MinData = 1e7;
			for (var e = 0; e < t.length && !(e >= this.options.CandleCount - this.options.LeftFixed); e++) {
				var i = t[e]
				  , n = (parseFloat(i[1]),
				parseFloat(i[2]),
				parseFloat(i[3]))
				  , a = parseFloat(i[4])
				  , s = 0
				  , o = 1e7;
				Math.pow(10, this.options.roundPoint) / 10;
				if (0 == e) {
					var r = parseFloat(this.options.odds[3].interval_start);
					n + r > this.options.MaxData && (s = n + r,
					this.options.MaxData = s),
					a - r < this.options.MinData && (o = a - r,
					this.options.MinData = o)
				} else
					n > this.options.MaxData && (s = n,
					this.options.MaxData = s),
					a < this.options.MinData && (o = a,
					this.options.MinData = o)
			}
			this.options.Ratio = this.options.CandleHeight / (this.options.MaxData - this.options.MinData)
		}
		,
		i.prototype.initCoordinate = function(t) {
			this.options.Coordinate = [];
			for (var e = this.options.CandleWidth, i = this.options.CandleSpaceInterval, n = this.options.KlineSpaceLeftWidth, a = this.options.KlineWidth, s = 8, o = 0; o < t.length; o++) {
				if (o > this.options.CandleCount)
					return;
				var r = [];
				r.push(n + a - o * (i + e)),
				r.push(r[0] - e + s),
				this.options.Coordinate.push(r)
			}
		}
		,
		i.prototype.drawCandles = function(t) {
			for (var e, i, n, a, s, o, r, l, h, d, _, p = this.options.Ratio, u = this.options.KlineUpColor, g = this.options.KlineDownColor, c = this.options.KlineFlatColor, m = this.options.MaxData, y = (this.options.MinData,
			c), v = CONST.ODDS_IMG.FLAT, b = [], f = t.length; f >= 0; f--)
				if (!(f >= this.options.CandleCount - this.options.LeftFixed)) {
					var C = new egret.Shape
					  , T = new egret.Shape;
					if (void 0 != t[f] && null != t[f] && (n = t[f][0],
					a = parseFloat(t[f][1]),
					s = t[f][2],
					o = parseFloat(t[f][3]),
					r = parseFloat(t[f][4]),
					l = parseFloat(s) - parseFloat(a),
					a > s ? (y = g,
					_ = a,
					v = CONST.ODDS_IMG.DOWN) : s > a ? (y = u,
					_ = s,
					v = CONST.ODDS_IMG.UP) : (y = c,
					_ = s,
					v = CONST.ODDS_IMG.FLAT),
					h = Math.abs((a - s) * p),
					d = (o - r) * p,
					2 >= h && (h = 2),
					1.5 >= d && (d = 1.5),
					e = this.options.Coordinate[f][1] - (this.options.CandleWidth + this.options.CandleSpaceInterval) * this.options.LeftFixed,
					i = (m - _) * p + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop - 1,
					n % 60 == 0 ? (C.graphics.lineStyle(2, y),
					C.graphics.moveTo(e, i),
					C.graphics.beginFill(3093103, 1),
					C.graphics.drawRect(e, i, this.options.CandleWidth, h),
					C.graphics.endFill()) : (C.graphics.moveTo(e, i),
					C.graphics.beginFill(y, 1),
					C.graphics.drawRect(e, i, this.options.CandleWidth, h),
					C.graphics.endFill()),
					0 == f ? C.name = "candleRect_last" : C.name = "candleRect_" + f,
					e += this.options.CandleWidth / 2,
					i = (m - o) * p + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop - .5,
					T.graphics.lineStyle(2, y),
					T.graphics.moveTo(e, i),
					T.graphics.lineTo(e, i + d),
					T.graphics.endFill(),
					0 == f ? T.name = "candleLine_last" : T.name = "candleLine_" + f,
					b.push(T),
					b.push(C),
					0 != f)) {
						var S = new eui.Image
						  , E = new eui.Label;
						if (0 == f)
							S.name = "oddsRect_last",
							E.name = "oddsLabel_last";
						else {
							var w = f;
							f % 2 != 0 && (w = f - 1),
							0 == w ? (S.name = "oddsRect_last",
							E.name = "oddsLabel_last") : (S.name = "oddsRect_" + w,
							E.name = "oddsLabel_" + w)
						}
						if (30 == this.options.Diff && n % 60 == 30) {
							e = this.options.Coordinate[f][1] - (this.options.CandleWidth + this.options.CandleSpaceInterval) * this.options.LeftFixed - this.options.CandleSpaceInterval - this.options.CandleWidth,
							i = this.groupKline.height - this.options.KlineSpaceBottomHeight - 25;
							var I = !1;
							f >= this.options.CandleCount - this.options.LeftFixed - 1 && (I = !0);
							var L = this.getWinOdds(l, s);
							if (S.source = RES.getRes(v),
							S.width = 35,
							S.height = 25,
							S.x = e,
							S.y = i,
							1 == L.order ? E.text = "X" + parseFloat(L.odds) : E.text = L.display.substr(L.display.length - 1, 1),
							E.fontFamily = "lgzbFont",
							E.x = e,
							E.y = i + 3,
							E.width = 35,
							E.textAlign = "center",
							E.textColor = 16113323,
							E.stroke = 1,
							E.strokeColor = 789259,
							E.size = this.options.FontSize,
							I) {
								this.removeObj(E.name, this.groupKline),
								this.removeObj(S.name, this.groupKline);
								continue
							}
							b.push(S),
							b.push(E)
						} else
							this.removeObj(E.name, this.groupKline),
							this.removeObj(S.name, this.groupKline),
							this.removeObj("oddsLabel_back", this.groupKline)
					}
				}
			this.addObjArray(b, this.groupKline)
		}
		,
		i.prototype.drawKlineBottomTime = function(t) {
			for (var e = [], i = 0; i < t.length; i++)
				i > this.options.CandleCount || (i - 2 == 0 ? e.push(t[i][0]) : (i - 2) % this.options.BottomTimeDiff == 0 && e.push(t[i - 2][0]));
			for (var n = 10 + this.options.KlineSpaceLeftWidth + this.options.KlineWidth - 6 * (this.options.CandleWidth + this.options.CandleSpaceInterval), a = this.options.KlineHeight + 10, s = this.options.BottomTimeDiff * (this.options.CandleWidth + this.options.CandleSpaceInterval), o = [], r = null, i = 0; i < e.length; i++)
				i != e.length - 1 && (r = new eui.Label,
				r.text = Utils.convertTime(e[i], "hm"),
				r.x = n - i * s - 17,
				r.y = a,
				r.size = this.options.FontSize,
				r.name = "lbBottomTime_" + i,
				o.push(r));
			this.addObjArray(o, this.groupKline)
		}
		,
		i.prototype.drawRightPrice = function() {
			for (var t = this.options.VStep / this.options.Ratio, e = this.options.MaxData - (this.options.MaxData - this.options.MinData) / 2, i = t + e, n = t + i, a = e - t, s = a - t, o = [n, i, e, a, s], r = this.options.KlineSpaceLeftWidth + this.options.KlineWidth + 15, l = 0; l < o.length; l++) {
				var h = l * this.options.VStep - 10;
				if (1 == l || 2 == l || 3 == l) {
					var d = new eui.Label;
					d.text = o[l].toFixed(this.options.roundPoint),
					d.size = this.options.FontSize,
					d.textColor = this.options.RightPriceColor,
					d.x = r,
					d.y = h,
					d.name = "lbRightPrice_" + l,
					d.width = 70,
					d.textAlign = egret.HorizontalAlign.RIGHT,
					this.addObj(d, this.groupKline),
					this.groupKline.setChildIndex(d, 999),
					this.groupKline.contains(this.groupTrade) && this.groupKline.setChildIndex(this.groupTrade, 1e3)
				}
			}
		}
		,
		i.prototype.drawPriceLine = function(t) {
			if (!(null == t || void 0 == t || t.length <= 0)) {
				var e = (t[0],
				t[1])
				  , i = t[2]
				  , n = t[3]
				  , a = t[4]
				  , s = i - e;
				"BTCCNY" == this.options.Capital ? s = parseFloat(s.toFixed(this.options.roundPoint)) : (s *= Math.pow(10, this.options.roundPoint),
				s = Math.round(s));
				var o = this.options.KlineFlatColor
				  , r = this.options.KlineFlatColor;
				e > i ? (o = this.options.KlineDownColor,
				r = 97283) : i > e ? (o = this.options.KlineUpColor,
				r = 14355464) : (o = this.options.KlineUpColor,
				r = 0);
				var l = 10 + this.options.KlineSpaceLeftWidth
				  , h = (this.options.MaxData - i) * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop
				  , d = ((this.options.MaxData - e) * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop,
				(this.options.MaxData - n) * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop,
				(this.options.MaxData - a) * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop,
				new egret.Shape);
				d.graphics.lineStyle(.5, 16777215);
				var _ = 0;
				d.graphics.moveTo(l, h),
				this.showRuler ? (_ = 10 + this.options.KlineSpaceLeftWidth + 25 * (this.options.CandleWidth + this.options.CandleSpaceInterval),
				l += _,
				d.graphics.lineTo(l - this.options.CandleWidth / 2, h),
				null == this.imgLineInterval1 && (this.imgLineInterval1 = new eui.Image,
				this.imgLineInterval1.source = RES.getRes("icon_dot_png"),
				this.imgLineInterval1.width = 40,
				this.imgLineInterval1.height = 40,
				this.groupKline.addChild(this.imgLineInterval1)),
				this.groupKline.contains(this.imgLineInterval1) || this.groupKline.addChild(this.imgLineInterval1),
				this.imgLineInterval1.visible = !0,
				this.imgLineInterval1.x = l - 19,
				this.imgLineInterval1.y = h - 20,
				s > 0 ? this.imgLineInterval1.y = this.imgLineInterval1.y - 2 : 0 > s && (this.imgLineInterval1.y = this.imgLineInterval1.y + 2),
				this.groupKline.setChildIndex(this.imgLineInterval1, 1e3)) : (_ = this.options.KlineWidth + this.options.KlineSpaceRightWidth - 3,
				d.graphics.lineTo(l + _ - 120, h),
				null != this.imgLineInterval1 && (this.imgLineInterval1.visible = !1)),
				d.name = "linePrice";
				var p = (parseFloat(e).toFixed(this.options.roundPoint),
				parseFloat(i).toFixed(this.options.roundPoint))
				  , u = new eui.Group;
				u.name = "lbTipPriceGroup",
				u.height = 40,
				u.width = 120;
				var g = new eui.Image;
				g.width = u.width,
				g.height = u.height,
				g.source = RES.getRes("bg_bet_price_png"),
				l = 10 + this.options.KlineSpaceLeftWidth,
				u.y = h - u.height / 2,
				u.x = l + this.options.KlineWidth + this.options.KlineSpaceRightWidth - 3 - u.width,
				u.y = h - u.height / 2;
				var c = u.y - this.groupBetAmount.height - 1;
				this.groupBetAmount.x = l + this.options.KlineWidth + this.options.KlineSpaceRightWidth - 3 - this.groupBetAmount.width,
				this.groupKline.contains(this.groupBetAmount) || this.groupKline.addChild(this.groupBetAmount),
				this.groupKline.setChildIndex(this.groupBetAmount, 1001),
				c <= this.options.KlineSpaceTopHeight + 30 ? this.groupBetAmount.y = u.y + u.height + 1 : this.groupBetAmount.y = c,
				this.groupSettle.visible && (g.rotation = 180,
				g.horizontalCenter = "0",
				g.verticalCenter = "0",
				u.x = 10,
				this.groupBetAmount.x = 10),
				u.addChild(g);
				var m = p.substr(0, p.length - 1)
				  , y = p.substr(p.length - 1, 1)
				  , v = new eui.Label;
				v.text = m,
				v.textColor = 0,
				v.size = 21,
				v.height = u.height,
				v.verticalAlign = "middle",
				this.groupSettle.visible ? v.x = 3 : v.x = 13,
				v.verticalAlign = "middle";
				var b = new eui.Label;
				b.text = y,
				b.textColor = r,
				b.size = 25,
				b.height = u.height,
				b.x = v.x + v.width + 2,
				b.verticalAlign = "middle",
				u.addChild(v),
				u.addChild(b),
				this.addObjArray([d, u], this.groupKline),
				this.groupKline.setChildIndex(this.img_topup, 1e3),
				this.groupKline.setChildIndex(this.groupBetAmount, 1001),
				this.groupKline.setChildIndex(u, 1001)
			}
		}
		,
		i.prototype.updateTotalBetAmount = function(t) {
			("" == t || null == t) && (t = 0);
			var e = Utils.moneyFormat(t, 2).toString();
			this.lbTotalBetAmount.text = e
		}
		,
		i.prototype.drawRectInterval = function() {
			var t = this;
			if (t.removeObj("rectInterval", t.groupKline),
			this.timerRectInterval && (clearInterval(this.timerRectInterval),
			this.timerRectInterval = null),
			0 == this.showRuler)
				return void t.removeObj("rectInterval", t.groupKline);
			for (var e in t.intervalArea)
				if (0 != t.intervalArea[e].c) {
					var i = t.intervalArea[e].i;
					t.oldInterval != i && (t.alphaType = 0,
					t.alphaType = 1,
					t.oldInterval = i),
					0 == t.alphaType ? (t.alphaRectInterval = t.alphaRectInterval - .1,
					t.alphaRectInterval <= .2 && (t.alphaType = 1)) : (t.alphaRectInterval = t.alphaRectInterval + .1,
					t.alphaRectInterval >= .9 && (t.alphaType = 0));
					var n = t.intervalArea[e].x
					  , a = t.intervalArea[e].y
					  , s = t.intervalArea[e].y2
					  , o = t.intervalArea[e].y2
					  , r = t.intervalArea[e].color;
					3 == i ? (o = a - s,
					a = s) : o = s - a;
					var l = new egret.Shape;
					l.name = "rectInterval",
					l.graphics.moveTo(n, a),
					l.graphics.beginFill(r, 1),
					l.graphics.drawRect(n, a, 80, o),
					l.alpha = t.alphaRectInterval,
					l.graphics.endFill(),
					t.addObjArray([l], t.groupKline)
				}
			null == this.timerRectInterval && (this.timerRectInterval = setInterval(function() {
				t.drawRectInterval()
			}, 100))
		}
		,
		i.prototype.drawLineInterval = function(t, e) {
			if (30 != this.options.Diff) {
				0 == this.groupTrade.visible && this.removeSettleGroup();
				var i = this.groupTrade.getChildByName("lbTradeTopTip");
				return null != i && void 0 != i && (i.text = "开奖时间"),
				void this.drawLineTradeTimer(t)
			}
			0 == this.groupSettle.visible && this.removeTradeGroup(null);
			var n = this.lastDianCha
			  , a = this.lastPrice
			  , s = a - n;
			if (null == this.imgLineInterval || this.groupSettle.contains(this.imgLineInterval) || this.groupSettle.addChild(this.imgLineInterval),
			null == this.imgLineInterval || this.imgLineInterval.visible || (this.imgLineInterval.visible = !0),
			this.removeEventListener(egret.Event.ENTER_FRAME, this.dotAnimation, this),
			this.addEventListener(egret.Event.ENTER_FRAME, this.dotAnimation, this),
			!this.lastLineIntervalDraw) {
				if (e)
					this.lastLineIntervalDraw = !0;
				else if (0 == t)
					return;
				var o = 0
				  , r = 0
				  , l = 0;
				n > 0 ? (o = 0,
				l = this.groupSettle.height / 2,
				r = 16001316) : 0 == n ? (o = this.groupSettle.height / 2 - 15,
				l = 30,
				r = 16777215) : 0 > n && (o = this.groupSettle.height / 2,
				l = this.groupSettle.height / 2,
				r = 5169700),
				this.bgSettle = new egret.Shape,
				this.bgSettle.graphics.moveTo(0, o),
				0 == n ? this.bgSettle.graphics.beginFill(r, .8) : this.bgSettle.graphics.beginFill(r, .5),
				this.bgSettle.graphics.drawRect(0, o, this.groupSettle.width, l),
				this.bgSettle.graphics.endFill(),
				this.bgSettle.name = "settle_bg",
				this.addObj(this.bgSettle, this.groupSettle);
				var h = parseFloat(a.toString()).toFixed(this.options.roundPoint)
				  , d = parseInt(h.substr(h.length - 1, 1));
				0 != n ? (this.bgOdds = new eui.Image,
				this.bgOdds.width = 76,
				this.bgOdds.height = 75,
				this.bgOdds.name = "single_double",
				this.bgOdds.x = (this.groupSettle.width - this.bgOdds.width) / 2,
				this.bgOdds.y = o + (this.groupSettle.height / 2 - this.bgOdds.height) / 2,
				d % 2 == 1 ? this.bgOdds.source = RES.getRes("icon_single_png") : this.bgOdds.source = RES.getRes("icon_double_png"),
				this.addObj(this.bgOdds, this.groupSettle)) : (this.bgOdds = new eui.Label,
				this.bgOdds.text = "平",
				this.bgOdds.fontFamily = "lgzbFont",
				this.bgOdds.width = this.groupSettle.width,
				this.bgOdds.height = l,
				this.bgOdds.textAlign = "center",
				this.bgOdds.verticalAlign = "middle",
				this.bgOdds.bold = !0,
				this.bgOdds.stroke = 1,
				this.bgOdds.size = 25,
				this.bgOdds.textColor = 16113323,
				this.bgOdds.name = "single_double",
				this.bgOdds.x = 0,
				this.bgOdds.y = o,
				this.addObj(this.bgOdds, this.groupSettle)),
				this.groupSettle.setChildIndex(this.bgSettle, 999),
				null != this.bgOdds && this.groupSettle.contains(this.bgOdds) && this.groupSettle.setChildIndex(this.bgOdds, 999),
				null != this.lineInterval && this.groupSettle.contains(this.lineInterval) && this.groupSettle.setChildIndex(this.lineInterval, 1001),
				this.groupSettle.setChildIndex(this.lbSettleTopTip, 1002),
				this.groupSettle.setChildIndex(this.lbSettleTopTipTime, 1002);
				var _ = 0
				  , p = this.groupSettle.height / 2
				  , u = this.groupSettle.width
				  , g = u / 30;
				if (0 == n)
					p = this.groupSettle.height / 2;
				else if (n > 0) {
					var c = this.options.MaxData
					  , l = n / (c - s) * (this.groupSettle.height / 2 - 25);
					p = this.groupSettle.height / 2 - l
				} else if (0 > n) {
					var c = this.options.MinData
					  , l = Math.abs(n) / (s - c) * (this.groupSettle.height / 2 - 25);
					p = this.groupSettle.height / 2 + l
				}
				t = 30 - t,
				_ = t * g,
				0 == this.lastLineIntervalX && null != this.lineInterval && (p = this.groupSettle.height / 2,
				this.lineInterval.graphics.lineTo(_, p)),
				_ >= this.groupSettle.width && (_ = 0 == e ? this.groupSettle.width - g / 2 : this.groupSettle.width);
				var m = new eui.Group;
				m.name = "lbGroupDianCha",
				m.width = 42,
				m.height = 100;
				var y = new eui.Image;
				y.width = 93,
				y.height = 42,
				y.x = -1 * y.width + 30 - 2,
				m.addChild(y);
				var v = parseFloat(a.toString()).toFixed(this.options.roundPoint)
				  , b = v.substr(0, v.length - 1)
				  , f = v.substr(v.length - 1, 1)
				  , C = new eui.Label;
				C.text = b,
				C.textColor = 16777215,
				C.size = 15,
				C.textAlign = "center";
				var r = 16777215;
				0 == n ? r = 16777215 : n > 0 ? r = 16001316 : 0 > n && (r = 5169700);
				var T = new eui.Label;
				T.text = f,
				T.textColor = r,
				T.size = 25,
				T.textAlign = "center",
				C.x = y.x + (y.width - C.width) / 2 - 6,
				T.x = C.x + C.width + 2,
				n >= 0 ? (y.source = RES.getRes("bg_classical_kline_open_up_png"),
				y.y = -1 * y.height - 2,
				C.y = y.y + (y.height - C.height) / 2 - 4) : (y.source = RES.getRes("bg_classical_kline_open_down_png"),
				y.y = 0,
				C.y = y.y + (y.height - C.height) / 2 + 4),
				T.y = C.y - 4,
				m.addChild(C),
				m.addChild(T),
				m.y = p,
				m.x = _,
				this.addObj(m, this.groupSettle),
				this.lastLineIntervalX = _,
				this.lineInterval.graphics.lineTo(_, p),
				this.imgLineInterval.x = _ - 25,
				this.imgLineInterval.y = p - 25,
				p = 0;
				var S = new egret.Shape;
				S.graphics.lineStyle(.5, 97307852),
				S.graphics.moveTo(_, p),
				S.graphics.lineTo(_, this.groupSettle.height),
				S.name = "line_move",
				this.addObj(S, this.groupSettle);
				var E = new eui.Image;
				E.source = RES.getRes("icon_settle_timer_png"),
				E.width = 30,
				E.height = 30,
				E.x = _ - E.width / 2,
				E.y = this.groupSettle.height - E.height / 2,
				E.name = "settle_timer",
				this.addObj(E, this.groupSettle),
				this.groupSettle.setChildIndex(E, 999),
				this.groupSettle.setChildIndex(this.groupSettle.getChildByName("settle_end"), 1e3),
				this.groupSettle.setChildIndex(m, 1e3),
				this.lbSettleTopTipTime.y = 2,
				this.lbSettleTopTip.y = this.lbSettleTopTipTime.y,
				this.lbSettleTopTip.x = _ - E.width / 2 - 69,
				this.lbSettleTopTipTime.x = this.lbSettleTopTip.x + this.lbSettleTopTip.width + 3
			}
		}
		,
		i.prototype.drawLineTradeTimer = function(t) {
			var e = 0
			  , i = this.groupSettle.width
			  , n = i / 30;
			t = 30 - t,
			e = t * n,
			e >= this.groupTrade.width && (e = this.groupTrade.width);
			var a = 0
			  , s = new egret.Shape;
			s.graphics.lineStyle(.5, 97307852),
			s.graphics.moveTo(e, a),
			s.graphics.lineTo(e, this.groupTrade.height),
			s.name = "line_move",
			this.addObj(s, this.groupTrade);
			var o = new eui.Image;
			o.source = RES.getRes("icon_settle_timer_png"),
			o.width = 30,
			o.height = 30,
			o.x = e - o.width / 2,
			o.y = this.groupTrade.height - o.height / 2,
			o.name = "settle_timer",
			this.addObj(o, this.groupTrade),
			this.groupTrade.setChildIndex(o, 999),
			this.groupTrade.contains(this.groupTrade.getChildByName("settle_end")) && this.groupTrade.setChildIndex(this.groupTrade.getChildByName("settle_end"), 1e3),
			this.lbTradeTopTip.x = e - o.width / 2 - 69,
			this.lbTradeTopTipTime.x = this.lbTradeTopTip.x + this.lbTradeTopTip.width + 3
		}
		,
		i.prototype.updateTimeLabel = function(t) {
			10 > t && (t = "0" + t),
			30 == t && (t = "00"),
			this.lbTradeTopTipTime.text = "00:" + t,
			this.lbSettleTopTipTime.text = "00:" + t
		}
		,
		i.prototype.drawOpenPriceLine = function(t) {
			if (!(null == t || void 0 == t || t.length <= 0)) {
				var e = t[1]
				  , i = t[2]
				  , n = ((i - e).toFixed(this.options.roundPoint),
				this.options.KlineFlatColor)
				  , a = this.options.KlineFlatColor;
				e > i ? (n = this.options.KlineDownColor,
				a = this.options.KlineDownColor) : i > e ? (n = this.options.KlineUpColor,
				a = this.options.KlineUpColor) : (n = this.options.KlineUpColor,
				a = this.options.KlineFlatColor);
				var s = []
				  , o = 10 + this.options.KlineSpaceLeftWidth + 2
				  , r = (this.options.MaxData - e) * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop
				  , l = new egret.Shape;
				for (l.graphics.lineStyle(1, 13421772); o < 10 + this.options.KlineSpaceLeftWidth + this.options.KlineWidth - this.options.KlineSpaceRightWidth; )
					l.graphics.moveTo(o, r),
					l.graphics.lineTo(o + 3, r),
					o += 6;
				l.name = "lineOpenPrice",
				s.push(l),
				this.addObjArray(s, this.groupKline)
			}
		}
		,
		i.prototype.removeSettleGroup = function() {
			this.groupSettle.removeChildren(),
			this.groupSettle.visible = !1,
			this.groupSettleResult.visible = !1,
			this.removeEventListener(egret.Event.ENTER_FRAME, this.dotAnimation, this),
			this.removeEventListener(egret.Event.ENTER_FRAME, this.bgAnimation, this),
			0 == this.groupTrade.visible && this.drawTradeGroup();
			var t = this.groupTrade.getChildByName("lbTradeTopTip");
			null != t && void 0 != t && (t.text = "下注时间")
		}
		,
		i.prototype.removeTradeGroup = function(t) {
			30 == this.options.Diff ? (this.groupTrade.removeChildren(),
			this.groupTrade.visible = !1,
			0 == this.groupSettle.visible && (null != t && "" != t && void 0 != t && this.setOptions({
				Capital: t
			}),
			this.drawSettleGroup())) : (this.groupSettle.removeChildren(),
			this.groupSettle.visible = !1,
			this.groupSettleResult.visible = !1,
			this.removeEventListener(egret.Event.ENTER_FRAME, this.dotAnimation, this),
			this.removeEventListener(egret.Event.ENTER_FRAME, this.bgAnimation, this),
			0 == this.groupTrade.visible && this.drawTradeGroup())
		}
		,
		i.prototype.drawSettleGroup = function() {
			this.removeEventListener(egret.Event.ENTER_FRAME, this.bgAnimation, this),
			this.addEventListener(egret.Event.ENTER_FRAME, this.bgAnimation, this),
			this.groupSettle.visible = !0,
			this.groupSettle.removeChildren(),
			this.lastLineIntervalDraw = !1,
			this.lastLineIntervalX = 0;
			var t = 0
			  , e = 0
			  , i = (this.groupSettle.width,
			this.groupSettle.height)
			  , n = new egret.Shape;
			n.graphics.moveTo(0, 0),
			n.graphics.beginFill(3028333, 1),
			n.graphics.drawRect(0, 0, this.groupSettle.width, this.groupSettle.height),
			n.graphics.endFill(),
			this.groupSettle.addChild(n);
			var a = new egret.Shape;
			a.graphics.moveTo(0, 0),
			a.graphics.beginFill(0, .5),
			a.graphics.drawRect(0, 0, this.groupSettle.width, this.groupSettle.height),
			a.graphics.endFill(),
			this.groupSettle.addChild(a);
			var s = new egret.Shape;
			s.graphics.lineStyle(.5, 12368570);
			for (var e = 0, t = 0; e < this.groupSettle.height; )
				s.graphics.moveTo(t, e),
				s.graphics.lineTo(t, e + 3),
				e += 6;
			this.groupSettle.addChild(s);
			var o = new egret.Shape;
			o.graphics.lineStyle(2, 12368570);
			for (var e = this.groupSettle.height / 2, t = 0; t < this.groupSettle.width; )
				o.graphics.moveTo(t, e),
				t + 3 < this.groupSettle.width && o.graphics.lineTo(t + 3, e),
				t += 6;
			this.groupSettle.addChild(o);
			var r = new egret.Shape;
			r.graphics.lineStyle(2, 16533785);
			var e = 0
			  , t = this.groupSettle.width;
			r.graphics.moveTo(t, e),
			r.graphics.lineTo(t, this.groupSettle.height),
			this.groupSettle.addChild(r);
			var l = this.options.odds[3].interval_start
			  , h = this.options.odds[5].interval_start;
			"BTCCNY" == this.options.Capital ? (l = parseFloat(l).toFixed(this.options.roundPoint),
			h = parseFloat(h).toFixed(this.options.roundPoint)) : (l *= Math.pow(10, this.options.roundPoint),
			l = Math.round(l),
			h *= Math.pow(10, this.options.roundPoint),
			h = Math.round(h));
			var d = parseFloat(l) + parseFloat(h);
			this.rulerYArray = [];
			for (var _ = 3; 6 > _; _++) {
				var p = parseFloat(this.options.odds[_].interval_start);
				"BTCCNY" == this.options.Capital ? p = parseFloat(p.toFixed(this.options.roundPoint)) : (p *= Math.pow(10, this.options.roundPoint),
				p = Math.round(p));
				var e = 0
				  , t = 0;
				if (0 == p)
					e = this.groupSettle.height / 2;
				else if (p > 0) {
					var i = p / d * (this.groupSettle.height / 2);
					e = this.groupSettle.height / 2 - i
				} else if (0 > p) {
					var i = Math.abs(p) / d * (this.groupSettle.height / 2);
					e = this.groupSettle.height / 2 + i
				}
				var u = new egret.Shape;
				for (u.graphics.lineStyle(.5, 13421772),
				this.rulerYArray.push(e); t < this.groupSettle.width; )
					u.graphics.moveTo(t, e),
					u.graphics.lineTo(t + 2, e),
					t += 5;
				var g = new eui.Label;
				g.text = Math.abs(p).toString(),
				g.size = 15,
				this.groupSettle.addChild(g),
				g.x = this.groupSettle.width + 3,
				g.y = e - 7,
				this.groupSettle.addChild(u)
			}
			this.imgLineInterval = new eui.Image,
			this.imgLineInterval.source = RES.getRes("icon_dot_png"),
			this.imgLineInterval.width = 50,
			this.imgLineInterval.height = 50,
			this.imgLineInterval.visible = !1;
			var c = new eui.Image;
			c.source = RES.getRes("icon_settle_end_png"),
			c.width = 30,
			c.height = 30,
			c.x = this.groupSettle.width - c.width / 2,
			c.y = this.groupSettle.height - c.height / 2,
			c.name = "settle_end",
			this.groupSettle.addChild(c),
			this.groupSettle.addChild(this.imgLineInterval),
			this.lineInterval = new egret.Shape,
			this.lineInterval.graphics.lineStyle(2, 13421772),
			this.lineInterval.graphics.moveTo(0, this.groupSettle.height / 2),
			this.groupSettle.addChild(this.lineInterval),
			this.groupSettle.contains(this.lbSettleTopTip) || this.groupSettle.addChild(this.lbSettleTopTip),
			this.groupSettle.contains(this.lbSettleTopTipTime) || this.groupSettle.addChild(this.lbSettleTopTipTime)
		}
		,
		i.prototype.drawTradeGroup = function() {
			this.groupKline.contains(this.groupTrade) || this.groupKline.addChild(this.groupTrade),
			this.groupTrade.visible = !0,
			this.groupTrade.removeChildren(),
			this.lastLineIntervalX = 0;
			var t = 0
			  , e = 0
			  , i = (this.groupTrade.width,
			this.groupTrade.height,
			new egret.Shape);
			i.graphics.lineStyle(2, 16533785);
			var e = 0
			  , t = this.groupTrade.width;
			i.graphics.moveTo(t, e),
			i.graphics.lineTo(t, this.groupTrade.height),
			this.groupTrade.addChild(i);
			var n = new eui.Image;
			n.source = RES.getRes("icon_settle_end_png"),
			n.width = 30,
			n.height = 30,
			n.x = this.groupSettle.width - n.width / 2,
			n.y = this.groupSettle.height - n.height / 2,
			n.name = "settle_end",
			this.groupTrade.addChild(n),
			this.lineInterval = new egret.Shape,
			this.lineInterval.graphics.lineStyle(2, 13421772),
			this.lineInterval.graphics.moveTo(0, this.groupTrade.height / 2),
			this.groupTrade.addChild(this.lineInterval),
			this.groupKline.setChildIndex(this.groupTrade, 1e3),
			this.groupTrade.contains(this.lbTradeTopTip) || this.groupTrade.addChild(this.lbTradeTopTip),
			this.groupTrade.contains(this.lbTradeTopTipTime) || this.groupTrade.addChild(this.lbTradeTopTipTime)
		}
		,
		i.prototype.removeOpenPriceLine = function() {
			this.removeObj("lineOpenPrice", this.groupKline),
			this.removeObj("lineRuler", this.groupKline);
			for (var t = 3; 10 >= t; t++)
				this.removeObj("lineRulerPrice_" + t.toString(), this.groupKline),
				this.removeObj("lb_ruler_" + t.toString(), this.groupKline)
		}
		,
		i.prototype.drawMALine = function(t) {
			var e, i, n = new egret.Shape, a = new egret.Shape;
			n.name = "lineMA5",
			a.name = "lineMA10",
			n.graphics.lineStyle(1, this.options.MA5Color),
			a.graphics.lineStyle(1, this.options.MA10Color);
			for (var s = 0; s < t.length; s++)
				if (!(s >= this.options.CandleCount - this.options.LeftFixed || 0 == s)) {
					e = this.options.Coordinate[s][1] + 8 - (this.options.CandleWidth + this.options.CandleSpaceInterval) * this.options.LeftFixed;
					var o = this.options.MaxData - this.options.MinData
					  , r = t[s][5];
					r = this.options.MaxData - r,
					r && r > 0 && o >= r && (i = r * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop,
					0 == s ? n.graphics.moveTo(e, i) : n.graphics.lineTo(e, i)),
					r = t[s][6],
					r = this.options.MaxData - r,
					r && r > 0 && o >= r && (i = r * this.options.Ratio + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop,
					0 == s ? a.graphics.moveTo(e, i) : a.graphics.lineTo(e, i))
				}
			n.graphics.endFill(),
			a.graphics.endFill(),
			this.addObjArray([n, a], this.groupKline)
		}
		,
		i.prototype.drawLastCandle = function(t) {
			var e, i, n, a, s, o, r, l, h, d, _, p = this.options.Ratio, u = this.options.KlineUpColor, g = this.options.KlineDownColor, c = this.options.KlineFlatColor, m = this.options.MaxData, y = (this.options.MinData,
			c), v = CONST.ODDS_IMG.FLAT;
			n = t[0],
			a = parseFloat(t[1]).toFixed(this.options.roundPoint),
			r = parseFloat(t[2]).toFixed(this.options.roundPoint),
			s = parseFloat(t[3]).toFixed(this.options.roundPoint),
			o = parseFloat(t[4]).toFixed(this.options.roundPoint),
			l = r - a,
			this.updateLastPricePanel(a, r, s, o),
			this.lastPrice = r,
			this.showRuler && (this.lastDianCha = l),
			a > r ? (y = g,
			_ = a,
			v = CONST.ODDS_IMG.DOWN) : r > a ? (y = u,
			_ = r,
			v = CONST.ODDS_IMG.UP) : (y = c,
			_ = r,
			v = CONST.ODDS_IMG.FLAT),
			h = Math.abs((a - r) * p),
			d = (s - o) * p,
			0 >= h && (h = 2),
			e = this.options.Coordinate[0][1] - (this.options.CandleWidth + this.options.CandleSpaceInterval) * this.options.LeftFixed,
			i = (m - _) * p + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop;
			var b = new egret.Shape
			  , f = new egret.Shape;
			if (b.name = "candleRect_last",
			f.name = "candleLine_last",
			n % 60 == 30 ? (b.graphics.moveTo(e, i),
			b.graphics.beginFill(y, 1),
			b.graphics.drawRect(e, i, this.options.CandleWidth, h),
			b.graphics.endFill()) : (b.graphics.lineStyle(2, y),
			b.graphics.moveTo(e, i),
			b.graphics.beginFill(3159410, 1),
			b.graphics.drawRect(e, i, this.options.CandleWidth, h),
			b.graphics.endFill()),
			e += this.options.CandleWidth / 2,
			i = (this.options.MaxData - s) * p + this.options.KlineSpaceTopHeight + this.options.ChartMarginTop,
			f.graphics.lineStyle(2, y),
			f.graphics.moveTo(e, i),
			f.graphics.lineTo(e, i + d),
			f.graphics.endFill(),
			this.showRuler)
				null == this.imgArrow && (this.imgArrow = new eui.Image,
				this.imgArrow.width = 19,
				this.imgArrow.height = 20,
				this.imgArrow.x = e - this.imgArrow.width / 2,
				this.imgArrow.name = "last_candle_arrow"),
				a > r ? (this.imgArrow.source = RES.getRes("icon_kline_arrow_up_png"),
				this.imgArrow.y = i + d + 15) : r > a ? (this.imgArrow.source = RES.getRes("icon_kline_arrow_down_png"),
				this.imgArrow.y = i - this.imgArrow.height - 15) : (this.imgArrow.source = RES.getRes("icon_kline_arrow_down_png"),
				this.imgArrow.y = i - this.imgArrow.height - 15),
				this.addObj(this.imgArrow, this.groupKline);
			else {
				var C = this.groupKline.getChildByName("last_candle_arrow");
				null != C && this.groupKline.removeChild(C)
			}
			if (30 == this.options.Diff && n % 60 == 30) {
				e = this.options.Coordinate[0][1] - (this.options.CandleWidth + this.options.CandleSpaceInterval) * this.options.LeftFixed - this.options.CandleSpaceInterval - this.options.CandleWidth,
				i = this.groupKline.height - this.options.KlineSpaceBottomHeight - 25,
				null == this.lastOddsImg && (this.lastOddsImg = new eui.Image),
				this.lastOddsImg.name = "oddsRect_last",
				this.lastOddsImg.source = RES.getRes(v),
				this.lastOddsImg.width = 35,
				this.lastOddsImg.height = 25,
				this.lastOddsImg.x = e,
				this.lastOddsImg.y = i,
				this.groupKline.contains(this.lastOddsImg) || this.groupKline.addChild(this.lastOddsImg);
				var T = this.getWinOdds(l, r);
				if (null != this.pointDiffListener) {
					var S = parseFloat(l.toString());
					"BTCCNY" == this.options.Capital ? S = parseFloat(S.toFixed(this.options.roundPoint)) : (S *= Math.pow(10, this.options.roundPoint),
					S = Math.round(S)),
					this.pointDiffListener(S, T, this.thisObject)
				}
				null == this.lastLbOdds && (this.lastLbOdds = new eui.Label),
				this.lastLbOdds.name = "oddsLabel_last",
				1 == T.order ? this.lastLbOdds.text = "X" + parseFloat(T.odds) : this.lastLbOdds.text = T.display.substr(T.display.length - 1, 1),
				this.lastLbOdds.fontFamily = "lgzbFont",
				this.lastLbOdds.x = e,
				this.lastLbOdds.y = i + 3,
				this.lastLbOdds.width = 35,
				this.lastLbOdds.textAlign = "center",
				this.lastLbOdds.textColor = 16113323,
				this.lastLbOdds.stroke = 1,
				this.lastLbOdds.strokeColor = 789259,
				this.lastLbOdds.size = this.options.FontSize,
				this.groupKline.contains(this.lastLbOdds) || this.groupKline.addChild(this.lastLbOdds),
				this.groupKline.setChildIndex(this.lastOddsImg, 1e3),
				this.groupKline.setChildIndex(this.lastLbOdds, 1e3)
			}
			this.addObjArray([f, b], this.groupKline)
		}
		,
		i.prototype.addObj = function(t, e) {
			this.removeObj(t.name, e),
			e.addChild(t)
		}
		,
		i.prototype.addObjArray = function(t, e) {
			for (var i = 0; i < t.length; i++)
				this.addObj(t[i], e)
		}
		,
		i.prototype.removeObj = function(t, e) {
			var i = e.getChildByName(t);
			i && i.parent && (i.parent.removeChild(i),
			i = null)
		}
		,
		i.prototype.mergeCacheData = function(t, e, i) {
			var n = Utils.getStorageObj(t + e);
			if (n && n.length > 0 && i && i.length > 0)
				for (var a = 0; a < n.length; a++) {
					var s = n[a][0]
					  , o = i[i.length - 1][0];
					if (o >= s) {
						n.splice(0, a + 1);
						for (var r = i.length - 1; r >= 0; r--)
							n.unshift(i[r]);
						break
					}
				}
			return n
		}
		,
		i.prototype.getWinOdds = function(t, e) {
			var i = -100
			  , n = -100;
			i = 0 > t ? -1 : t > 0 ? 1 : 0;
			var a = parseFloat(e.toString()).toFixed(this.options.roundPoint)
			  , s = parseInt(a.substr(a.length - 1, 1));
			n = s % 2 == 1 ? 1 : 2;
			for (var o = 0; o < this.options.odds.length; o++)
				if (0 != this.options.odds[o].order && 2 != this.options.odds[o].order) {
					var r = this.options.odds[o].interval_start
					  , l = this.options.odds[o].interval_end;
					if (r == i && null == l || r == i && l == n)
						return 1 == this.options.odds[o].order ? this.options.odds[o] : this.options.odds[o]
				}
		}
		,
		i.prototype.getWinOddsList = function(t, e) {
			var i = -100
			  , n = -100;
			i = 0 > t ? -1 : t > 0 ? 1 : 0;
			var a = parseFloat(e.toString()).toFixed(this.options.roundPoint)
			  , s = parseInt(a.substr(a.length - 1, 1));
			n = s % 2 == 1 ? 1 : 2;
			for (var o = [], r = 0; r < this.options.odds.length; r++) {
				var l = this.options.odds[r].interval_start
				  , h = this.options.odds[r].interval_end;
				(l == i && null == h || l == i && h == n) && o.push(this.options.odds[r])
			}
			return o
		}
		,
		i.prototype.dotAnimation = function(t) {
			1 == this.type ? this.imgLineInterval.alpha <= 1 && this.imgLineInterval.alpha > 0 ? (this.imgLineInterval.alpha = (this.imgLineInterval.alpha - .02).toFixed(2),
			null != this.imgLineInterval1 && (this.imgLineInterval1.alpha = this.imgLineInterval.alpha)) : this.type = 0 : 0 == this.type && (this.imgLineInterval.alpha < 1 && this.imgLineInterval.alpha >= 0 ? (this.imgLineInterval.alpha = (this.imgLineInterval.alpha + .02).toFixed(2),
			null != this.imgLineInterval1 && (this.imgLineInterval1.alpha = this.imgLineInterval.alpha)) : this.type = 1)
		}
		,
		i.prototype.bgAnimation = function(t) {
			null != this.bgSettle && (1 == this.type1 ? this.bgSettle.alpha <= 1 && this.bgSettle.alpha > .2 ? (this.bgSettle.alpha = (this.bgSettle.alpha - .015).toFixed(2),
			null != this.bgOdds && (this.bgOdds.alpha = this.bgSettle.alpha),
			null != this.lastOddsImg && (this.lastOddsImg.alpha = this.bgSettle.alpha),
			null != this.lastLbOdds && (this.lastLbOdds.alpha = this.bgSettle.alpha),
			null != this.imgArrow && (this.imgArrow.alpha = this.bgOdds.alpha)) : this.type1 = 0 : 0 == this.type1 && (this.bgSettle.alpha < 1 && this.bgSettle.alpha >= .2 ? (this.bgSettle.alpha = (this.bgSettle.alpha + .015).toFixed(2),
			null != this.bgOdds && (this.bgOdds.alpha = this.bgSettle.alpha),
			null != this.lastOddsImg && (this.lastOddsImg.alpha = this.bgSettle.alpha),
			null != this.lastLbOdds && (this.lastLbOdds.alpha = this.bgSettle.alpha),
			null != this.imgArrow && (this.imgArrow.alpha = this.bgOdds.alpha)) : this.type1 = 1))
		}
		,
		i.prototype.partAdded = function(t, i) {
			e.prototype.partAdded.call(this, t, i)
		}
		,
		i.prototype.childrenCreated = function() {
			e.prototype.childrenCreated.call(this)
		}
		,
		i
	}(eui.Component);
	t.SimKlineMasterBar = e,
	__reflect(e.prototype, "game.SimKlineMasterBar", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i() {
			var t = e.call(this) || this;
			return t.capital = "EURUSD",
			t.objData = {
				key: "EURUSD30",
				data: [
					["1495727820", "1.12196", "1.12201", "1.12201", "1.12159"],
					["1495727790", "1.12157", "1.12162", "1.12165", "1.12156"],
					["1495727760", "1.12164", "1.12157", "1.12166", "1.12153"],
					["1495727730", "1.12166", "1.12164", "1.12176", "1.12160"],
					["1495727700", "1.12179", "1.12166", "1.12179", "1.12163"],
					["1495727670", "1.12184", "1.12179", "1.12188", "1.12175"],
					["1495727640", "1.12183", "1.12184", "1.12187", "1.12173"],
					["1495727610", "1.12195", "1.12183", "1.12187", "1.12178"],
					["1495727580", "1.12200", "1.12195", "1.12201", "1.12181"],
					["1495727550", "1.12198", "1.12200", "1.12203", "1.12187"],
					["1495727520", "1.12195", "1.12198", "1.12199", "1.12186"],
					["1495727490", "1.12186", "1.12195", "1.12196", "1.12185"],
					["1495727460", "1.12179", "1.12186", "1.12188", "1.12178"],
					["1495727430", "1.12176", "1.12179", "1.12184", "1.12175"],
					["1495727400", "1.12177", "1.12176", "1.12182", "1.12174"],
					["1495727370", "1.12168", "1.12177", "1.12180", "1.12167"],
					["1495727340", "1.12160", "1.12168", "1.12174", "1.12155"],
					["1495727310", "1.12165", "1.12160", "1.12168", "1.12161"],
					["1495727280", "1.12169", "1.12165", "1.12173", "1.12164"],
					["1495727250", "1.12168", "1.12169", "1.12175", "1.12167"],
					["1495727220", "1.12180", "1.12168", "1.12182", "1.12168"],
					["1495727190", "1.12188", "1.12180", "1.12193", "1.12175"],
					["1495727160", "1.12194", "1.12188", "1.12199", "1.12182"],
					["1495727130", "1.12190", "1.12194", "1.12195", "1.12187"],
					["1495727100", "1.12181", "1.12190", "1.12192", "1.12180"],
					["1495727070", "1.12172", "1.12181", "1.12178", "1.12169"],
					["1495727040", "1.12178", "1.12172", "1.12170", "1.12178"],
					["1495727010", "1.12183", "1.12178", "1.12188", "1.12175"],
					["1495726980", "1.12189", "1.12183", "1.12197", "1.12175"],
					["1495726950", "1.12193", "1.12189", "1.12193", "1.12181"],
					["1495726950", "1.12173", "1.12189", "1.12193", "1.12171"],
					["1495726950", "1.12170", "1.12173", "1.12179", "1.12188"],
					["1495726950", "1.12163", "1.12170", "1.12173", "1.12161"]
				],
				capitalType: "EURUSD",
				diff: 30,
				decimalPoint: 5,
				time: "1495727880"
			},
			t.btn_bet_array = Array(),
			t.numQi = "",
			t.user_name = "",
			t.avatar_url = "",
			t.vip_grade = "",
			t.banker_queue_data = [{
				balance: 142017200,
				user_name: "-12°C的痛",
				user_avatar: "http://wx.qlogo.cn/mmopen/Xewa2JUmZ1pQuywHg1DJeevTPibia18uBEG8uRgqtgG3jPiaBo7DFPib3icruWXdx8cM5lBmVoAJJ7xicAt0WFo3MYicg/0",
				vip_grade: 7
			}, {
				balance: 30903300,
				user_name: "游戏人生",
				user_avatar: "http://wx.qlogo.cn/mmopen/VZyWtwlx79qCoQtpqZoCuG4IiaFh9Vic03m5zu2OSBRKVHhk9DVPgWYgcKia6pWvAqTZQXvQLFZ5ecCGZd4swddJTSwLXo7Sh7C/0",
				vip_grade: 9
			}, {
				balance: 10233e3,
				user_name: "恭喜发财",
				user_avatar: "",
				vip_grade: 9
			}],
			t.type = 1,
			t.capital_odds = [{
				id: "32",
				capital_key: "EURUSD",
				interval_start: "0",
				interval_end: null,
				display: "",
				odds: "1.5",
				order: "0"
			}, {
				id: "14",
				capital_key: "EURUSD",
				interval_start: "0",
				interval_end: "0",
				display: "",
				odds: "20.0",
				order: "1"
			}, {
				id: "33",
				capital_key: "EURUSD",
				interval_start: null,
				interval_end: "0",
				display: "",
				odds: "1.5",
				order: "2"
			}, {
				id: "18",
				capital_key: "EURUSD",
				interval_start: "0.00011",
				interval_end: null,
				display: "> 11",
				odds: "12.0",
				order: "3"
			}, {
				id: "17",
				capital_key: "EURUSD",
				interval_start: "0.00006",
				interval_end: "0.00011",
				display: "6 - 11",
				odds: "8.0",
				order: "4"
			}, {
				id: "16",
				capital_key: "EURUSD",
				interval_start: "0.00003",
				interval_end: "0.00006",
				display: "3 - 6",
				odds: "6.0",
				order: "5"
			}, {
				id: "15",
				capital_key: "EURUSD",
				interval_start: "0",
				interval_end: "0.00003",
				display: "0 - 3",
				odds: "4.0",
				order: "6"
			}, {
				id: "13",
				capital_key: "EURUSD",
				interval_start: "-0.00003",
				interval_end: "0",
				display: "0 - 3",
				odds: "4.0",
				order: "7"
			}, {
				id: "12",
				capital_key: "EURUSD",
				interval_start: "-0.00006",
				interval_end: "-0.00003",
				display: "3 - 6",
				odds: "6.0",
				order: "8"
			}, {
				id: "11",
				capital_key: "EURUSD",
				interval_start: "-0.00011",
				interval_end: "-0.00006",
				display: "6 - 11",
				odds: "8.0",
				order: "9"
			}, {
				id: "10",
				capital_key: "EURUSD",
				interval_start: null,
				interval_end: "-0.00011",
				display: "> 11",
				odds: "12.0",
				order: "10"
			}],
			t.addEventListener(eui.UIEvent.COMPLETE, t.uiCompHandler, t),
			t.skinName = "resource/ui/main/UserGuideSkin.exml",
			t
		}
		return __extends(i, e),
		i.prototype.uiCompHandler = function(e) {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			setTimeout(function() {
				GameLayerManager.gameLayer().mainLayer.$children.length > 1 && GameLayerManager.gameLayer().mainLayer.removeChildAt(1)
			}, 100),
			this.headerBar = t.HeaderBar.getInstance(!0),
			this.headerBar.return_type = "user_guide",
			this.groupHeader.addChild(this.headerBar),
			this.footerBar = t.FooterBar.getInstance(),
			this.groupFooter.addChild(this.footerBar),
			this.initIntervalOdds(),
			this.showMenuList();
			var i = Utils.getStorageObj(Keys.FK_UserInfo);
			null != i && (this.user_name = i.name,
			this.avatar_url = i.avatar_url,
			this.vip_grade = i.vip_grade)
		}
		,
		i.prototype.showMenuList = function() {
			var e = this;
			this.group_introduce.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
				e.btn_return_menu.visible = !0,
				e.showGameIntroduce()
			}, this),
			this.group_qa.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
				e.btn_return_menu.visible = !0,
				e.showGameQA()
			}, this),
			this.btn_return_menu.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
				e.group_content.removeChildren(),
				e.group_content.addChild(e.group_menu),
				e.btn_return_menu.visible = !1,
				e.scroller.viewport.scrollV = 0
			}, this),
			this.group_new_task.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				e.btn_return_menu.visible = !1,
				e.goToGrabGuide()
			}, this),
			this.group_more.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
				e.btn_return_menu.visible = !1,
				e.startGuide()
			}, this),
			this.setChildIndex(this.groupHeader, 1e3),
			this.setChildIndex(this.groupFooter, 1e3),
			this.group_menu.setChildIndex(this.group_introduce, 1e3),
			this.group_menu.setChildIndex(this.group_qa, 1e3),
			this.group_menu.setChildIndex(this.group_new_task, 1e3),
			this.group_menu.setChildIndex(this.group_more, 1e3)
		}
		,
		i.prototype.showGameIntroduce = function() {
			this.group_content.removeChildren();
			var t = new eui.Group;
			t.x = 0,
			t.y = 0;
			var e = new eui.Label;
			e.size = 40,
			e.text = "玩法简介",
			e.stroke = 2,
			e.strokeColor = 284272,
			e.fontFamily = "Microsoft YaHei",
			e.horizontalCenter = 0,
			e.y = 30,
			e.multiline = !0,
			e.maxWidth = 590,
			t.addChild(e);
			for (var i = ["这是一个玩家与庄家对垒的模式，每个用户都可以申请当庄哦。没有庄家时，奖池的金币将会成为庄家金币。", "1，经典模式采用回合制，每60秒一个回合. 每回合用户都有25秒的下注时间, 停止下注后有30秒时间等待结算。", "2，该模式提供了7个按钮供玩家进行下注，玩家可通过分析K线及趋势来判断开奖K棒的涨跌和开奖收盘价末尾数字的单双。", "3，如果玩家押中涨跌或单双，那么庄家将会按照相应的赔率来赔付金币；如果玩家没有押中，那么庄家赢得玩家所下金币。"], n = e.y + e.height + 40, a = 0; a < i.length; a++) {
				var s = new eui.Label;
				s.text = i[a],
				s.size = 30,
				s.fontFamily = "Microsoft YaHei",
				s.x = 20,
				s.y = n,
				s.multiline = !0,
				s.maxWidth = 590,
				s.lineSpacing = 10,
				t.addChild(s),
				n = n + s.height + 40
			}
			this.group_content.addChild(t)
		}
		,
		i.prototype.showGameQA = function() {
			this.group_content.removeChildren();
			var t = new eui.Group;
			t.x = 0,
			t.y = 0;
			for (var e = [
					["问：怎么样才算赢？盈利的金币怎么计算？", "如果玩家押中涨跌或单双，那么庄家将会按照获胜按钮上的赔率来赔付金币；如果玩家没有猜中，那么庄家赢得玩家下注的金币。例如：您在“红方胜”按钮和红色“单”按钮各下注1000金币，如果本局开奖结果为上涨，且收盘价末尾数为单数，那么您将赢得的金币为：（1000×1.85）+（1000×3.85）=5700金币。"],
					["问：为什么我猜中了却没有赢够倍数？", "答：如果出现庄家金币不足以赔付（即庄家被爆庄）时，本局所有下注金币加上庄家的金币，将结合下注金额和赔付比例分配给本局胜利的玩家。"],
					["问：如何让我充值的100元快速盈利到10000元？", "答：\n    1.首先您要学会观察盘面，结合K线形态和趋势，在合适的时候果断选择高倍率按钮下注，最高可以赢得30倍的金币哦！\n    2. 您可以在游戏中申请上庄，成为庄家后可以有机会赢取所有玩家下注的金币哦！\n    3. 您也可以成为经纪人，邀请好友参与游戏，最高可获得10%的充值返现奖励！您邀请的好友人数越多，好友充值金额越大，您的收益就越高哦！"],
					["问：怎么在游戏中购买金币/怎么充值？", "答:点击金币右边的“+”，或者在游戏房间`点击上方的“充值”按钮，然后选择您需要购买的数量，点击购买按钮选择支付方式进行支付即可。"],
					["问：如何切换登录其他账号？", "答：在游戏大厅中点击右下方的“账户”，在弹出的窗口中点击“注销账户”按钮，即可重新输入账号密码登录游戏。"],
					["问：怎么成为VIP？", "答：VIP通过充值获得，当玩家充值达到一定的金额即可升级为相应等级的VIP。"],
					["问：充值不到账怎么办？", "答： 充值购买金币均为实时到账，由于网络原因可能会稍有延迟。请留意账户是否扣费成功，若账户已扣费，建议您先退出游戏重新登录查看是否到账。若在10分钟后仍未到账，还请您将购买时间、购买数额、账户扣费信息截图及游戏ID（点击“账户”查看）提供给客服，以便工作人员查询处理。"],
					["问：为什么有时下注了但没有中奖？", "答：如果您的设备网络环境不好，或者在倒计时最后时间下注，都有可能导致服务器未能接收到你的下注信息，这种情况下系统不会扣除您的金币，您也不会获得中奖金币，请您在较好的网络环境下进行游戏。"],
					["问：为什么有时游戏会自动退出或者无法进入？", "答：原因可能是网络不佳或者运行内存不足。请先检查网络，关闭后台的其他程序再重新登录；若问题依然存在，请把详细情况反馈给客服，我们工作人员会及时为您处理。"],
					["问：登陆之后我的金币怎么没了？", "答：（1）可能是您切换了其他账号登录的原因；您可以在游戏大厅中点击右下方的“账户”，在弹出的窗口中点击“注销账户”按钮，然后输入您之前的账号密码登录游戏。（2）请确认您之前是否有申请上庄操作，如果您之前在上庄列表中排队，那么可能是您上庄后被爆庄的原因哦。"],
					["问：为什么我刚刚盈利了，今日盈利榜没有变？", "答：今日盈利榜每30分钟更新一次，财富榜为实时更新。"],
					["问：为什么我无法进行支付/充值失败？", "答：请检查下网络、是否有足够的余额进行充值。若依旧无法充值，请把详细情况反馈给客服，工作人员会及时为您处理。"],
					["问：如何成为经纪人？", "答：点击游戏大厅下方的 “经纪人”，进入页面后点击获取您的专属二维码图片，保存发给您的好友，注意提示好友扫码关注并进入公众号，点击左下方开始交易注册账号。"],
					["问：如何查看自己的经纪人？", "答：进入游戏大厅，点击右下方的“账户”可查看自己的邀请人昵称。"],
					["问：经纪人怎么返利？", "答：经纪人的收益由好友的充值金额决定，邀请的好友人数越多，好友充值金额越大，您的收益就越高哦！详情请点击游戏大厅下方的 “经纪人”按钮，查看经纪人收益规则。"],
					["问：游戏中的行情准确吗？", "答：游戏采用最新的K线系统，行情的波动和国际数据是一致的。"],
					["问：我的到账邀请为什么比预期收益少？", "答：您邀请的好友充值之后，按照经纪人收益规则，会在预期收益里显示您的返利金额。您的好友每交易一笔，交易金额的相应比例的返利会到您的到账邀请里，等您的好友本次充值的金币全部用于交易时，返利才会全部返到您的到账邀请里，同时停止返利，等您的好友下次充值的时候才可以继续给您返利。"]], i = 20, n = 0; n < e.length; n++) {
				for (var a = 0; a < e[n].length; a++) {
					var s = 16777215;
					e[n][a].indexOf("问：") > -1 && (s = 16735067);
					var o = new eui.Label;
					o.text = e[n][a],
					o.textColor = s,
					o.size = 30,
					o.fontFamily = "Microsoft YaHei",
					o.x = 20,
					o.y = i,
					o.multiline = !0,
					o.maxWidth = 590,
					o.lineSpacing = 10,
					t.addChild(o),
					i = i + o.height + 10
				}
				i += 25
			}
			this.group_content.addChild(t)
		}
		,
		i.prototype.startGuide = function() {
			var e = this
			  , i = this;
			egret.Tween.get(this.groupHeader, {
				loop: !1
			}).to({
				y: -1 * this.groupHeader.height
			}, 300).call(function() {
				i.removeChild(i.groupHeader)
			}, this),
			egret.Tween.get(this.groupFooter, {
				loop: !1
			}).to({
				y: this.height
			}, 300).call(function() {
				i.removeChild(i.groupFooter)
			}, this),
			egret.Tween.get(this.group_miji_dialog, {
				loop: !1
			}).to({
				x: -1 * this.group_miji_dialog.width
			}, 500).call(function() {
				i.removeChild(i.group_miji_dialog),
				i.group = new eui.Group,
				i.addChild(i.group),
				i.step1()
			}, this),
			this.lb_return.visible = !0,
			this.lb_return.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				e.removeEventListener(egret.Event.ENTER_FRAME, e.btnApplyBankerAnimation, e),
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().return_sound_ready && t.SceneTrade.getInstance().return_sound.play(0, 1),
				t.FooterBar.getInstance().goTo(t.FooterBar.getInstance().btns[1], !0)
			}, this)
		}
		,
		i.prototype.step0 = function() {
			this.drawText(30, 260, "玩法简介: ", 23, this.group),
			this.drawText(30, 300, "这是一个玩家与庄家对垒的模式，每个用户都可以申请当庄哦!", 23, this.group),
			this.drawText(30, 410, "1，抢庄竞猜采用回合制，每60秒一个回合. 一个回合中，30秒一个K棒，共有两个K棒. 前30秒是用户下注时间，K棒是下注K棒, 后30秒是等待开奖时间，K棒是开奖K棒.", 23, this.group),
			this.drawText(30, 590, "2，该模式提供了11个点差区间供玩家进行下注，玩家可通过分析K线走势来判断开奖K棒的点差区间.", 23, this.group),
			this.drawText(30, 730, "3，如果玩家押中点差区间，那么庄家将会按照相应的赔率来赔付金币. 如果玩家没有押中, 那么庄家赢得用户所下金币.", 23, this.group),
			this.lb_next.text = "开始新手指导",
			this.lb_next.addEventListener(egret.TouchEvent.TOUCH_TAP, this.step1, this)
		}
		,
		i.prototype.step1 = function() {
			this.lb_next.visible = !0,
			this.lb_next.text = "下一步";
			var t = this;
			t.group.x = 0,
			t.bg_kline.visible = !0,
			t.addKlineGroup(),
			t.drawCandle(1, 105, 40, 10, 30, 80, t.group),
			t.drawText(60, 180, "红棒子: 涨", 25, t.group),
			t.drawCandle(2, 345, 40, 10, 30, 2, t.group),
			t.drawText(285, 180, "白色十字星: 平", 25, t.group),
			t.drawCandle(3, 585, 40, 10, 30, 80, t.group),
			t.drawText(540, 180, "绿棒子: 跌", 25, t.group),
			t.drawPointDiff(),
			t.lb_next.addEventListener(egret.TouchEvent.TOUCH_TAP, t.step2, t),
			t.lb_title.text = "K线: 显示该资产一段时间内的行情走势, 每30秒一根棒子, 玩家可以通过观察K线判断该资产接下来的涨跌情况.",
			t.lb_title.y = -1 * t.lb_title.height,
			egret.Tween.get(t.lb_title, {
				loop: !1
			}).to({
				y: 5
			}, 300).call(function(t) {}, t),
			t.group.y = t.kline_group.y + t.kline_group.height + 40
		}
		,
		i.prototype.step2 = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1);
			var e = this;
			this.lb_next.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.step2, this),
			egret.Tween.get(this.group, {
				loop: !1
			}).to({
				x: -1 * this.group.width
			}, 500).call(function() {
				e.group.removeChildren(),
				e.group.x = 0,
				e.group.y = e.kline_group.y + e.kline_group.height + 40,
				e.drawRuler(e)
			}, this),
			egret.Tween.get(this.lb_title, {
				loop: !1
			}).to({
				y: -1 * this.lb_title.height
			}, 300).call(function() {
				this.lb_title.text = "点差区间: 等待结算时, 标尺出现, 当前棒子为结算棒子, 每个刻度代表一个点差区间, 与下注按钮上的点差区间一致.",
				egret.Tween.get(this.lb_title, {
					loop: !1
				}).to({
					y: 5
				}, 300)
			}, this)
		}
		,
		i.prototype.step22 = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1);
			var e = this;
			e.group.removeChild(e.lb1),
			e.group.removeChild(e.lb2),
			e.group.removeChild(e.img1),
			e.group.removeChild(e.lb3),
			e.lb_next.removeEventListener(egret.TouchEvent.TOUCH_TAP, e.step22, e),
			egret.Tween.get(this.kline_group, {
				loop: !1
			}).to({
				x: -1 * this.kline_group.width
			}, 500).call(function() {}, this),
			e.group.removeChild(e.lb_close_price),
			e.group.removeChild(e.lb_open_price),
			egret.Tween.get(this.group, {
				loop: !1
			}).to({
				y: 160
			}, 500, egret.Ease.cubicOut).call(function() {
				e.bet_group.visible = !0,
				e.bet_group.y = 1199,
				egret.Tween.get(this.bet_group, {
					loop: !1
				}).to({
					y: 515
				}, 500, egret.Ease.cubicOut).call(function() {
					e.drawBetGroupIntroduce(),
					e.lb_next.addEventListener(egret.TouchEvent.TOUCH_TAP, e.step3, e)
				}, e)
			}, this),
			egret.Tween.get(this.lb_title, {
				loop: !1
			}).to({
				y: -1 * this.lb_title.height
			}, 300).call(function() {
				this.lb_title.text = "下注按钮: 选择屏幕下方11个按钮进行下注，每个按钮上标注有竞猜的点差区间和对应的赔率(红色代表上涨，绿色代表下跌，白色代表平)，请点击下注按钮，观察对应区间与赔率.",
				egret.Tween.get(this.lb_title, {
					loop: !1
				}).to({
					y: 5
				}, 300)
			}, this)
		}
		,
		i.prototype.step3 = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1);
			var e = this;
			this.lb_next.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.step3, this),
			egret.Tween.get(this.bet_group, {
				loop: !1
			}).to({
				x: -1 * this.bet_group.width
			}, 500).call(function() {
				e.bet_group.visible = !1,
				e.drawIntervalOdds(),
				e.lb_next.addEventListener(egret.TouchEvent.TOUCH_TAP, e.step4, e)
			}, this),
			egret.Tween.get(this.lb_title, {
				loop: !1
			}).to({
				y: -1 * this.lb_title.height
			}, 300).call(function() {
				this.lb_title.text = "点差区间与赔率: 点差区间与赔率是一一对应的. 如果结算的点差区间和用户下注的点差区间相同, 用户可获取相应赔率的奖励.",
				egret.Tween.get(this.lb_title, {
					loop: !1
				}).to({
					y: 5
				}, 300)
			}, this)
		}
		,
		i.prototype.step4 = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1);
			var e = this;
			this.lb_next.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.step4, this),
			egret.Tween.get(this.kline_group, {
				loop: !1
			}).to({
				x: -1 * this.kline_group.width
			}, 500).call(function() {}, this),
			egret.Tween.get(this.group, {
				loop: !1
			}).to({
				x: -1 * this.group.width
			}, 500).call(function() {
				e.group.removeChildren(),
				e.group.x = 0,
				e.group.y = e.banker_group.y + e.banker_group.height + 40,
				e.lb_next.text = "开始尝试一把",
				e.lb_next.addEventListener(egret.TouchEvent.TOUCH_TAP, e.goToGrabGuide, e),
				e.kline_group.visible = !1,
				e.banker_group.x = e.width,
				e.banker_group.visible = !0,
				egret.Tween.get(e.banker_group, {
					loop: !1
				}).to({
					x: (e.width - e.banker_group.width) / 2
				}, 200),
				e.loadBankerImage("http://wx.qlogo.cn/mmopen/rJdcGSBib920Fib6icRdEx6aib3cLssVY94SEHjQpHuXRaPLswByfny5JoOicXb7qSPz4byiaW7HjCTHJ0JMGIIPbWG9RrwObzHOAT/0"),
				e.drawBankerIntroduce()
			}, this),
			egret.Tween.get(this.lb_title, {
				loop: !1
			}).to({
				y: -1 * this.lb_title.height
			}, 300).call(function() {
				this.lb_title.text = "庄家: 所有用户任何时间都可以申请上庄. 每个回合结算时，我们都会重新选择庄家，价高者优先.",
				egret.Tween.get(this.lb_title, {
					loop: !1
				}).to({
					y: 5
				}, 300)
			}, this)
		}
		,
		i.prototype.drawBetGroupIntroduce = function() {
			var t = this.btn_odds_0.x + this.btn_odds_0.width / 4
			  , e = this.btn_odds_0.y;
			this.drawLine(t, t, e, this.lb_rise.y + this.lb_rise.height / 2, 16001316, this.bet_group, 3),
			this.drawLine(t, this.lb_rise.x + this.lb_rise.width, this.lb_rise.y + this.lb_rise.height / 2, this.lb_rise.y + this.lb_rise.height / 2, 16001316, this.bet_group, 3),
			t = this.btn_odds_1.x + this.btn_odds_1.width / 2,
			e = this.btn_odds_1.y,
			this.drawLine(t, t, e, this.lb_equal.y + this.lb_equal.height, 16777215, this.bet_group, 3),
			t = this.btn_odds_2.x + this.btn_odds_2.width / 4,
			e = this.btn_odds_2.y,
			this.drawLine(t, t, e, this.lb_fall.y + this.lb_fall.height / 2, 5169700, this.bet_group, 3),
			this.drawLine(t, this.lb_fall.x, this.lb_fall.y + this.lb_fall.height / 2, this.lb_fall.y + this.lb_fall.height / 2, 5169700, this.bet_group, 3),
			t = this.btn_odds_4.x + this.btn_odds_4.width / 2,
			e = this.btn_odds_4.y,
			this.drawLine(t, t, e, this.lb_rise_1.y + this.lb_rise_1.height, 16001316, this.bet_group, 3),
			t = this.btn_odds_9.x + this.btn_odds_9.width / 2,
			e = this.btn_odds_9.y,
			this.drawLine(t, t, e, this.lb_fall_1.y + this.lb_fall_1.height, 5169700, this.bet_group, 3),
			t = this.label_bet_total_amount_0.x + this.label_bet_total_amount_0.width / 2,
			e = this.label_bet_total_amount_0.y,
			this.drawLine(t, t, e, this.lb_total_bet_amount.y + this.lb_total_bet_amount.height / 2, 16777215, this.bet_group, 3),
			this.drawLine(t, this.lb_total_bet_amount.x, this.lb_total_bet_amount.y + this.lb_total_bet_amount.height / 2, this.lb_total_bet_amount.y + this.lb_total_bet_amount.height / 2, 16777215, this.bet_group, 3),
			t = this.label_my_bet_0.x + this.label_bet_total_amount_0.width / 2 + 8,
			e = this.label_my_bet_0.y + this.label_my_bet_0.height / 2,
			this.drawLine(t, t + 15, e, e, 16777215, this.bet_group, 3),
			this.drawLine(t + 15, t + 15, e, this.lb_my_bet_amount.y + this.lb_my_bet_amount.height / 2, 16777215, this.bet_group, 3),
			this.drawLine(t + 15, this.lb_my_bet_amount.x, this.lb_my_bet_amount.y + this.lb_my_bet_amount.height / 2, this.lb_my_bet_amount.y + this.lb_my_bet_amount.height / 2, 16777215, this.bet_group, 3)
		}
		,
		i.prototype.drawBankerIntroduce = function() {
			this.bg_round_remain.addEventListener(egret.TouchEvent.TOUCH_TAP, this.bankerQueue, this),
			this.bg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeBankerQueue, this),
			this.addEventListener(egret.Event.ENTER_FRAME, this.btnApplyBankerAnimation, this);
			var t = new eui.Image;
			t.source = RES.getRes("btn_apply_banker_normal_png"),
			t.x = 30,
			t.y = 20,
			this.group.addChild(t);
			var e = new egret.TextField;
			e.textFlow = [{
				text: "申请上庄: ",
				style: {
					textColor: 5169700,
					size: 25
				}
			}, {
				text: "所有用户任何时候都可以申请上庄. 请点击尝试.",
				style: {
					textColor: 16777215,
					size: 25
				}
			}],
			e.fontFamily = "Microsoft YaHei",
			e.x = 40,
			e.y = t.y + t.height,
			e.multiline = !0,
			e.width = 660,
			e.lineSpacing = 5,
			this.group.addChild(e),
			this.btn_apply_banker.addEventListener(egret.TouchEvent.TOUCH_TAP, this.applyBanker, this),
			this.btn_off_banker.addEventListener(egret.TouchEvent.TOUCH_TAP, this.offBanker, this);
			var i = new egret.TextField;
			i.textFlow = [{
				text: "排庄队列: ",
				style: {
					textColor: 5169700,
					size: 25
				}
			}, {
				text: '点击申请上庄后, 你会拥有一个排庄序号, 按金币余额排序, 您可以点击 "剩余局数" 来查看排庄队列.',
				style: {
					textColor: 16777215,
					size: 25
				}
			}],
			i.fontFamily = "Microsoft YaHei",
			i.x = 40,
			i.y = 20 + e.y + e.height,
			i.multiline = !0,
			i.width = 660,
			i.lineSpacing = 5,
			this.group.addChild(i);
			var n = new egret.TextField;
			n.textFlow = [{
				text: "选庄规则: ",
				style: {
					textColor: 5169700,
					size: 25
				}
			}, {
				text: "每个新回合开始前, 系统会从排庄队列中选择余额最多的作为新回合庄家. 下注期间, 申请上庄用户中, 余额最多的用户直接上庄. ",
				style: {
					textColor: 16777215,
					size: 25
				}
			}],
			n.fontFamily = "Microsoft YaHei",
			n.x = 40,
			n.y = 20 + i.y + i.height,
			n.multiline = !0,
			n.width = 660,
			n.lineSpacing = 5,
			this.group.addChild(n);
			var a = new eui.Image;
			a.source = RES.getRes("btn_off_banker_normal_png"),
			a.x = 30,
			a.y = 20 + n.y + n.height,
			this.group.addChild(a);
			var s = new egret.TextField;
			s.textFlow = [{
				text: "下庄: ",
				style: {
					textColor: 5169700,
					size: 25
				}
			}, {
				text: "如果您是当前庄家, 只有等待结算时才能申请下庄, 结算时您就会自动下庄. 如果您在排庄队列, 任何时间都可以点击下庄离开队列.",
				style: {
					textColor: 16777215,
					size: 25
				}
			}],
			s.fontFamily = "Microsoft YaHei",
			s.x = 40,
			s.y = a.y + a.height,
			s.multiline = !0,
			s.width = 660,
			s.lineSpacing = 5,
			this.group.addChild(s);
			var o = new eui.Image;
			o.source = RES.getRes("bg_round_remain_png"),
			o.width = 154.5,
			o.height = 40.5,
			o.x = 40,
			o.y = 20 + s.y + s.height,
			this.group.addChild(o),
			this.drawText(50, o.y + 6, "剩余局数 5", 27, this.group);
			var r = new egret.TextField;
			r.textFlow = [{
				text: "剩余局数: ",
				style: {
					textColor: 5169700,
					size: 25
				}
			}, {
				text: '如果当前庄家在排庄队列中余额最多，并且没有选择下庄，那么当前庄家可以连续坐庄. 系统默认连庄10回合后自动下庄. "剩余局数 5" 代表还可以连庄 5回合.',
				style: {
					textColor: 16777215,
					size: 25
				}
			}],
			r.fontFamily = "Microsoft YaHei",
			r.x = 40,
			r.y = o.y + o.height + 10,
			r.multiline = !0,
			r.width = 660,
			r.lineSpacing = 5,
			this.group.addChild(r)
		}
		,
		i.prototype.closeBankerQueue = function() {
			this.group_banker_queue.visible = !1
		}
		,
		i.prototype.bankerQueue = function() {
			this.group_banker_queue.visible ? this.group_banker_queue.visible = !1 : (this.setChildIndex(this.group_banker_queue, 1e3),
			this.group_banker_queue.visible = !0,
			this.updateBankerQueue())
		}
		,
		i.prototype.updateBankerQueue = function() {
			this.list_banker_queue.dataProvider = new eui.ArrayCollection(this.banker_queue_data),
			this.list_banker_queue.validateNow()
		}
		,
		i.prototype.applyBanker = function() {
			this.removeEventListener(egret.Event.ENTER_FRAME, this.btnApplyBankerAnimation, this),
			this.banker_queue_data.push({
				balance: 5e6,
				user_name: this.user_name,
				user_avatar: "",
				vip_grade: parseFloat(this.vip_grade)
			}),
			this.updateBankerQueue(),
			this.lb_queue_order_title.visible = !0,
			this.lb_queue_order.visible = !0,
			this.btn_apply_banker.visible = !1,
			this.group_apply_banker.visible = !1,
			this.btn_off_banker.visible = !0
		}
		,
		i.prototype.offBanker = function() {
			this.banker_queue_data.pop(),
			this.updateBankerQueue(),
			this.lb_queue_order_title.visible = !1,
			this.lb_queue_order.visible = !1,
			this.btn_apply_banker.visible = !0,
			this.group_apply_banker.visible = !0,
			this.btn_off_banker.visible = !1
		}
		,
		i.prototype.btnApplyBankerAnimation = function(t) {
			1 == this.type ? this.btn_apply_banker.width < 215 && this.btn_apply_banker.width >= 195 ? (this.btn_apply_banker.width = this.btn_apply_banker.width + 1,
			this.btn_apply_banker.height = this.btn_apply_banker.height + .4) : this.type = 0 : 0 == this.type && (this.btn_apply_banker.width <= 215 && this.btn_apply_banker.width > 195 ? (this.btn_apply_banker.width = this.btn_apply_banker.width - 1,
			this.btn_apply_banker.height = this.btn_apply_banker.height - .4) : this.type = 1)
		}
		,
		i.prototype.loadBankerImage = function(t) {
			var e = new egret.ImageLoader;
			e.addEventListener(egret.Event.COMPLETE, this.bankerImageLoadCompleteHandler, this),
			e.load(t)
		}
		,
		i.prototype.bankerImageLoadCompleteHandler = function(t) {
			var e = t.currentTarget;
			this.banker_avatar.bitmapData = e.data
		}
		,
		i.prototype.goToGrabGuide = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
			this.lb_next.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.goToGrabGuide, this),
			this.removeEventListener(egret.Event.ENTER_FRAME, this.btnApplyBankerAnimation, this),
			t.SceneTrade.getInstance().stopBgSound(),
			t.SceneTrade.getInstance().playGrabSound(),
			t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_GRAB_GUIDE)
		}
		,
		i.prototype.goToGrabSim = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
			this.lb_next.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.goToGrabSim, this),
			t.SceneTrade.getInstance().stopBgSound(),
			t.SceneTrade.getInstance().playGrabSound(),
			t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_GRAB_SIM)
		}
		,
		i.prototype.drawIntervalOdds = function() {
			this.group.contains(this.candleRect) && this.group.removeChild(this.candleRect),
			this.group.contains(this.candleLine) && this.group.removeChild(this.candleLine);
			var t = 1;
			this.drawLineClosePrice(80, "位于3-6", this._klineMasterBar.options.KlineUpColor, t, 6),
			this.drawCandle(t, 300, 80, 60, 30, 80, this.group),
			this.drawText(30, 390, '三个下注按钮分别代表: 点差区间 "涨 3-6", "涨", 点差区间 "跌 3-6"', 25, this.group),
			this.showSettleResult(0),
			this.showSettleResult(6),
			this.showSettleResult(7),
			this.drawText(35, 700, "上涨区间 3-6", 25, this.group),
			this.drawText(330, 700, "上涨", 25, this.group),
			this.drawText(520, 700, "下跌区间 3-6", 25, this.group),
			this.drawText(80, 740, "赢6倍", 25, this.group),
			this.drawText(320, 740, "赢1.5倍", 25, this.group),
			this.drawText(590, 740, "输", 25, this.group),
			this.drawText(30, 820, '根据k线标尺可得到开奖点差为上涨5, 位于点差区间 "涨 3 - 6", 所以下注买 "涨 3-6" 和 "涨" 的用户将获得相应赔率的奖励', 25, this.group)
		}
		,
		i.prototype.showSettleResult = function(t) {
			var e = "";
			if (0 == t || 1 == t || 2 == t) {
				e = "btn_rise_png";
				var i = "icon-zhang_png"
				  , n = 1.5
				  , a = new eui.Group;
				a.width = 120 * n,
				a.height = 84 * n,
				a.x = this.width / 2 - 120 * n / 2;
				var s = new eui.Image;
				s.width = 300,
				s.height = 290,
				s.verticalCenter = .5,
				s.horizontalCenter = .5,
				s.source = RES.getRes("bg_sunshine_png"),
				s.anchorOffsetX = 250,
				s.anchorOffsetY = 245,
				a.addChild(s);
				var o = new eui.Image;
				o.width = 120 * n,
				o.height = 84 * n,
				o.x = 0,
				o.y = 0,
				o.source = RES.getRes(e),
				a.addChild(o);
				var r = new eui.Label;
				r.fontFamily = "lgzbFont",
				r.width = 85 * n,
				r.height = 27.33 * n,
				r.x = 15 * n,
				r.y = (a.height - r.height) / n - 20,
				r.text = "x1.5",
				r.textColor = 16113323,
				r.bold = !0,
				r.size = 30 * n,
				r.stroke = 1,
				r.strokeColor = 789259,
				r.verticalAlign = "middle",
				r.textAlign = "center",
				a.addChild(r);
				var l = new eui.Image;
				l.x = 0,
				l.y = 0,
				l.width = 57 * n,
				l.height = 49 * n,
				l.source = RES.getRes(i),
				a.addChild(l),
				this.group.addChild(a),
				egret.Tween.get(a).to({
					y: 500
				}, 500, egret.Ease.cubicOut)
			} else {
				e = 7 > t ? "btn_odds_rise_png" : "btn_odds_fall_png";
				var n = 1.5
				  , a = new eui.Group;
				a.width = 83 * n,
				a.height = 85 * n,
				a.y = 500;
				var s = new eui.Image;
				s.width = 300,
				s.height = 290,
				s.verticalCenter = .5,
				s.horizontalCenter = .5,
				s.source = RES.getRes("bg_sunshine_png"),
				s.anchorOffsetX = 250,
				s.anchorOffsetY = 245,
				6 == t && a.addChild(s);
				var o = new eui.Image;
				o.width = 83 * n,
				o.height = 85 * n,
				o.x = 0,
				o.y = 0,
				o.source = RES.getRes(e),
				a.addChild(o);
				var h = new eui.Label;
				h.fontFamily = "lgzbFont",
				h.width = 77 * n,
				h.height = 27.33 * n,
				h.x = 3 * n,
				h.y = 3 * n,
				h.text = "3 - 6",
				h.textColor = 16113323,
				h.bold = !0,
				"BTCCNY" == this.capital ? h.size = 25 * n : h.size = 18 * n,
				h.stroke = 1,
				h.verticalAlign = "middle",
				h.textAlign = "center",
				a.addChild(h);
				var r = new eui.Label;
				r.fontFamily = "lgzbFont",
				r.width = 74 * n,
				r.height = 27.33 * n,
				r.x = 5 * n,
				r.y = (a.height - r.height) / n + 10,
				r.text = "x6",
				r.textColor = 16777215,
				r.bold = !0,
				r.size = 27 * n,
				r.stroke = 1,
				r.verticalAlign = "middle",
				r.textAlign = "center",
				a.addChild(r),
				6 == t ? a.x = -1 * a.width : 7 == t && (a.x = this.width),
				this.group.addChild(a),
				6 == t ? egret.Tween.get(a).to({
					x: 50
				}, 500, egret.Ease.cubicOut) : 7 == t && egret.Tween.get(a).to({
					x: 540
				}, 500, egret.Ease.cubicOut)
			}
		}
		,
		i.prototype.drawRuler = function(t) {
			t.group.visible = !1,
			t.drawCandle(1, 300, 80, 50, 30, 80, t.group);
			var e = new egret.Shape;
			e.graphics.lineStyle(1, 13421772);
			for (var i = 0; 719 > i; )
				e.graphics.moveTo(i, 160),
				e.graphics.lineTo(i + 3, 160),
				i += 6;
			t.group.addChild(e),
			this.lb_open_price = this.drawText(50, 135, "开盘价: 1.12196", 25, this.group);
			var n = -30;
			i = 370;
			var a = new egret.Shape;
			for (a.graphics.lineStyle(2, 13421772); 350 > n; )
				e.graphics.moveTo(i, n),
				e.graphics.lineTo(i, n + 3),
				n += 6;
			t.group.addChild(a),
			this.drawLineClosePrice(80, "5", this._klineMasterBar.options.KlineUpColor, 1, 6),
			this.lb_close_price = this.drawText(50, 55, "收盘价: 1.12201", 25, this.group),
			n = 18;
			for (var s = 0; 7 > s; s++) {
				i = 370;
				var o = new egret.Shape;
				o.graphics.lineStyle(2, 13421772);
				var r = 0;
				r = 0 == s ? n - 20 : 6 == s ? n + 20 : n;
				for (var l = 0; 4 > l; l++)
					o.graphics.moveTo(i, r),
					o.graphics.lineTo(i + 2, r),
					i += 5;
				var h = "";
				0 == s || 6 == s ? h = "11" : 1 == s || 5 == s ? h = "6" : 2 == s || 4 == s ? h = "3" : 3 == s && (h = "0"),
				t.drawText(i + 5, r - 10, h, 20, this.group),
				n += 48,
				t.group.addChild(o)
			}
			var d = new eui.Image;
			d.source = RES.getRes("bg_ruler_png"),
			d.width = 0,
			d.height = 0,
			d.x = 550,
			d.y = 280,
			this.addChild(d),
			egret.Tween.get(d).to({
				width: 716,
				height: 404,
				x: 0,
				y: t.group.y = t.kline_group.y + t.kline_group.height
			}, 700, egret.Ease.cubicOut).call(function() {
				t.removeChild(d),
				t.group.y = t.kline_group.y + t.kline_group.height + 40,
				t.group.visible = !0;
				var e = t.drawText(30, 380, "点差 = 1.12201 (收盘价) - 1.12196 (开盘价) = 0.00005", 25, t.group)
				  , i = t.drawText(30, 430, "为了方便观察, 我们拿小数点后不为0的部分作为点差.因此点差为5. 通过标尺可以看到, 当前棒子点差位于 涨 3 - 6 区间. 对应赔率为6倍: ", 25, t.group)
				  , n = new eui.Label;
				n.text = "x6";
				var a = new eui.Image;
				a.source = RES.getRes(CONST.ODDS_IMG.UP),
				a.x = 230,
				a.y = 495,
				a.width = 60,
				a.height = 43,
				n.x = 230,
				n.y = 498,
				n.textAlign = "center",
				n.textColor = 16113323,
				n.stroke = 1,
				n.strokeColor = 789259,
				n.width = 60,
				n.textAlign = "center",
				n.size = 25,
				t.lb1 = e,
				t.lb2 = i,
				t.img1 = a,
				t.lb3 = n,
				t.group.addChild(a),
				t.group.addChild(n),
				t.lb_next.addEventListener(egret.TouchEvent.TOUCH_TAP, t.step22, t)
			})
		}
		,
		i.prototype.drawLineClosePrice = function(t, e, i, n, a) {
			this.group.contains(this.lb_point_diff) && this.group.removeChild(this.lb_point_diff),
			this.group.contains(this.lineClosePrice) && this.group.removeChild(this.lineClosePrice),
			this.lineClosePrice = new egret.Shape,
			this.lineClosePrice.graphics.lineStyle(1, i);
			for (var s = 0; 719 > s; )
				this.lineClosePrice.graphics.moveTo(s, t),
				this.lineClosePrice.graphics.lineTo(s + 3, t),
				s += 6;
			this.group.addChild(this.lineClosePrice),
			this.lb_point_diff = this.drawText(450, t - 28, "点差" + e, 25, this.group, i),
			this.group.contains(this.imgOdds) && this.group.removeChild(this.imgOdds),
			this.group.contains(this.lbOdds) && this.group.removeChild(this.lbOdds),
			this.lbOdds = new eui.Label,
			this.lbOdds.text = "x" + a,
			this.imgOdds = new eui.Image,
			1 == n ? this.imgOdds.source = RES.getRes(CONST.ODDS_IMG.UP) : 2 == n ? this.imgOdds.source = RES.getRes(CONST.ODDS_IMG.FLAT) : 3 == n && (this.imgOdds.source = RES.getRes(CONST.ODDS_IMG.DOWN)),
			this.imgOdds.x = 450 + this.lb_point_diff.width + 20,
			this.imgOdds.y = this.lb_point_diff.y,
			this.imgOdds.width = 60,
			this.imgOdds.height = 43,
			this.lbOdds.x = 450 + this.lb_point_diff.width + 20,
			this.lbOdds.y = this.imgOdds.y + 3,
			this.lbOdds.textAlign = "center",
			this.lbOdds.textColor = 16113323,
			this.lbOdds.stroke = 1,
			this.lbOdds.strokeColor = 789259,
			this.lbOdds.width = 60,
			this.lbOdds.textAlign = "center",
			this.lbOdds.size = 25,
			this.group.addChild(this.imgOdds),
			this.group.addChild(this.lbOdds)
		}
		,
		i.prototype.addKlineGroup = function() {
			this._klineMasterBar = t.KlineMasterBarV3.getInstance(!0),
			this._klineMasterBar.objData = this.objData,
			this._klineMasterBar.x = 4,
			this._klineMasterBar.y = 0,
			this.kline_group.addChild(this._klineMasterBar),
			this._klineMasterBar.setOptions({
				Capital: this.capital,
				Diff: 30,
				odds: this.capital_odds
			}),
			this._klineMasterBar.Notification_Kline_Init();
			var e = (new Date).getTime();
			this.numQi = this._klineMasterBar.setTime(e)
		}
		,
		i.prototype.drawCandle = function(t, e, i, n, a, s, o) {
			var r = this._klineMasterBar.options.KlineUpColor
			  , l = this._klineMasterBar.options.KlineDownColor
			  , h = this._klineMasterBar.options.KlineFlatColor
			  , d = null;
			1 == t ? d = r : 2 == t ? d = h : 3 == t && (d = l),
			this.candleRect = new egret.Shape,
			this.candleLine = new egret.Shape,
			this.candleRect.graphics.moveTo(e, i),
			this.candleRect.graphics.beginFill(d, 1),
			this.candleRect.graphics.drawRect(e, i, a, s),
			this.candleRect.graphics.endFill(),
			o.addChild(this.candleRect);
			var _ = e + a / 2;
			2 == t && (s = 60),
			this.candleLine.graphics.lineStyle(2, d),
			this.candleLine.graphics.moveTo(_, n),
			this.candleLine.graphics.lineTo(_, n + s + 60),
			this.candleLine.graphics.endFill(),
			o.addChild(this.candleLine)
		}
		,
		i.prototype.drawLine = function(t, e, i, n, a, s, o) {
			void 0 === o && (o = 2);
			var r = new egret.Shape;
			r.graphics.lineStyle(o, a),
			r.graphics.moveTo(t, i),
			r.graphics.lineTo(e, n),
			r.graphics.endFill(),
			s.addChild(r)
		}
		,
		i.prototype.drawText = function(t, e, i, n, a, s, o) {
			void 0 === s && (s = 16777215),
			void 0 === o && (o = 5);
			var r = new eui.Label;
			return r.text = i,
			r.size = n,
			r.fontFamily = "Microsoft YaHei",
			r.x = t,
			r.y = e,
			r.textColor = s,
			r.multiline = !0,
			r.maxWidth = 660,
			r.lineSpacing = o,
			a.addChild(r),
			r
		}
		,
		i.prototype.drawPointDiff = function() {
			this.drawCandle(1, 50, 300, 270, 30, 80, this.group),
			this.drawLine(50, 200, 300, 300, this._klineMasterBar.options.KlineUpColor, this.group),
			this.drawText(210, 280, "收盘价", 25, this.group),
			this.drawLine(50, 200, 380, 380, this._klineMasterBar.options.KlineUpColor, this.group),
			this.drawText(210, 360, "开盘价", 25, this.group),
			this.drawCandle(3, 410, 300, 270, 30, 80, this.group),
			this.drawLine(410, 560, 300, 300, this._klineMasterBar.options.KlineDownColor, this.group),
			this.drawText(570, 280, "开盘价", 25, this.group),
			this.drawLine(410, 560, 380, 380, this._klineMasterBar.options.KlineDownColor, this.group),
			this.drawText(570, 360, "收盘价", 25, this.group),
			this.drawText(60, 440, "点差 = 收盘价 - 开盘价 (平：点差为0)", 25, this.group);
			var t = this.numQi.substr(0, 2)
			  , e = this.numQi.substr(2, 2);
			this.drawText(60, 480, "第 " + this.numQi + " 期: 代表" + t + "点" + e + "分的回合, " + t + "点" + e + "分30秒开奖", 25, this.group)
		}
		,
		i.prototype.partAdded = function(i, n) {
			e.prototype.partAdded.call(this, i, n),
			n == this.list_banker_queue && (this.list_banker_queue.dataProvider = new eui.ArrayCollection(this.banker_queue_data),
			this.list_banker_queue.itemRenderer = t.BankerQueueListItem)
		}
		,
		i.prototype.betBtnClick = function(t) {
			var e = this
			  , i = t.currentTarget.name;
			this.group.contains(this.candleRect) && this.group.removeChild(this.candleRect),
			this.group.contains(this.candleLine) && this.group.removeChild(this.candleLine);
			var n = parseFloat(this.capital_odds[parseInt(i)].odds)
			  , a = 1;
			"0" == i ? (a = 1,
			e.drawLineClosePrice(100, "大于0", this._klineMasterBar.options.KlineUpColor, a, n),
			e.drawCandle(a, 300, 100, 80, 30, 60, e.group)) : "1" == i ? (a = 2,
			e.drawLineClosePrice(160, "等于0", this._klineMasterBar.options.KlineFlatColor, a, n),
			e.drawCandle(a, 300, 160, 140, 30, 2, e.group)) : "2" == i ? (a = 3,
			e.drawLineClosePrice(180, "小于0", this._klineMasterBar.options.KlineDownColor, a, n),
			e.drawCandle(a, 300, 160, 140, 30, 20, e.group)) : "3" == i ? (a = 1,
			e.drawLineClosePrice(-20, "大于11", this._klineMasterBar.options.KlineUpColor, a, n),
			e.drawCandle(a, 300, -20, -40, 30, 180, e.group)) : "4" == i ? (a = 1,
			e.drawLineClosePrice(40, "位于6-11", this._klineMasterBar.options.KlineUpColor, a, n),
			e.drawCandle(a, 300, 40, 20, 30, 120, e.group)) : "5" == i ? (a = 1,
			e.drawLineClosePrice(80, "位于3-6", this._klineMasterBar.options.KlineUpColor, a, n),
			e.drawCandle(a, 300, 80, 60, 30, 80, e.group)) : "6" == i ? (a = 1,
			e.drawLineClosePrice(140, "位于0-3", this._klineMasterBar.options.KlineUpColor, a, n),
			e.drawCandle(a, 300, 140, 120, 30, 20, e.group)) : "7" == i ? (a = 3,
			e.drawLineClosePrice(180, "位于0-3", this._klineMasterBar.options.KlineDownColor, a, n),
			e.drawCandle(a, 300, 160, 140, 30, 20, e.group)) : "8" == i ? (a = 3,
			e.drawLineClosePrice(240, "位于3-6", this._klineMasterBar.options.KlineDownColor, a, n),
			e.drawCandle(a, 300, 160, 140, 30, 80, e.group)) : "9" == i ? (a = 3,
			e.drawLineClosePrice(280, "位于6-11", this._klineMasterBar.options.KlineDownColor, a, n),
			e.drawCandle(a, 300, 160, 140, 30, 120, e.group)) : "10" == i && (a = 3,
			e.drawLineClosePrice(340, "大于11", this._klineMasterBar.options.KlineDownColor, a, n),
			e.drawCandle(a, 300, 160, 140, 30, 180, e.group))
		}
		,
		i.prototype.initIntervalOdds = function() {
			if (null != this.capital_odds) {
				this.btn_odds_0.name = "0",
				this.btn_odds_1.name = "1",
				this.btn_odds_2.name = "2",
				this.btn_odds_3.name = "3",
				this.btn_odds_4.name = "4",
				this.btn_odds_5.name = "5",
				this.btn_odds_6.name = "6",
				this.btn_odds_7.name = "7",
				this.btn_odds_8.name = "8",
				this.btn_odds_9.name = "9",
				this.btn_odds_10.name = "10",
				this.btn_bet_array[this.capital_odds[0].id] = this.btn_odds_0,
				this.btn_bet_array[this.capital_odds[1].id] = this.btn_odds_1,
				this.btn_bet_array[this.capital_odds[2].id] = this.btn_odds_2,
				this.btn_bet_array[this.capital_odds[3].id] = this.btn_odds_3,
				this.btn_bet_array[this.capital_odds[4].id] = this.btn_odds_4,
				this.btn_bet_array[this.capital_odds[5].id] = this.btn_odds_5,
				this.btn_bet_array[this.capital_odds[6].id] = this.btn_odds_6,
				this.btn_bet_array[this.capital_odds[7].id] = this.btn_odds_7,
				this.btn_bet_array[this.capital_odds[8].id] = this.btn_odds_8,
				this.btn_bet_array[this.capital_odds[9].id] = this.btn_odds_9,
				this.btn_bet_array[this.capital_odds[10].id] = this.btn_odds_10;
				for (var t in this.btn_bet_array)
					this.btn_bet_array[t].addEventListener(egret.TouchEvent.TOUCH_TAP, this.betBtnClick, this);
				this.label_odds_3.text = "x" + parseFloat(this.capital_odds[3].odds),
				this.label_odds_4.text = "x" + parseFloat(this.capital_odds[4].odds),
				this.label_odds_5.text = "x" + parseFloat(this.capital_odds[5].odds),
				this.label_odds_6.text = "x" + parseFloat(this.capital_odds[6].odds),
				this.label_odds_7.text = "x" + parseFloat(this.capital_odds[7].odds),
				this.label_odds_8.text = "x" + parseFloat(this.capital_odds[8].odds),
				this.label_odds_9.text = "x" + parseFloat(this.capital_odds[9].odds),
				this.label_odds_10.text = "x" + parseFloat(this.capital_odds[10].odds),
				this.label_interval_3.text = this.capital_odds[3].display,
				this.label_interval_4.text = this.capital_odds[4].display,
				this.label_interval_5.text = this.capital_odds[5].display,
				this.label_interval_6.text = this.capital_odds[6].display,
				this.label_interval_7.text = this.capital_odds[7].display,
				this.label_interval_8.text = this.capital_odds[8].display,
				this.label_interval_9.text = this.capital_odds[9].display,
				this.label_interval_10.text = this.capital_odds[10].display,
				"XAUUSD" == this.capital ? (this.label_interval_3.size = 18,
				this.label_interval_4.size = 18,
				this.label_interval_5.size = 18,
				this.label_interval_6.size = 18,
				this.label_interval_7.size = 18,
				this.label_interval_8.size = 18,
				this.label_interval_9.size = 18,
				this.label_interval_10.size = 18) : "EURUSD" == this.capital || "GBPUSD" == this.capital ? (this.label_interval_3.size = 18,
				this.label_interval_4.size = 18,
				this.label_interval_5.size = 18,
				this.label_interval_6.size = 18,
				this.label_interval_7.size = 18,
				this.label_interval_8.size = 18,
				this.label_interval_9.size = 18,
				this.label_interval_10.size = 18) : "BTCCNY" == this.capital && (this.label_interval_3.size = 25,
				this.label_interval_4.size = 25,
				this.label_interval_5.size = 25,
				this.label_interval_6.size = 25,
				this.label_interval_7.size = 25,
				this.label_interval_8.size = 25,
				this.label_interval_9.size = 25,
				this.label_interval_10.size = 25)
			}
		}
		,
		i
	}(eui.Component);
	t.UserGuideUI = e,
	__reflect(e.prototype, "game.UserGuideUI", ["eui.UIComponent", "egret.DisplayObject"]);
	var i = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.skinName = "resource/ui/main/BankerQueueItem.exml",
			e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e
		}
		return __extends(e, t),
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			void 0 == this.data.user_avatar || null == this.data.user_avatar || "" == this.data.user_avatar ? this.user_avatar.source = RES.getRes("person_png") : this.loadBankerImage(this.data.user_avatar),
			this.vip_grade.source = RES.getRes("icon_vip_" + this.data.vip_grade + "_png"),
			this.balance.text = Utils.moneyFormat(this.data.balance, 2).toString(),
			this.user_name.text = this.data.user_name
		}
		,
		e.prototype.dataChanged = function() {
			null != this.balance && (void 0 == this.data.user_avatar || null == this.data.user_avatar || "" == this.data.user_avatar ? this.user_avatar.source = RES.getRes("person_png") : this.loadBankerImage(this.data.user_avatar),
			this.vip_grade.source = RES.getRes("icon_vip_" + this.data.vip_grade + "_png"),
			this.balance.text = Utils.moneyFormat(this.data.balance, 2).toString(),
			this.user_name.text = this.data.user_name)
		}
		,
		e.prototype.loadBankerImage = function(t) {
			var e = new egret.ImageLoader;
			e.addEventListener(egret.Event.COMPLETE, this.bankerImageLoadCompleteHandler, this),
			e.load(t)
		}
		,
		e.prototype.bankerImageLoadCompleteHandler = function(t) {
			var e = t.currentTarget;
			this.user_avatar.bitmapData = e.data
		}
		,
		e
	}(eui.ItemRenderer);
	t.BankerQueueListItem = i,
	__reflect(i.prototype, "game.BankerQueueListItem")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i() {
			return e.call(this) || this
		}
		return __extends(i, e),
		i.prototype.register = function() {
			this.facade.registerCommand(MainNotify.OPEN_HOME, i),
			this.facade.registerCommand(MainNotify.OPEN_INVITE, i),
			this.facade.registerCommand(MainNotify.OPEN_GRAB_GUIDE, i),
			this.facade.registerCommand(MainNotify.OPEN_GRAB_SIM, i),
			this.facade.registerCommand(MainNotify.OPEN_USER_GUIDE, i),
			this.facade.registerCommand(MainNotify.UPDATE_HEADER_EWALLET, i),
			this.facade.registerCommand(MainNotify.OPEN_CLASSICAL, i),
			this.facade.registerCommand(MainNotify.CLOSE_CLASSICAL, i),
			this.facade.registerCommand(MainNotify.OPEN_CLASSICAL_SIM, i),
			this.facade.registerCommand(MainNotify.CLOSE_CLASSICAL_SIM, i),
			this.facade.registerCommand(MainNotify.OPEN_GRAB, i),
			this.facade.registerCommand(MainNotify.CLOSE_GRAB, i),
			this.facade.registerCommand(MainNotify.OPEN_CAPITAL_LIST, i),
			this.facade.registerCommand(MainNotify.OPEN_KLINE_MASTER_BAR, i),
			this.facade.registerCommand(MainNotify.POINT_DIFF, i),
			this.facade.registerCommand(MainNotify.OPEN_EMOJI, i),
			this.facade.registerCommand(SysNotify.KLINE_INIT, i),
			this.facade.registerCommand(SysNotify.KLINE_KLINE, i),
			this.facade.registerCommand(SysNotify.KLINE_LAST_KLINE, i),
			this.facade.registerCommand(SysNotify.CHAT_INIT, i),
			this.facade.registerCommand(SysNotify.CHAT_JOIN_ROOM, i),
			this.facade.registerCommand(SysNotify.CHAT_ADD_MESSAGE, i),
			this.facade.registerCommand(SysNotify.CHAT_ADD_MESSAGE_LIST, i),
			this.facade.registerCommand(SysNotify.CHAT_CLEAR_MESSAGE, i),
			this.facade.registerCommand(SysNotify.CHAT_ADD_NOTICE, i)
		}
		,
		i.prototype.execute = function(e) {
			var i = e.getBody()
			  , n = GameLayerManager.gameLayer().mainLayer;
			switch (e.getName()) {
			case MainNotify.OPEN_HOME:
				null == this._HomePage && (this._HomePage = t.HomePage.getInstance()),
				null != t.CapitalList._instance && (t.CapitalList._instance.isOpen = !1),
				t.CapitalList._instance = null,
				GameLayerManager.gameLayer().mainLayer.removeChildren(),
				1 == this._HomePage.closeStatus && this._HomePage.reOpen(),
				null != t.FooterBar.getInstance().btns && t.FooterBar.getInstance().btns.length > 0 && t.FooterBar.getInstance().selectTab(t.FooterBar.getInstance().btns[0]),
				n.addChild(this._HomePage);
				break;
			case MainNotify.OPEN_INVITE:
				null == this._invite && (this._invite = t.Invite.getInstance()),
				1 == this._invite.closeStatus && this._invite.reOpen(),
				n.addChildAt(this._invite, 0);
				break;
			case MainNotify.OPEN_USER_GUIDE:
				null == this._userGuide && (this._userGuide = new t.UserGuideUI),
				t.HomePage.getInstance().destoryAll(),
				n.addChildAt(this._userGuide, 0);
				break;
			case MainNotify.OPEN_GRAB_GUIDE:
				null == this._grabGuide && (this._grabGuide = new t.GameGrabGuideUI),
				(null != i || "" != i) && (this._grabGuide.params = i),
				null != t.GameGrabUI._instance && t.GameGrabUI._instance.destoryAll(),
				n.addChildAt(this._grabGuide, 0);
				break;
			case MainNotify.OPEN_GRAB_SIM:
				null == this._grabSim && (this._grabSim = t.GameGrabSimUI.getInstance(!0)),
				n.addChildAt(this._grabSim, 0);
				break;
			case MainNotify.OPEN_CAPITAL_LIST:
				null == this._capital_list && (this._capital_list = t.CapitalList.getInstance(i)),
				t.HomePage.getInstance().destoryAll(),
				n.addChildAt(this._capital_list, 0);
				break;
			case MainNotify.OPEN_CLASSICAL:
				null == this._gameClassicalUI && (this._gameClassicalUI = t.GameClassicalUI.getInstance(!0, i)),
				1 == this._gameClassicalUI.closeStatus && this._gameClassicalUI.reOpen(i),
				null == this._capital_list && (this._capital_list = t.CapitalList.getInstance(i)),
				null != this._capital_list && (this._capital_list.isOpen = !1),
				n.addChildAt(this._gameClassicalUI, 0),
				this._gameClassicalUI.addActivate();
				break;
			case MainNotify.CLOSE_CLASSICAL:
				null == this._gameClassicalUI && (this._gameClassicalUI = t.GameClassicalUI.getInstance(!0, null),
				this._gameClassicalUI.name = "_gameClassicalUI"),
				this._gameClassicalUI.destoryAll(),
				null != this._gameClassicalUI && (n.removeChild(this._gameClassicalUI),
				this._gameClassicalUI = null);
				break;
			case MainNotify.OPEN_CLASSICAL_SIM:
				null == this._gameClassicalSimUI && (this._gameClassicalSimUI = t.GameClassicalSimUI.getInstance(!0, i)),
				1 == this._gameClassicalSimUI.closeStatus && this._gameClassicalSimUI.reOpen(i),
				n.addChildAt(this._gameClassicalSimUI, 0),
				this._gameClassicalSimUI.addActivate();
				break;
			case MainNotify.CLOSE_CLASSICAL_SIM:
				null == this._gameClassicalSimUI && (this._gameClassicalSimUI = t.GameClassicalSimUI.getInstance(!0, null),
				this._gameClassicalSimUI.name = "_gameClassicalSimUI"),
				this._gameClassicalSimUI.destoryAll(),
				null != this._gameClassicalSimUI && (n.removeChild(this._gameClassicalSimUI),
				this._gameClassicalSimUI = null);
				break;
			case MainNotify.OPEN_GRAB:
				null == this._gameGrabUI && (this._gameGrabUI = t.GameGrabUI.getInstance(!0, i)),
				1 == this._gameGrabUI.closeStatus && this._gameGrabUI.reOpen(i),
				null == this._capital_list && (this._capital_list = t.CapitalList.getInstance(i)),
				null != this._capital_list && (this._capital_list.isOpen = !1),
				n.addChildAt(this._gameGrabUI, 0),
				this._gameGrabUI.addActivate();
				break;
			case MainNotify.CLOSE_GRAB:
				null == this._gameGrabUI && (this._gameGrabUI = t.GameGrabUI.getInstance(!0, null),
				this._gameGrabUI.name = "_gameGrabUI"),
				this._gameGrabUI.destoryAll(),
				null != this._gameGrabUI && (n.removeChild(this._gameGrabUI),
				this._gameGrabUI = null);
				break;
			case MainNotify.UPDATE_HEADER_EWALLET:
				null == this._header && (this._header = t.HeaderBar.getInstance(!1)),
				this._header && this._header.updateBalance(i.gold_amount),
				null == this._headerV2 && (this._headerV2 = t.HeaderBarV2.getInstance(!1)),
				this._headerV2 && this._headerV2.updateBalance(i.gold_amount),
				null == this._gameGrabUI && (this._gameGrabUI = t.GameGrabUI.getInstance(!1, null)),
				this._gameGrabUI && this._gameGrabUI.updateBalance(i.gold_amount),
				null == this._gameClassicalUI && (this._gameClassicalUI = t.GameClassicalUI.getInstance(!1, null)),
				this._gameClassicalUI && this._gameClassicalUI.updateBalance(i.gold_amount);
				break;
			case SysNotify.KLINE_INIT:
				null != t.KlineMasterBarV2._instance && t.KlineMasterBarV2._instance.Notification_Kline_Init(i),
				null != t.KlineMasterBar._instance && t.KlineMasterBar._instance.Notification_Kline_Init(i),
				null != t.SimKlineMasterBar._instance && t.SimKlineMasterBar._instance.Notification_Kline_Init(i);
				break;
			case SysNotify.KLINE_KLINE:
				null != t.KlineMasterBarV2._instance && t.KlineMasterBarV2._instance.Notification_Kline_Kline(i),
				null != t.KlineMasterBar._instance && t.KlineMasterBar._instance.Notification_Kline_Kline(i),
				null != t.SimKlineMasterBar._instance && t.SimKlineMasterBar._instance.Notification_Kline_Kline(i);
				break;
			case SysNotify.KLINE_LAST_KLINE:
				null != t.KlineMasterBarV2._instance && t.KlineMasterBarV2._instance.Notification_Kline_Last_Kline(i),
				null != t.KlineMasterBar._instance && t.KlineMasterBar._instance.Notification_Kline_Last_Kline(i),
				null != t.SimKlineMasterBar._instance && t.SimKlineMasterBar._instance.Notification_Kline_Last_Kline(i);
				break;
			case MainNotify.POINT_DIFF:
				null == this._gameGrabUI && (this._gameGrabUI = t.GameGrabUI.getInstance(!1, null)),
				this._gameGrabUI && this._gameGrabUI.getSettleResult(i),
				null == this._gameClassicalUI && (this._gameClassicalUI = t.GameClassicalUI.getInstance(!1, null)),
				this._gameClassicalUI && this._gameClassicalUI.getSettleResult(i),
				null == this._gameClassicalSimUI && (this._gameClassicalSimUI = t.GameClassicalSimUI.getInstance(!1, null)),
				this._gameClassicalSimUI && this._gameClassicalSimUI.getSettleResult(i),
				null == this._grabSim && (this._grabSim = t.GameGrabSimUI.getInstance(!1)),
				this._grabSim && this._grabSim.getSettleResult(i);
				break;
			case MainNotify.OPEN_EMOJI:
				null == this._gameGrabUI && (this._gameGrabUI = t.GameGrabUI.getInstance(!1, null)),
				this._gameGrabUI && this._gameGrabUI.openGroupEmoji();
				break;
			case SysNotify.CHAT_ADD_MESSAGE:
				null == this._chatBar && (this._chatBar = t.ChatBar.getInstance(!1)),
				null != this._chatBar && this._chatBar.Notification_Add_Message(i);
				break;
			case SysNotify.CHAT_CLEAR_MESSAGE:
				null == this._chatBar && (this._chatBar = t.ChatBar.getInstance(!1)),
				null != this._chatBar && this._chatBar.Notification_Clear_Message();
				break;
			case SysNotify.CHAT_ADD_MESSAGE_LIST:
				null == this._chatBar && (this._chatBar = t.ChatBar.getInstance(!1)),
				null != this._chatBar && this._chatBar.Notification_Add_Message_LIST(i);
				break;
			case SysNotify.CHAT_JOIN_ROOM:
				null == this._chatBar && (this._chatBar = t.ChatBar.getInstance(!1)),
				null != this._chatBar && this._chatBar.Notification_JOIN_ROOM(i);
				break;
			case SysNotify.CHAT_INIT:
				null == this._chatBar && (this._chatBar = t.ChatBar.getInstance(!1)),
				null != this._chatBar && this._chatBar.Notification_CHAT_INIT(i);
				break;
			case SysNotify.CHAT_ADD_NOTICE:
				t.AppFacade.getInstance().sendNotification(PanelNotify.ADD_USER_NOTICE, i)
			}
		}
		,
		i
	}(puremvc.SimpleCommand);
	e.NAME = "MainManager",
	t.MainManager = e,
	__reflect(e.prototype, "game.MainManager", ["puremvc.ICommand", "puremvc.INotifier"])
}(game || (game = {}));
var HttpUtils = function() {
	function t() {}
	return t.sendGetRequest = function(t, e, i, n, a) {
		var s = "";
		if (null != e && e.length > 0) {
			s = "?";
			for (var o = 0; o < e.length; o++)
				"?" != s && (s += "&"),
				s = s + e[o].key + "=" + e[o].value
		}
		var r = new egret.HttpRequest;
		r.responseType = egret.HttpResponseType.TEXT,
		r.open(t + s, egret.HttpMethod.GET),
		r.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"),
		r.send(),
		r.addEventListener(egret.Event.COMPLETE, i, this),
		r.addEventListener(egret.IOErrorEvent.IO_ERROR, n, this),
		r.addEventListener(egret.ProgressEvent.PROGRESS, a, this)
	}
	,
	t.sendPostRequest = function(t, e, i, n, a, s) {
		var o = Utils.getStorageObj(Keys.FK_UserInfo)
		  , r = "";
		null != o && void 0 != o && "" != o && (r = o.token),
		null == e && (e = new eui.ArrayCollection);
		// null != r && e.addItem({
		// 	key: "access_token",
		// 	value: r
		// });
		var l = "";
		if (null != e && e.length > 0) {
			l = "";
			for (var h = 0; h < e.length; h++)
				"" != l && (l += "&"),
				l = l + e.getItemAt(h).key + "=" + e.getItemAt(h).value
		}
		var d = new egret.HttpRequest;
		d.responseType = egret.HttpResponseType.TEXT,
		d.open(t, egret.HttpMethod.POST),
		d.setRequestHeader("Content-Type", "application/x-www-form-urlencoded;charset=utf-8"),
		d.send(l),
		d.addEventListener(egret.Event.COMPLETE, i, s),
		d.addEventListener(egret.IOErrorEvent.IO_ERROR, n, s),
		d.addEventListener(egret.ProgressEvent.PROGRESS, a, s)
	}
	,
	t
}();
__reflect(HttpUtils.prototype, "HttpUtils");
var game;
!function(t) {
	var e = function(e) {
		function i(n) {
			void 0 === n && (n = null);
			var a = e.call(this, i.NAME, n) || this;
			return a.bigWinner = null,
			a.bigWinnerPanel = t.BigWinnerPanel.getInstance(),
			a
		}
		return __extends(i, e),
		i.prototype.listNotificationInterests = function() {
			return [PanelNotify.OPEN_BIG_WINNER, PanelNotify.CLOSE_BIG_WINNER]
		}
		,
		i.prototype.handleNotification = function(t) {
			var e = t.getBody();
			switch (t.getName()) {
			case PanelNotify.OPEN_BIG_WINNER:
				null != e && (this.bigWinner = e),
				this.showUI(this.bigWinnerPanel, !1, 0, 0, 3);
				break;
			case PanelNotify.CLOSE_BIG_WINNER:
				this.closePanel(4)
			}
		}
		,
		i.prototype.initUI = function() {
			null != this.bigWinner && (this.bigWinnerPanel.lb_name.text = this.bigWinner.name,
			this.bigWinnerPanel.lb_profit.text = "+ " + Utils.moneyFormat(this.bigWinner.profit, 2),
			this.bigWinnerPanel.img_vip.source = RES.getRes("icon_vip_" + this.bigWinner.vip_grade + "_png"),
			this.loadHeaderImage(this.bigWinner.avatar_url))
		}
		,
		i.prototype.loadHeaderImage = function(t) {
			var e = new egret.ImageLoader;
			if (e.addEventListener(egret.Event.COMPLETE, this.headerImageLoadCompleteHandler, this),
			null == t || void 0 == t || "" == t) {
				var i = new egret.Bitmap(RES.getRes("person_png"));
				this.showAvatar(i)
			} else
				e.load(t)
		}
		,
		i.prototype.headerImageLoadCompleteHandler = function(t) {
			var e = t.currentTarget
			  , i = new egret.Bitmap(e.data);
			this.showAvatar(i)
		}
		,
		i.prototype.showAvatar = function(t) {
			t.x = 180,
			t.y = 35,
			t.width = 60,
			t.height = 60,
			this.bigWinnerPanel.group.addChild(t);
			var e = new egret.Shape;
			e.graphics.beginFill(255),
			e.graphics.drawCircle(30, 30, 30),
			e.graphics.endFill(),
			e.x = 180,
			e.y = 35,
			this.bigWinnerPanel.group.addChild(e),
			t.mask = e;
			var i = new eui.Image;
			i.source = RES.getRes("bg_bigwinner_avatar_png"),
			i.width = 149,
			i.height = 126,
			i.x = 132,
			i.y = 10,
			this.bigWinnerPanel.group.addChild(i)
		}
		,
		i
	}(BaseMediator);
	e.NAME = "BigWinnerMediator",
	t.BigWinnerMediator = e,
	__reflect(e.prototype, "game.BigWinnerMediator")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i(n) {
			void 0 === n && (n = null);
			var a = e.call(this, i.NAME, n) || this;
			return a.banker_queue = null,
			a.balance = 0,
			a.callback = null,
			a.classicalBankerQueuePanel = t.ClassicalBankerQueuePanel.getInstance(),
			a
		}
		return __extends(i, e),
		i.prototype.listNotificationInterests = function() {
			return [PanelNotify.OPEN_CLASSICAL_BANKER_QUEUE, PanelNotify.CLOSE_CLASSICAL_BANKER_QUEUE]
		}
		,
		i.prototype.handleNotification = function(t) {
			var e = t.getBody();
			switch (t.getName()) {
			case PanelNotify.OPEN_CLASSICAL_BANKER_QUEUE:
				null != e && (this.banker_queue = e.banker_queue,
				this.balance = e.balance,
				this.callback = e.callback),
				this.showUI(this.classicalBankerQueuePanel, !0, 0, 0, 5);
				break;
			case PanelNotify.CLOSE_CLASSICAL_BANKER_QUEUE:
				this.closePanel(6)
			}
		}
		,
		i.prototype.initUI = function() {
			this.classicalBankerQueuePanel.img_close.addEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.classicalBankerQueuePanel.btn_apply_banker.addEventListener(egret.TouchEvent.TOUCH_TAP, this.apply_banker, this),
			this.classicalBankerQueuePanel.img_help.addEventListener(egret.TouchEvent.TOUCH_TAP, this.help, this),
			null != this.banker_queue && (this.classicalBankerQueuePanel.list_banker_queue.dataProvider = new eui.ArrayCollection(this.banker_queue),
			this.classicalBankerQueuePanel.list_banker_queue.itemRenderer = t.ClassicalBankerQueueItem),
			this.classicalBankerQueuePanel.lb_balance.text = parseFloat(this.balance.toString()).toFixed(0)
		}
		,
		i.prototype.updateBankerQueue = function() {
			this.classicalBankerQueuePanel.list_banker_queue.dataProvider = new eui.ArrayCollection(this.banker_queue),
			this.classicalBankerQueuePanel.list_banker_queue.validateNow()
		}
		,
		i.prototype.close = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			this.closePanel(6),
			this.classicalBankerQueuePanel.img_close.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this)
		}
		,
		i.prototype.apply_banker = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
			null != this.callback && this.callback(),
			this.closePanel(6),
			this.classicalBankerQueuePanel.btn_apply_banker.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.apply_banker, this)
		}
		,
		i.prototype.help = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_HEPL_DIALOG)
		}
		,
		i
	}(BaseMediator);
	e.NAME = "ClassicalBankerQueueMediator",
	t.ClassicalBankerQueueMediator = e,
	__reflect(e.prototype, "game.ClassicalBankerQueueMediator");
	var i = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.skinName = "resource/ui/main/ClassicalBankerQueueItem.exml",
			e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e
		}
		return __extends(e, t),
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			void 0 == this.data.user_avatar || null == this.data.user_avatar || "" == this.data.user_avatar ? this.user_avatar.source = RES.getRes("person_png") : this.loadBankerImage(this.data.user_avatar),
			this.vip_grade.source = RES.getRes("icon_vip_" + this.data.vip_grade + "_png"),
			this.balance.text = Utils.moneyFormat(this.data.balance, 2).toString(),
			this.user_name.text = this.data.user_name
		}
		,
		e.prototype.dataChanged = function() {
			null != this.balance && (void 0 == this.data.user_avatar || null == this.data.user_avatar || "" == this.data.user_avatar ? this.user_avatar.source = RES.getRes("person_png") : this.loadBankerImage(this.data.user_avatar),
			this.vip_grade.source = RES.getRes("icon_vip_" + this.data.vip_grade + "_png"),
			this.balance.text = Utils.moneyFormat(this.data.balance, 2).toString(),
			this.user_name.text = this.data.user_name)
		}
		,
		e.prototype.loadBankerImage = function(t) {
			var e = new egret.ImageLoader;
			e.addEventListener(egret.Event.COMPLETE, this.bankerImageLoadCompleteHandler, this),
			e.load(t)
		}
		,
		e.prototype.bankerImageLoadCompleteHandler = function(t) {
			var e = t.currentTarget;
			this.user_avatar.bitmapData = e.data
		}
		,
		e
	}(eui.ItemRenderer);
	t.ClassicalBankerQueueItem = i,
	__reflect(i.prototype, "game.ClassicalBankerQueueItem")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i(n) {
			void 0 === n && (n = null);
			var a = e.call(this, i.NAME, n) || this;
			return a.historyPanel = t.ClassicalHistoryPanel.getInstance(),
			a
		}
		return __extends(i, e),
		i.prototype.listNotificationInterests = function() {
			return [PanelNotify.OPEN_CLASSICAL_HISTORY, PanelNotify.CLOSE_CLASSICAL_HISTORY]
		}
		,
		i.prototype.handleNotification = function(t) {
			var e = t.getBody();
			switch (t.getName()) {
			case PanelNotify.OPEN_CLASSICAL_HISTORY:
				null != e && (this.room_id = e.room_id),
				this.showUI(this.historyPanel, !0, 0, 0, 5);
				break;
			case PanelNotify.CLOSE_CLASSICAL_HISTORY:
				this.closePanel(6)
			}
		}
		,
		i.prototype.initUI = function() {
			this.historyPanel.img_close.addEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.historyPanel.lb_history.addEventListener(egret.TouchEvent.TOUCH_TAP, this.showHistory, this),
			this.historyPanel.lb_help.addEventListener(egret.TouchEvent.TOUCH_TAP, this.showHelp, this),
			this.getSettleHistory()
		}
		,
		i.prototype.showHistory = function() {
			this.historyPanel.img.source = RES.getRes("bg_classical_history_right_png")
		}
		,
		i.prototype.showHelp = function() {
			this.historyPanel.img.source = RES.getRes("bg_classical_history_left_png")
		}
		,
		i.prototype.close = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			this.historyPanel.img_close.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.closePanel(6)
		}
		,
		i.prototype.setData = function(t) {
			this.historyPanel.group_content.removeChildren();
			for (var e = this.historyPanel.group_content.width - 52, i = 0; i < t.length; i++) {
				var n = t[i].settle_capital_odds;
				if (null != n) {
					n = JSON.parse(n);
					for (var a = 0; a < n.length; a++) {
						var s = n[a]
						  , o = s.order
						  , r = ""
						  , l = 0
						  , h = new eui.Image;
						h.width = 45,
						h.height = 59,
						0 == o ? r = "bg_classical_history_red_png" : 1 == o ? r = "bg_classical_history_equal_png" : 2 == o ? r = "bg_classical_history_green_png" : 3 == o || 5 == o ? r = "bg_classical_history_single_png" : (4 == o || 6 == o) && (r = "bg_classical_history_double_png"),
						h.source = RES.getRes(r),
						l = o >= 0 && 2 >= o ? 0 : h.height + 20,
						h.y = l,
						h.x = e,
						this.historyPanel.group_content.addChild(h)
					}
				}
				e -= 44
			}
		}
		,
		i.prototype.getSettleHistory = function() {
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "game_room_id",
				value: this.room_id
			})
			t.addItem({
				key: "limit",
				value: 12
			})
			t.addItem({
				key: "page",
				value: 1
			})
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "trade/getClassicalSettleHistory", t, this.onGetSettleHistoryComplete, this.onGetSettleHistoryIOError, this.onGetSettleHistoryProgress, this)
		}
		,
		i.prototype.onGetSettleHistoryComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_ROUND_FOUND) {
				var a = n.results.results;
				this.setData(a)
			} else if (403 == n.type)
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			else {
				n.message
			}
		}
		,
		i.prototype.onGetSettleHistoryIOError = function(t) {}
		,
		i.prototype.onGetSettleHistoryProgress = function(t) {}
		,
		i
	}(BaseMediator);
	e.NAME = "ClassicalHistoryMediator",
	t.ClassicalHistoryMediator = e,
	__reflect(e.prototype, "game.ClassicalHistoryMediator")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i(n) {
			void 0 === n && (n = null);
			var a = e.call(this, i.NAME, n) || this;
			return a.klineHelpPanel = t.ClassicalKlineHelpPanel.getInstance(),
			a
		}
		return __extends(i, e),
		i.prototype.listNotificationInterests = function() {
			return [PanelNotify.OPEN_CLASSICAL_KLINE_HEPL, PanelNotify.CLOSE_CLASSICAL_KLINE_HEPL]
		}
		,
		i.prototype.handleNotification = function(t) {
			t.getBody();
			switch (t.getName()) {
			case PanelNotify.OPEN_CLASSICAL_KLINE_HEPL:
				this.showUI(this.klineHelpPanel, !0, 0, 0, 5);
				break;
			case PanelNotify.CLOSE_CLASSICAL_KLINE_HEPL:
				this.closePanel(6)
			}
		}
		,
		i.prototype.initUI = function() {
			this.klineHelpPanel.img_close.addEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.scale9Grid(720, 1200)
		}
		,
		i.prototype.close = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			this.klineHelpPanel.img_close.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.closePanel(6)
		}
		,
		i.prototype.scale9Grid = function(t, e) {
			var i = new egret.Bitmap;
			i.texture = RES.getRes("bg_dialog_png");
			var n = new egret.Rectangle(360,600,10,10);
			i.scale9Grid = n,
			i.width = t,
			i.height = e,
			this.klineHelpPanel.bg_group.width = t,
			this.klineHelpPanel.bg_group.height = e,
			this.klineHelpPanel.bg_group.x = 0,
			this.klineHelpPanel.bg_group.y = -150,
			i.x = 0,
			i.y = 0,
			this.klineHelpPanel.bg_group.addChild(i),
			this.klineHelpPanel.bg_group.horizontalCenter = "0.5",
			this.klineHelpPanel.img_close.x = t - this.klineHelpPanel.img_close.width - 35
		}
		,
		i
	}(BaseMediator);
	e.NAME = "ClassicalKlineHelpMediator",
	t.ClassicalKlineHelpMediator = e,
	__reflect(e.prototype, "game.ClassicalKlineHelpMediator")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i(n) {
			void 0 === n && (n = null);
			var a = e.call(this, i.NAME, n) || this;
			return a.productId = "",
			a.customTopupPanel = t.CustomTopupPanel.getInstance(),
			a
		}
		return __extends(i, e),
		i.prototype.listNotificationInterests = function() {
			return [PanelNotify.OPEN_CUSTOM_TOPUP, PanelNotify.CLOSE_CUSTOM_TOPUP]
		}
		,
		i.prototype.handleNotification = function(t) {
			var e = t.getBody();
			switch (t.getName()) {
			case PanelNotify.OPEN_CUSTOM_TOPUP:
				this.productId = e,
				this.showUI(this.customTopupPanel, !0, 0, 0, 5);
				break;
			case PanelNotify.CLOSE_CUSTOM_TOPUP:
				this.closePanel(6)
			}
		}
		,
		i.prototype.initUI = function() {
			this.customTopupPanel.btn_ok.addEventListener(egret.TouchEvent.TOUCH_TAP, this.buyGold, this),
			this.customTopupPanel.img_close.addEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this)
		}
		,
		i.prototype.buyGold = function(t) {
			if ("" == this.customTopupPanel.amount_input.text || null == this.customTopupPanel.amount_input.text)
				return void Toast.launch("请输入充值金额", -100);
			var e = parseFloat(this.customTopupPanel.amount_input.text);
			if (10 > e)
				return void Toast.launch("最少充值金额10元", -100);
			var i = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			i.addItem({
				key: "product_id",
				value: this.productId
			})
			i.addItem({
				key: "amount",
				value: e
			});
			var n = "ewallet/buyGold"
			  , a = getWxUserInfo();
			null != a.payOpenId && void 0 != a.payOpenId && "undefined" != a.payOpenId && (this.showLoading(),
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + n, i, this.onBuyProductComplete, this.onBuyProductIOError, this.onBuyProductProgress, this))
		}
		,
		i.prototype.onBuyProductComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_BUY_PRODUCT_SUCCESS) {
				var a = n.results;
				if (null != a) {
					var s = a.order_no
					  , o = a.price
					  , r = getWxUserInfo()
					  , l = null;
					if (null != r.payOpenId && void 0 != r.payOpenId && "undefined" != r.payOpenId) {
						l = r.payOpenId;
						var h = {
							orderNo: s,
							price: o,
							payOpenId: l
						};
						gopay(h),
						this.closeLoading()
					}
				}
			} else if (403 == n.type)
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN),
				this.closeLoading();
			else {
				var d = n.message;
				Toast.launch(d, -100),
				this.closeLoading()
			}
		}
		,
		i.prototype.onBuyProductIOError = function(t) {
			this.closeLoading()
		}
		,
		i.prototype.onBuyProductProgress = function(t) {}
		,
		i.prototype.close = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			this.closePanel(6)
		}
		,
		i.prototype.showLoading = function() {
			if (null == this.loading_group) {
				this.loading_group = new eui.Group,
				this.loading_group.width = 719,
				this.loading_group.height = 1199,
				this.loading_group.verticalCenter = .5,
				this.loading_group.horizontalCenter = .5;
				var t = new egret.Sprite;
				t.graphics.clear(),
				t.graphics.beginFill(0, .6),
				t.graphics.drawRect(0, 0, GameConfig.curWidth(), GameConfig.curHeight()),
				t.graphics.endFill(),
				t.width = GameConfig.curWidth(),
				t.height = GameConfig.curHeight(),
				t.touchEnabled = !0,
				egret.Tween.get(t).to({
					alpha: 1
				}, 150),
				t.visible = !0,
				this.loading_group.addChild(t),
				null == this.loading_image && (this.loading_image = new eui.Image),
				this.loading_image.verticalCenter = .5,
				this.loading_image.horizontalCenter = .5,
				this.loading_image.source = RES.getRes("loading_run_png"),
				this.loading_image.anchorOffsetX = .5 * this.loading_image.width,
				this.loading_image.anchorOffsetY = .5 * this.loading_image.height,
				this.loading_group.addChild(this.loading_image)
			}
			GameLayerManager.gameLayer().effectLayer.contains(this.loading_group) || (GameLayerManager.gameLayer().effectLayer.addChild(this.loading_group),
			GameLayerManager.gameLayer().effectLayer.addEventListener(egret.Event.ENTER_FRAME, this.runLoading, this))
		}
		,
		i.prototype.runLoading = function(t) {
			this.loading_image.rotation += 3
		}
		,
		i.prototype.closeLoading = function() {
			GameLayerManager.gameLayer().effectLayer.contains(this.loading_group) && GameLayerManager.gameLayer().effectLayer.removeChild(this.loading_group),
			GameLayerManager.gameLayer().effectLayer.removeEventListener(egret.Event.ENTER_FRAME, this.runLoading, this)
		}
		,
		i
	}(BaseMediator);
	e.NAME = "CustomTopupMediator",
	t.CustomTopupMediator = e,
	__reflect(e.prototype, "game.CustomTopupMediator")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i(n) {
			void 0 === n && (n = null);
			var a = e.call(this, i.NAME, n) || this;
			return a.data = null,
			a.emergencyNoticePanel = t.EmergencyNoticePanel.getInstance(),
			a
		}
		return __extends(i, e),
		i.prototype.listNotificationInterests = function() {
			return [PanelNotify.OPEN_EMERGENCY_NOTICE]
		}
		,
		i.prototype.handleNotification = function(t) {
			var e = t.getBody();
			switch (t.getName()) {
			case PanelNotify.OPEN_EMERGENCY_NOTICE:
				this.data = e,
				this.showUI(this.emergencyNoticePanel, !0, 0, 0, 5)
			}
		}
		,
		i.prototype.initUI = function() {
			if (null != this.data) {
				this.data.title,
				this.data.content;
				this.emergencyNoticePanel.lbTitle.text = this.data.title,
				this.emergencyNoticePanel.lbTips.text = this.data.content
			}
			this.emergencyNoticePanel.btn_ok.addEventListener(egret.TouchEvent.TOUCH_TAP, this.callBack, this),
			this.data.cancelable && this.emergencyNoticePanel.group_bg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this)
		}
		,
		i.prototype.callBack = function() {
			this.close(),
			this.data.callback()
		}
		,
		i.prototype.close = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			this.emergencyNoticePanel.btn_ok.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.emergencyNoticePanel.group_bg.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.closePanel(6)
		}
		,
		i
	}(BaseMediator);
	e.NAME = "EmergencyNoticeMediator",
	t.EmergencyNoticeMediator = e,
	__reflect(e.prototype, "game.EmergencyNoticeMediator")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i(n) {
			void 0 === n && (n = null);
			var a = e.call(this, i.NAME, n) || this;
			return a.firstTopupPanel = t.FirstTopupPanel.getInstance(),
			a
		}
		return __extends(i, e),
		i.prototype.listNotificationInterests = function() {
			return [PanelNotify.OPEN_FIRST_TOPUP]
		}
		,
		i.prototype.handleNotification = function(t) {
			t.getBody();
			switch (t.getName()) {
			case PanelNotify.OPEN_FIRST_TOPUP:
				this.showUI(this.firstTopupPanel, !0, 0, 0, 5)
			}
		}
		,
		i.prototype.initUI = function() {
			var e = this;
			this.firstTopupPanel.img_close.visible = !1,
			this.firstTopupPanel.img_notice.source = RES.getRes("icon_first_topup_png"),
			this.firstTopupPanel.img_close.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
				e.closePanel(6)
			}, this),
			this.firstTopupPanel.group.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
				e.closePanel(6)
			}, this),
			this.firstTopupPanel.img_notice.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				e.closePanel(6),
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
				setTimeout(function() {
					t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_SHOP)
				}, 400)
			}, this)
		}
		,
		i.prototype.loadImage = function(t) {
			var e = new egret.ImageLoader;
			e.addEventListener(egret.Event.COMPLETE, this.ImageLoadCompleteHandler, this),
			e.load(t)
		}
		,
		i.prototype.ImageLoadCompleteHandler = function(t) {
			var e = t.currentTarget;
			this.firstTopupPanel.img_notice.bitmapData = e.data
		}
		,
		i
	}(BaseMediator);
	e.NAME = "FirstTopupMediator",
	t.FirstTopupMediator = e,
	__reflect(e.prototype, "game.FirstTopupMediator")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i(n) {
			void 0 === n && (n = null);
			var a = e.call(this, i.NAME, n) || this;
			return a.tag = "T",
			a.HelpPanel = t.HelpPanel.getInstance(),
			a
		}
		return __extends(i, e),
		i.prototype.listNotificationInterests = function() {
			return [PanelNotify.OPEN_HEPL_DIALOG, PanelNotify.CLOSE_HEPL_DIALOG]
		}
		,
		i.prototype.handleNotification = function(t) {
			t.getBody();
			switch (t.getName()) {
			case PanelNotify.OPEN_HEPL_DIALOG:
				this.showUI(this.HelpPanel, !0, 0, 0, 5);
				break;
			case PanelNotify.CLOSE_HEPL_DIALOG:
				this.closePanel(6)
			}
		}
		,
		i.prototype.initUI = function() {
			if (this.HelpPanel.img_close.addEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.scale9Grid(720, 1e3),
			!this.HelpPanel.group.getChildByName("tx1")) {
				var t = 16739624
				  , e = new egret.TextField;
				e.textFlow = [{
					text: "玩家在",
					style: {
						textColor: 16777215,
						size: 26
					}
				}, {
					text: "任何时间",
					style: {
						textColor: t,
						size: 26
					}
				}, {
					text: "都可以",
					style: {
						textColor: 16777215,
						size: 26
					}
				}, {
					text: "申请上庄",
					style: {
						textColor: t,
						size: 26
					}
				}, {
					text: "，点击“申请上庄”后，会",
					style: {
						textColor: 16777215,
						size: 26
					}
				}, {
					text: "按金币余额排序",
					style: {
						textColor: t,
						size: 26
					}
				}, {
					text: "，点击“剩余局数”查看排庄队列。",
					style: {
						textColor: 16777215,
						size: 26
					}
				}],
				e.textAlign = egret.VerticalAlign.MIDDLE,
				e.multiline = !0,
				e.width = 450,
				e.height = e.textHeight + 15,
				e.x = this.HelpPanel.group_apply_banker.x + this.HelpPanel.group_apply_banker.width + 15,
				e.y = this.HelpPanel.group_apply_banker.y + 5,
				e.lineSpacing = 7,
				e.name = "tx1",
				this.HelpPanel.group.addChild(e);
				var i = new egret.TextField;
				i.textFlow = [{
					text: "当前庄家",
					style: {
						textColor: t,
						size: 26
					}
				}, {
					text: "只有在",
					style: {
						textColor: 16777215,
						size: 26
					}
				}, {
					text: "等待结算",
					style: {
						textColor: t,
						size: 26
					}
				}, {
					text: "时才能申请下庄，结算后会自动下庄；",
					style: {
						textColor: 16777215,
						size: 26
					}
				}, {
					text: "排庄队列中",
					style: {
						textColor: t,
						size: 26
					}
				}, {
					text: "的玩家在",
					style: {
						textColor: 16777215,
						size: 26
					}
				}, {
					text: "任何时间",
					style: {
						textColor: t,
						size: 26
					}
				}, {
					text: "都可以点击“下庄”离开队列。",
					style: {
						textColor: 16777215,
						size: 26
					}
				}],
				i.textAlign = egret.VerticalAlign.MIDDLE,
				i.multiline = !0,
				i.width = 450,
				i.height = i.textHeight + 20,
				this.HelpPanel.group_off_banker.y = e.y + e.height + 30,
				i.x = this.HelpPanel.group_off_banker.x + this.HelpPanel.group_off_banker.width + 15,
				i.y = this.HelpPanel.group_off_banker.y + 5,
				i.lineSpacing = 7,
				i.name = "tx2",
				this.HelpPanel.group.addChild(i);
				var n = new egret.TextField;
				n.textFlow = [{
					text: "每局开始前，系统会从排庄队列中选择",
					style: {
						textColor: 16777215,
						size: 26
					}
				}, {
					text: "余额最多",
					style: {
						textColor: t,
						size: 26
					}
				}, {
					text: "的玩家作为庄家。下注期间，申请上庄玩家中",
					style: {
						textColor: 16777215,
						size: 26
					}
				}, {
					text: "余额最多",
					style: {
						textColor: t,
						size: 26
					}
				}, {
					text: "的可以",
					style: {
						textColor: 16777215,
						size: 26
					}
				}, {
					text: "直接上庄",
					style: {
						textColor: t,
						size: 26
					}
				}, {
					text: "。",
					style: {
						textColor: 16777215,
						size: 26
					}
				}],
				n.textAlign = egret.VerticalAlign.MIDDLE,
				n.multiline = !0,
				n.width = 450,
				n.height = n.textHeight + 20,
				this.HelpPanel.group_select_banker.y = i.y + i.height + 30,
				n.x = this.HelpPanel.group_select_banker.x + this.HelpPanel.group_select_banker.width + 15,
				n.y = this.HelpPanel.group_select_banker.y + 5,
				n.lineSpacing = 7,
				n.name = "tx3",
				this.HelpPanel.group.addChild(n);
				var a = new egret.TextField;
				a.textFlow = [{
					text: "庄家最多可以",
					style: {
						textColor: 16777215,
						size: 26
					}
				}, {
					text: "连续坐庄10回合",
					style: {
						textColor: t,
						size: 26
					}
				}, {
					text: "后自动下庄，“剩余局数”代表该庄家",
					style: {
						textColor: 16777215,
						size: 26
					}
				}, {
					text: "剩余的连续坐庄局数",
					style: {
						textColor: t,
						size: 26
					}
				}, {
					text: "。",
					style: {
						textColor: 16777215,
						size: 26
					}
				}],
				a.textAlign = egret.VerticalAlign.MIDDLE,
				a.multiline = !0,
				a.width = 450,
				a.height = a.textHeight + 5,
				this.HelpPanel.group_remain.y = n.y + n.height + 30,
				a.x = this.HelpPanel.group_remain.x + this.HelpPanel.group_remain.width + 15,
				a.y = this.HelpPanel.group_remain.y + 5,
				a.lineSpacing = 7,
				a.name = "tx4",
				this.HelpPanel.group.addChild(a)
			}
		}
		,
		i.prototype.close = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			this.HelpPanel.img_close.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.closePanel(6)
		}
		,
		i.prototype.scale9Grid = function(t, e) {
			var i = new egret.Bitmap;
			i.texture = RES.getRes("bg_dialog_png");
			var n = new egret.Rectangle(360,600,10,10);
			i.scale9Grid = n,
			i.width = t,
			i.height = e,
			this.HelpPanel.bg_group.width = t,
			this.HelpPanel.bg_group.height = e,
			this.HelpPanel.bg_group.x = 0,
			this.HelpPanel.bg_group.y = 0,
			i.x = 0,
			i.y = 0,
			this.HelpPanel.bg_group.addChild(i),
			this.HelpPanel.bg_group.horizontalCenter = "0.5",
			this.HelpPanel.img_close.x = t - this.HelpPanel.img_close.width - 35
		}
		,
		i
	}(BaseMediator);
	e.NAME = "HelpMediator",
	t.HelpMediator = e,
	__reflect(e.prototype, "game.HelpMediator")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i(n) {
			void 0 === n && (n = null);
			var a = e.call(this, i.NAME, n) || this;
			return a.limit = 20,
			a.page = 1,
			a.total = 0,
			a.get_invite_list_ing = !1,
			a.scV = 0,
			a.inviteListPanel = t.InviteListPanel.getInstance(),
			a
		}
		return __extends(i, e),
		i.prototype.listNotificationInterests = function() {
			return [PanelNotify.OPEN_INVITE_LIST]
		}
		,
		i.prototype.handleNotification = function(t) {
			t.getBody();
			switch (t.getName()) {
			case PanelNotify.OPEN_INVITE_LIST:
				this.showUI(this.inviteListPanel, !0, 0, 0, 5)
			}
		}
		,
		i.prototype.showLoading = function() {
			null == this.inviteListPanel.loading_image && (this.inviteListPanel.loading_image = new eui.Image),
			this.inviteListPanel.loading_image.verticalCenter = .5,
			this.inviteListPanel.loading_image.horizontalCenter = .5,
			this.inviteListPanel.loading_image.source = RES.getRes("loading_run_png"),
			this.inviteListPanel.loading_image.anchorOffsetX = .5 * this.inviteListPanel.loading_image.width,
			this.inviteListPanel.loading_image.anchorOffsetY = .5 * this.inviteListPanel.loading_image.height,
			this.inviteListPanel.addChild(this.inviteListPanel.loading_image),
			this.inviteListPanel.addEventListener(egret.Event.ENTER_FRAME, this.runLoading, this)
		}
		,
		i.prototype.runLoading = function(t) {
			this.inviteListPanel.loading_image.rotation += 3
		}
		,
		i.prototype.closeLoading = function() {
			this.inviteListPanel.contains(this.inviteListPanel.loading_image) && this.inviteListPanel.removeChild(this.inviteListPanel.loading_image),
			this.inviteListPanel.removeEventListener(egret.Event.ENTER_FRAME, this.runLoading, this)
		}
		,
		i.prototype.initUI = function() {
			this.scV = 0,
			this.inviteListPanel.img_close.addEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.inviteListPanel.scroller_invite_list.addEventListener(egret.TouchEvent.TOUCH_MOVE, this.moveListener, this),
			this.inviteListPanel.lb_invite.addEventListener(egret.TouchEvent.TOUCH_TAP, this.lbInviteClick, this)
		}
		,
		i.prototype.lbInviteClick = function() {
			this.close(),
			t.Invite.getInstance().showQRCode()
		}
		,
		i.prototype.moveListener = function() {
			this.inviteListPanel.scroller_invite_list.viewport.scrollV + this.inviteListPanel.scroller_invite_list.height >= this.inviteListPanel.scroller_invite_list.viewport.contentHeight - 5 && this.total > 0 && (this.scV = this.inviteListPanel.scroller_invite_list.viewport.scrollV,
			this.getInviteList())
		}
		,
		i.prototype.close = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			this.inviteListPanel.img_close.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.inviteListPanel.scroller_invite_list.removeEventListener(egret.TouchEvent.TOUCH_MOVE, this.moveListener, this),
			this.inviteListPanel.lb_invite.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.lbInviteClick, this),
			this.closePanel(6)
		}
		,
		i.prototype.initData = function() {
			this.limit = 20,
			this.page = 1,
			this.inviteListPanel.invite_list_data = new Array,
			this.getInviteList()
		}
		,
		i.prototype.setData = function() {
			this.inviteListPanel.inviteList.dataProvider = new eui.ArrayCollection(this.inviteListPanel.invite_list_data),
			this.inviteListPanel.inviteList.itemRenderer = t.InviteListItem,
			this.inviteListPanel.inviteList.validateNow(),
			this.inviteListPanel.scroller_invite_list.viewport.scrollV = this.scV
		}
		,
		i.prototype.getInviteList = function() {
			if (!(this.inviteListPanel.invite_list_data.length == this.total && this.total > 0 || this.get_invite_list_ing)) {
				this.get_invite_list_ing = !0;
				var t = new eui.ArrayCollection;
				var ui = Utils.getStorageObj(Keys.FK_UserInfo)
				t.addItem({
					key: "uid",
					value: ui.uid
				})
				t.addItem({
					key: "token",
					value: ui.token
				})
				t.addItem({
					key: "limit",
					value: this.limit
				})
				t.addItem({
					key: "page",
					value: this.page
				})
				this.showLoading(),
				HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "user/getMyInvitedUser", t, this.onGetgetInviteListComplete, this.onGetgetInviteListIOError, this.onGetgetInviteListProgress, this)
			}
		}
		,
		i.prototype.onGetgetInviteListComplete = function(e) {
			this.closeLoading(),
			this.get_invite_list_ing = !1;
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_USER_FOUND) {
				var a = n.results.invite;
				if (this.total = n.results.count,
				null != a) {
					for (var s = 0; s < a.length; s++)
						this.inviteListPanel.invite_list_data.push(a[s]);
					this.inviteListPanel.lb_invite.visible = !1,
					this.inviteListPanel.group_title.visible = !0
				} else {
					this.inviteListPanel.group_title.visible = !1;
					var o = (new egret.HtmlTextParser).parser("<u>您还没有好友，点击立刻邀请好友！</u>");
					this.inviteListPanel.lb_invite.textFlow = o,
					this.inviteListPanel.lb_invite.visible = !0
				}
				this.page++,
				this.setData()
			} else if (403 == n.type)
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			else {
				n.message;
				this.get_invite_list_ing = !1,
				this.inviteListPanel.invite_list_data = new Array,
				this.setData(),
				this.inviteListPanel.group_title.visible = !1;
				var o = (new egret.HtmlTextParser).parser("<u>您还没有好友，点击立刻邀请好友！</u>");
				this.inviteListPanel.lb_invite.textFlow = o,
				this.inviteListPanel.lb_invite.visible = !0
			}
		}
		,
		i.prototype.onGetgetInviteListIOError = function(t) {
			this.closeLoading()
		}
		,
		i.prototype.onGetgetInviteListProgress = function(t) {}
		,
		i
	}(BaseMediator);
	e.NAME = "InviteListMediator",
	t.InviteListMediator = e,
	__reflect(e.prototype, "game.InviteListMediator");
	var i = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/InviteListItemSkin.exml",
			e
		}
		return __extends(e, t),
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			this.setData()
		}
		,
		e.prototype.dataChanged = function() {
			null != this.lb_name && this.setData()
		}
		,
		e.prototype.setData = function() {
			null != this.data && (void 0 == this.data.avatar_url || null == this.data.avatar_url || "" == this.data.avatar_url ? this.img_avatar.source = RES.getRes("person_png") : this.loadBankerImage(this.data.avatar_url),
			null != this.data.name && (this.lb_name.text = this.data.name),
			null != this.data.incoming_1_rmb && (this.lb_expect_balance.text = parseFloat(parseFloat(this.data.incoming_1_rmb).toFixed(3)) + ""),
			null != this.data.unfreeze_1_rmb && (this.lb_obtain_balance.text = parseFloat(parseFloat(this.data.unfreeze_1_rmb).toFixed(3)) + ""))
		}
		,
		e.prototype.loadBankerImage = function(t) {
			var e = new egret.ImageLoader;
			e.addEventListener(egret.Event.COMPLETE, this.bankerImageLoadCompleteHandler, this),
			e.load(t)
		}
		,
		e.prototype.bankerImageLoadCompleteHandler = function(t) {
			var e = t.currentTarget;
			this.img_avatar.bitmapData = e.data
		}
		,
		e
	}(eui.ItemRenderer);
	t.InviteListItem = i,
	__reflect(i.prototype, "game.InviteListItem")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i(n) {
			void 0 === n && (n = null);
			var a = e.call(this, i.NAME, n) || this;
			return a.klineHelpPanel = t.KlineHelpPanel.getInstance(),
			a
		}
		return __extends(i, e),
		i.prototype.listNotificationInterests = function() {
			return [PanelNotify.OPEN_KLINE_HEPL, PanelNotify.CLOSE_KLINE_HEPL]
		}
		,
		i.prototype.handleNotification = function(t) {
			t.getBody();
			switch (t.getName()) {
			case PanelNotify.OPEN_KLINE_HEPL:
				this.showUI(this.klineHelpPanel, !0, 0, 0, 5);
				break;
			case PanelNotify.CLOSE_KLINE_HEPL:
				this.closePanel(6)
			}
		}
		,
		i.prototype.initUI = function() {
			this.klineHelpPanel.img_close.addEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.scale9Grid(720, 1200)
		}
		,
		i.prototype.close = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			this.klineHelpPanel.img_close.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.closePanel(6)
		}
		,
		i.prototype.scale9Grid = function(t, e) {
			var i = new egret.Bitmap;
			i.texture = RES.getRes("bg_dialog_png");
			var n = new egret.Rectangle(360,600,10,10);
			i.scale9Grid = n,
			i.width = t,
			i.height = e,
			this.klineHelpPanel.bg_group.width = t,
			this.klineHelpPanel.bg_group.height = e,
			this.klineHelpPanel.bg_group.x = 0,
			this.klineHelpPanel.bg_group.y = -150,
			i.x = 0,
			i.y = 0,
			this.klineHelpPanel.bg_group.addChild(i),
			this.klineHelpPanel.bg_group.horizontalCenter = "0.5",
			this.klineHelpPanel.img_close.x = t - this.klineHelpPanel.img_close.width - 35
		}
		,
		i
	}(BaseMediator);
	e.NAME = "KlineHelpMediator",
	t.KlineHelpMediator = e,
	__reflect(e.prototype, "game.KlineHelpMediator")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i(n) {
			void 0 === n && (n = null);
			var a = e.call(this, i.NAME, n) || this;
			return a.moneyRankPanel = t.MoneyRankPanel.getInstance(),
			a
		}
		return __extends(i, e),
		i.prototype.listNotificationInterests = function() {
			return [PanelNotify.OPEN_MONEYRANK, PanelNotify.CLOSE_MONEYRANK]
		}
		,
		i.prototype.handleNotification = function(t) {
			t.getBody();
			switch (t.getName()) {
			case PanelNotify.OPEN_MONEYRANK:
				this.showUI(this.moneyRankPanel, !0, 0, 0, 5);
				break;
			case PanelNotify.CLOSE_MONEYRANK:
				this.closePanel(6)
			}
		}
		,
		i.prototype.initUI = function() {
			this.moneyRankPanel.moneyRankList.useVirtualLayout = !1,
			this.moneyRankPanel.img_close.addEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.moneyRankPanel.btn_money_rank.addEventListener(egret.TouchEvent.TOUCH_TAP, this.moneyRank, this),
			this.moneyRankPanel.btn_today_rank.addEventListener(egret.TouchEvent.TOUCH_TAP, this.todayRank, this)
		}
		,
		i.prototype.moneyRank = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			this.moneyRankPanel.btn_money_rank.enabled = !1,
			this.moneyRankPanel.btn_today_rank.enabled = !0,
			this.getMoneyRank()
		}
		,
		i.prototype.todayRank = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			this.moneyRankPanel.btn_money_rank.enabled = !0,
			this.moneyRankPanel.btn_today_rank.enabled = !1,
			this.getTodayWinner()
		}
		,
		i.prototype.close = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			this.moneyRankPanel.img_close.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.moneyRankPanel.btn_money_rank.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.moneyRank, this),
			this.moneyRankPanel.btn_today_rank.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.todayRank, this),
			this.closePanel(6)
		}
		,
		i.prototype.initData = function() {
			this.moneyRankPanel.btn_money_rank.enabled = !1,
			this.moneyRankPanel.btn_today_rank.enabled = !0,
			this.getMoneyRank()
		}
		,
		i.prototype.setData = function() {
			this.moneyRankPanel.moneyRankList.dataProvider = new eui.ArrayCollection(this.moneyRankPanel.gold_data),
			this.moneyRankPanel.moneyRankList.itemRenderer = t.MoneyRankItem
		}
		,
		i.prototype.getMoneyRank = function() {
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "limit",
				value: 50
			})
			t.addItem({
				key: "page",
				value: 1
			})
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "ewallet/getEwalletRank", t, this.onGetMoneyRankComplete, this.onGetMoneyRankIOError, this.onGetMoneyRankProgress, this)
		}
		,
		i.prototype.onGetMoneyRankComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_EWALLET_FOUND) {
				var a = n.results.results;
				this.moneyRankPanel.gold_data = new Array;
				for (var s = 0; s < a.length; s++)
					this.moneyRankPanel.gold_data.push(a[s]);
				this.setData()
			} else
				403 == n.type ? t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN) : (this.moneyRankPanel.gold_data = new Array,
				this.setData())
		}
		,
		i.prototype.onGetMoneyRankIOError = function(t) {}
		,
		i.prototype.onGetMoneyRankProgress = function(t) {}
		,
		i.prototype.getTodayWinner = function() {
			new eui.ArrayCollection;
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "trade/getProfitRank", null, this.onGetTodayWinnerComplete, this.onGetTodayWinnerIOError, this.onGetTodayWinnerProgress, this)
		}
		,
		i.prototype.onGetTodayWinnerComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_EWALLET_FOUND) {
				var a = n.results;
				this.moneyRankPanel.gold_data = new Array;
				for (var s = 0; s < a.length; s++)
					this.moneyRankPanel.gold_data.push(a[s]);
				this.setData()
			} else
				403 == n.type ? t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN) : (this.moneyRankPanel.gold_data = new Array,
				this.setData())
		}
		,
		i.prototype.onGetTodayWinnerIOError = function(t) {}
		,
		i.prototype.onGetTodayWinnerProgress = function(t) {}
		,
		i
	}(BaseMediator);
	e.NAME = "MoneyRankMediator",
	t.MoneyRankMediator = e,
	__reflect(e.prototype, "game.MoneyRankMediator");
	var i = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/MoneyRankItemSkin.exml",
			e
		}
		return __extends(e, t),
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			this.setData()
		}
		,
		e.prototype.dataChanged = function() {
			null != this.lb_name && this.setData()
		}
		,
		e.prototype.setData = function() {
			if (null != this.data && null != this.data.balance) {
				if (void 0 == this.data.avatar_url || null == this.data.avatar_url || "" == this.data.avatar_url) {
					var t = new eui.Image;
					t.source = RES.getRes("person_png"),
					t.x = 165,
					t.y = 8,
					t.width = 60,
					t.height = 60,
					this.addChild(t)
				} else
					this.loadBankerImage(this.data.avatar_url);
				0 == this.itemIndex ? (this.img_order.visible = !0,
				this.lb_order.visible = !1,
				this.img_order.source = RES.getRes("match_info_rank_1_png")) : 1 == this.itemIndex ? (this.img_order.visible = !0,
				this.lb_order.visible = !1,
				this.img_order.source = RES.getRes("match_info_rank_2_png")) : 2 == this.itemIndex ? (this.img_order.visible = !0,
				this.lb_order.visible = !1,
				this.img_order.source = RES.getRes("match_info_rank_3_png")) : (this.img_order.visible = !1,
				this.lb_order.visible = !0,
				this.lb_order.text = this.itemIndex + 1 + ""),
				this.lb_name.text = this.data.name,
				this.lb_balance.text = Utils.moneyFormat(this.data.balance, 2).toString()
			}
		}
		,
		e.prototype.loadBankerImage = function(t) {
			var e = new egret.ImageLoader;
			e.addEventListener(egret.Event.COMPLETE, this.bankerImageLoadCompleteHandler, this),
			e.load(t)
		}
		,
		e.prototype.bankerImageLoadCompleteHandler = function(t) {
			var e = t.currentTarget
			  , e = t.currentTarget
			  , i = new egret.Bitmap(e.data);
			this.addChild(i),
			i.fillMode = egret.BitmapFillMode.SCALE,
			i.x = 165,
			i.y = 8,
			i.width = 60,
			i.height = 60
		}
		,
		e
	}(eui.ItemRenderer);
	t.MoneyRankItem = i,
	__reflect(i.prototype, "game.MoneyRankItem")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i(n) {
			void 0 === n && (n = null);
			var a = e.call(this, i.NAME, n) || this;
			return a.limit = 20,
			a.page = 1,
			a.total = 0,
			a.get_history_ing = !1,
			a.scV = 0,
			a.type = 1,
			a.capital = "",
			a.is_sim = "N",
			a.settleHistoryPanel = t.MyClassicalSettleHistoryPanel.getInstance(),
			a
		}
		return __extends(i, e),
		i.prototype.listNotificationInterests = function() {
			return [PanelNotify.OPEN_MY_CLASSICAL_SETTLE_HISTORY, PanelNotify.CLOSE_MY_CLASSICAL_SETTLE_HISTORY, PanelNotify.MY_CLASSICAL_TRADE_DETAIL]
		}
		,
		i.prototype.handleNotification = function(t) {
			var e = t.getBody();
			switch (t.getName()) {
			case PanelNotify.OPEN_MY_CLASSICAL_SETTLE_HISTORY:
				null != e && (this.is_sim = e),
				this.showUI(this.settleHistoryPanel, !0, 0, 0, 5);
				break;
			case PanelNotify.CLOSE_MY_CLASSICAL_SETTLE_HISTORY:
				this.closePanel(6);
				break;
			case PanelNotify.MY_CLASSICAL_TRADE_DETAIL:
				this.getMyTradeDetail(e)
			}
		}
		,
		i.prototype.showLoading = function() {
			null == this.settleHistoryPanel.loading_image && (this.settleHistoryPanel.loading_image = new eui.Image),
			this.settleHistoryPanel.loading_image.verticalCenter = .5,
			this.settleHistoryPanel.loading_image.horizontalCenter = .5,
			this.settleHistoryPanel.loading_image.source = RES.getRes("loading_run_png"),
			this.settleHistoryPanel.loading_image.anchorOffsetX = .5 * this.settleHistoryPanel.loading_image.width,
			this.settleHistoryPanel.loading_image.anchorOffsetY = .5 * this.settleHistoryPanel.loading_image.height,
			this.settleHistoryPanel.addChild(this.settleHistoryPanel.loading_image),
			this.settleHistoryPanel.addEventListener(egret.Event.ENTER_FRAME, this.runLoading, this)
		}
		,
		i.prototype.runLoading = function(t) {
			this.settleHistoryPanel.loading_image.rotation += 3
		}
		,
		i.prototype.closeLoading = function() {
			this.settleHistoryPanel.contains(this.settleHistoryPanel.loading_image) && this.settleHistoryPanel.removeChild(this.settleHistoryPanel.loading_image),
			this.settleHistoryPanel.removeEventListener(egret.Event.ENTER_FRAME, this.runLoading, this)
		}
		,
		i.prototype.getMyTradeDetail = function(t) {
			this.showLoading();
			var e = new eui.ArrayCollection;
			e.addItem({
				key: "round_id",
				value: t
			}),
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "trade/getMyTradeHistoryDetail", e, this.onMyTradeDetailComplete, this.onMyTradeDetailIOError, this.onMyTradeDetailProgress, this)
		}
		,
		i.prototype.onMyTradeDetailComplete = function(e) {
			this.closeLoading();
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_TRADE_FOUND)
				this.showDetail(n.results);
			else if (403 == n.type)
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			else {
				var a = n.message;
				Toast.launch(a, -100)
			}
		}
		,
		i.prototype.showDetail = function(t) {
			if (this.settleHistoryPanel.group_detail.contains(this.settleHistoryPanel.group_detail.getChildByName("settle_res_group")) && this.settleHistoryPanel.group_detail.removeChild(this.settleHistoryPanel.group_detail.getChildByName("settle_res_group")),
			this.settleHistoryPanel.scroller_my_trade.viewport.scrollV = 0,
			null != t) {
				egret.Tween.get(this.settleHistoryPanel.group_list, {
					loop: !1
				}).to({
					x: -1 * this.settleHistoryPanel.group_list.width
				}, 300),
				this.settleHistoryPanel.group_detail.visible = !0,
				this.settleHistoryPanel.group_detail.x = 719,
				egret.Tween.get(this.settleHistoryPanel.group_detail, {
					loop: !1
				}).to({
					x: 0
				}, 300);
				var e = t.round;
				if (null != e) {
					var i = Utils.convertTime(e.end_time.toString(), "hhmm");
					this.settleHistoryPanel.lb_qishu.text = i + "期",
					this.settleHistoryPanel.lb_capital.text = e.capital_name,
					this.settleHistoryPanel.lb_open_price.text = e.start_point,
					this.settleHistoryPanel.lb_close_price.text = e.end_point;
					var n = e.end_point - e.start_point
					  , a = Utils.getRoundPoint(e.start_point);
					"BTCCNY" == e.capital_key ? this.settleHistoryPanel.img_capital.source = RES.getRes("icon_btccny_png") : "EURUSD" == e.capital_key ? this.settleHistoryPanel.img_capital.source = RES.getRes("icon_eurusd_png") : "XAUUSD" == e.capital_key ? this.settleHistoryPanel.img_capital.source = RES.getRes("icon_xauusd_png") : "GBPUSD" == e.capital_key ? this.settleHistoryPanel.img_capital.source = RES.getRes("icon_gbpusd_png") : "LTCCNY" == e.capital_key && (this.settleHistoryPanel.img_capital.source = RES.getRes("icon_ltccny_png")),
					this.settleHistoryPanel.img_capital.x = this.settleHistoryPanel.lb_capital.x + this.settleHistoryPanel.lb_capital.width + 30;
					var s = ""
					  , o = "";
					0 > n ? s = "跌" : n > 0 ? s = "涨" : (s = "平",
					o = "平");
					var r = parseInt(e.end_point.substr(e.end_point.length - 1, 1));
					0 != n && (r % 2 == 1 ? (s += "单",
					o = "单") : (s += "双",
					o = "双")),
					"BTCCNY" == e.capital_key ? n = parseFloat(n.toFixed(a)) : (n *= Math.pow(10, a),
					n = Math.round(n)),
					n > 0 ? this.settleHistoryPanel.lb_result.textColor = 16516871 : 0 > n ? this.settleHistoryPanel.lb_result.textColor = 372004 : this.settleHistoryPanel.lb_result.textColor = 16250100,
					this.settleHistoryPanel.lb_result.text = s;
					var l = e.settle_capital_odds;
					if (null != l) {
						l = JSON.parse(l);
						var h = "";
						h = e.end_point - e.start_point > 0 ? CONST.ODDS_IMG.UP : e.end_point - e.start_point < 0 ? CONST.ODDS_IMG.DOWN : CONST.ODDS_IMG.FLAT;
						var d = new eui.Group;
						d.x = this.settleHistoryPanel.lb_settle_result.width + this.settleHistoryPanel.lb_settle_result.x + 20,
						d.y = this.settleHistoryPanel.lb_settle_result.y,
						d.name = "settle_result_group",
						this.settleHistoryPanel.group_detail.addChild(d);
						for (var _ = 0; _ < l.length; _++) {
							var p = l[_]
							  , u = p.order;
							if (0 != u && 2 != u) {
								var g = new eui.Image
								  , c = new eui.Label;
								g.width = 55,
								g.height = 31,
								g.source = RES.getRes(h),
								g.y = 0,
								g.x = 0;
								var m = p.odds;
								p.id;
								m = parseFloat(parseFloat(m.toString()).toFixed(1)),
								c.text = o,
								c.fontFamily = "lgzbFont",
								c.textColor = 16113323,
								c.stroke = 1,
								c.strokeColor = 789259,
								c.size = 17,
								c.x = g.x + (g.width - c.width) / 2,
								c.y = g.y + 5,
								d.addChild(g),
								d.addChild(c)
							}
						}
						for (var y = t.my_trades, v = (t.banker_trade_detail,
						0), b = 0, f = 0, C = 0; C < y.length; C++) {
							var T = y[C];
							f += parseFloat(T.trade_amount);
							var S = Utils.moneyFormat(T.trade_amount, 2).toString()
							  , E = Utils.moneyFormat(T.profit, 2).toString();
							v += parseFloat(T.profit);
							var w = T.display
							  , m = T.odds
							  , u = T.order
							  , I = new eui.Label;
							I.text = w,
							I.y = b,
							I.size = 25,
							I.width = 100,
							I.x = -5,
							I.textAlign = "center",
							2 == u || u > 6 ? I.textColor = 5169700 : (0 == u || u > 2 && 7 > u) && (I.textColor = 16001316),
							this.settleHistoryPanel.group_my_trade.addChild(I);
							var L = new eui.Label;
							L.text = parseFloat(m) + "倍",
							L.y = b,
							L.width = 100,
							L.size = 25,
							L.x = 120,
							L.textAlign = "center",
							this.settleHistoryPanel.group_my_trade.addChild(L);
							var P = new eui.Label;
							P.text = S,
							P.y = b,
							P.size = 25,
							P.width = 120,
							P.x = 290,
							P.textAlign = "center",
							this.settleHistoryPanel.group_my_trade.addChild(P);
							var x = new eui.Label;
							"0" != E ? (x.textColor = 16001316,
							x.text = "+" + E) : (x.textColor = 16777215,
							x.text = E),
							x.y = b,
							x.fontFamily = "Microsoft YaHei",
							x.size = 25,
							x.width = 140,
							x.x = 470,
							x.textAlign = "center",
							this.settleHistoryPanel.group_my_trade.addChild(x),
							b = b + I.height + 10
						}
						this.settleHistoryPanel.lb_total_bet.text = f.toString(),
						v > 0 ? this.settleHistoryPanel.lb_my_total_profit.text = "+" + Utils.moneyFormat(v, 2) : this.settleHistoryPanel.lb_my_total_profit.text = Utils.moneyFormat(v, 2).toString()
					}
				}
			}
		}
		,
		i.prototype.showList = function() {
			this.settleHistoryPanel.group_detail.contains(this.settleHistoryPanel.group_detail.getChildByName("settle_res_group")) && this.settleHistoryPanel.group_detail.removeChild(this.settleHistoryPanel.group_detail.getChildByName("settle_res_group")),
			this.settleHistoryPanel.group_my_trade.removeChildren();
			var t = this;
			egret.Tween.get(this.settleHistoryPanel.group_detail, {
				loop: !1
			}).to({
				x: 719
			}, 300).call(function() {
				t.settleHistoryPanel.group_detail.visible = !1
			}),
			egret.Tween.get(this.settleHistoryPanel.group_list, {
				loop: !1
			}).to({
				x: 0
			}, 300)
		}
		,
		i.prototype.onMyTradeDetailIOError = function(t) {
			this.closeLoading()
		}
		,
		i.prototype.onMyTradeDetailProgress = function(t) {}
		,
		i.prototype.initUI = function() {
			this.scV = 0,
			this.type = 1,
			this.settleHistoryPanel.group_my_title.visible = !0,
			this.settleHistoryPanel.group_capital.visible = !0,
			this.settleHistoryPanel.group_money_title.visible = !1,
			this.settleHistoryPanel.group_money_list_title.visible = !1,
			this.settleHistoryPanel.settleHistoryList.useVirtualLayout = !1,
			this.settleHistoryPanel.img_close.addEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.settleHistoryPanel.img_detail_close.addEventListener(egret.TouchEvent.TOUCH_TAP, this.showList, this),
			this.settleHistoryPanel.scroller_history_list.addEventListener(egret.TouchEvent.TOUCH_MOVE, this.moveListener, this),
			this.settleHistoryPanel.btn_my_history.addEventListener(egret.TouchEvent.TOUCH_TAP, this.my_history, this),
			this.settleHistoryPanel.btn_money_list.addEventListener(egret.TouchEvent.TOUCH_TAP, this.money_list, this),
			this.settleHistoryPanel.lb_topup.addEventListener(egret.TouchEvent.TOUCH_TAP, this.money_list, this),
			this.settleHistoryPanel.lb_withdraw.addEventListener(egret.TouchEvent.TOUCH_TAP, this.money_list, this)
		}
		,
		i.prototype.moveListener = function() {
			this.settleHistoryPanel.scroller_history_list.viewport.scrollV + this.settleHistoryPanel.scroller_history_list.height >= this.settleHistoryPanel.scroller_history_list.viewport.contentHeight - 5 && this.total > 0 && (this.scV = this.settleHistoryPanel.scroller_history_list.viewport.scrollV,
			1 == this.type ? this.getSettleHistory() : this.getMoneyList())
		}
		,
		i.prototype.my_history = function() {
			this.capital = "",
			this.settleHistoryPanel.bg_capital.x = 0,
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			this.settleHistoryPanel.btn_my_history.enabled = !1,
			this.settleHistoryPanel.btn_money_list.enabled = !0,
			this.scV = 0,
			this.type = 1,
			this.total = 0,
			this.settleHistoryPanel.group_capital.visible = !0,
			this.settleHistoryPanel.group_my_title.visible = !0,
			this.settleHistoryPanel.group_money_title.visible = !1,
			this.settleHistoryPanel.group_money_list_title.visible = !1,
			this.settleHistoryPanel.history_data = new Array,
			this.setData(),
			this.page = 1,
			this.limit = 20,
			this.getSettleHistory()
		}
		,
		i.prototype.money_list = function(e) {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			this.settleHistoryPanel.btn_my_history.enabled = !0,
			this.settleHistoryPanel.btn_money_list.enabled = !1,
			this.scV = 0,
			this.total = 0,
			e.currentTarget == this.settleHistoryPanel.btn_money_list || e.currentTarget == this.settleHistoryPanel.lb_topup ? (this.type = 2,
			this.settleHistoryPanel.bg_money_title.x = 0,
			this.settleHistoryPanel.lb_money_title_1.text = "充值方式",
			this.settleHistoryPanel.lb_money_title_2.text = "充值金额",
			this.settleHistoryPanel.lb_money_title_3.text = "时间") : (this.type = 3,
			this.settleHistoryPanel.bg_money_title.x = this.settleHistoryPanel.lb_withdraw.x,
			this.settleHistoryPanel.lb_money_title_1.text = "提现方式",
			this.settleHistoryPanel.lb_money_title_2.text = "提现金额",
			this.settleHistoryPanel.lb_money_title_3.text = "申请时间"),
			this.settleHistoryPanel.group_capital.visible = !1,
			this.settleHistoryPanel.group_my_title.visible = !1,
			this.settleHistoryPanel.group_money_title.visible = !0,
			this.settleHistoryPanel.group_money_list_title.visible = !0,
			this.settleHistoryPanel.history_data = new Array,
			this.setData(),
			this.page = 1,
			this.limit = 20,
			this.getMoneyList(!0)
		}
		,
		i.prototype.getMoneyList = function(t) {
			if (void 0 === t && (t = !1),
			!t) {
				for (var e = 0, i = 0; i < this.settleHistoryPanel.history_data.length; i++) {
					var n = this.settleHistoryPanel.history_data[i];
					"Z" != n.product_type && e++
				}
				if (e == this.total && this.total > 0)
					return
			}
			if (!this.get_history_ing) {
				this.get_history_ing = !0;
				var a = new eui.ArrayCollection;
				a.addItem({
					key: "limit",
					value: this.limit
				}),
				a.addItem({
					key: "page",
					value: this.page
				}),
				2 == this.type ? a.addItem({
					key: "product_type",
					value: "G"
				}) : 3 == this.type && a.addItem({
					key: "product_type",
					value: "T"
				}),
				this.showLoading(),
				HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "order/getMoneyRecord", a, this.onGetMoneyListComplete, this.onGetMoneyListIOError, this.onGetMoneyListProgress, this)
			}
		}
		,
		i.prototype.onGetMoneyListComplete = function(e) {
			this.closeLoading(),
			this.get_history_ing = !1;
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_GET_ORDER_SUCCESS) {
				var a = n.results;
				this.total = n.total,
				this.page++;
				for (var s = 0; s < a.length; s++) {
					var o = a[s];
					this.settleHistoryPanel.history_data.push(a[s]),
					"G" == o.product_type && parseFloat(o.order_amount) == parseFloat(o.gift) && this.settleHistoryPanel.history_data.push({
						product_type: "Z",
						order_price: a[s].order_price,
						order_amount: a[s].order_amount,
						created_at: a[s].created_at,
						status: a[s].status,
						gift: a[s].gift,
						pay_type: a[s].pay_type
					})
				}
				this.setData()
			} else
				403 == n.type ? t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN) : (this.get_history_ing = !1,
				this.settleHistoryPanel.history_data = new Array,
				this.setData())
		}
		,
		i.prototype.onGetMoneyListIOError = function(t) {
			this.closeLoading()
		}
		,
		i.prototype.onGetMoneyListProgress = function(t) {}
		,
		i.prototype.close = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			this.settleHistoryPanel.img_close.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.settleHistoryPanel.scroller_history_list.removeEventListener(egret.TouchEvent.TOUCH_MOVE, this.moveListener, this),
			this.settleHistoryPanel.btn_my_history.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.my_history, this),
			this.settleHistoryPanel.btn_my_history.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.money_list, this),
			this.settleHistoryPanel.lb_topup.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.money_list, this),
			this.settleHistoryPanel.lb_withdraw.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.money_list, this),
			this.closePanel(6)
		}
		,
		i.prototype.initData = function() {
			this.total = 0,
			this.settleHistoryPanel.btn_my_history.enabled = !1,
			this.settleHistoryPanel.btn_money_list.enabled = !0,
			this.limit = 20,
			this.page = 1,
			this.settleHistoryPanel.history_data = new Array,
			this.getSettleHistory(),
			this.getCapitalList()
		}
		,
		i.prototype.setData = function() {
			this.settleHistoryPanel.settleHistoryList.dataProvider = new eui.ArrayCollection(this.settleHistoryPanel.history_data),
			1 == this.type ? this.settleHistoryPanel.settleHistoryList.itemRenderer = t.MyClassicalSettleHistoryItem : this.settleHistoryPanel.settleHistoryList.itemRenderer = t.MoneyListItem,
			this.settleHistoryPanel.settleHistoryList.validateNow(),
			this.settleHistoryPanel.scroller_history_list.viewport.scrollV = this.scV
		}
		,
		i.prototype.getCapitalList = function() {
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "capital/getCapital", null, this.onGetCapitalListComplete, this.onGetCapitalListIOError, this.onGetCapitalListProgress, this)
		}
		,
		i.prototype.onGetCapitalListComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_CAPITAL_FOUND)
				this.showCapitalList(n.results);
			else {
				if (403 == n.type)
					return void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				n.message
			}
		}
		,
		i.prototype.onGetCapitalListIOError = function(t) {}
		,
		i.prototype.onGetCapitalListProgress = function(t) {}
		,
		i.prototype.showCapitalList = function(t) {
			if (null != t) {
				this.settleHistoryPanel.group_capital.removeChildren();
				var e = 600 / (t.length + 1)
				  , i = this.settleHistoryPanel.group_capital.height
				  , n = 22
				  , a = new eui.Label;
				a.x = 0,
				a.y = 0,
				a.text = "全部",
				a.height = i,
				a.width = e,
				a.textAlign = "center",
				a.verticalAlign = "middle",
				a.fontFamily = "Microsoft YaHei",
				a.size = n,
				a.name = "all",
				this.settleHistoryPanel.group_capital.addChild(a),
				this.settleHistoryPanel.bg_capital = new eui.Image,
				this.settleHistoryPanel.bg_capital.source = RES.getRes("bg_round_remain_png"),
				this.settleHistoryPanel.bg_capital.width = e,
				this.settleHistoryPanel.bg_capital.height = i,
				this.settleHistoryPanel.bg_capital.x = a.x,
				this.settleHistoryPanel.bg_capital.y = a.y,
				this.settleHistoryPanel.group_capital.addChild(this.settleHistoryPanel.bg_capital),
				this.settleHistoryPanel.group_capital.setChildIndex(this.settleHistoryPanel.bg_capital, 999),
				this.settleHistoryPanel.group_capital.setChildIndex(a, 1e3),
				a.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeCapital, this);
				for (var s = 0; s < t.length; s++) {
					var o = t[s]
					  , r = new eui.Label;
					r.text = o.capital_name,
					"EURUSD" == o.capital_key && (r.text = "欧/美"),
					"GBPUSD" == o.capital_key && (r.text = "镑/美"),
					r.height = i,
					r.width = e,
					r.x = (s + 1) * e,
					r.y = 0,
					r.size = n,
					r.textAlign = "center",
					r.verticalAlign = "middle",
					r.fontFamily = "Microsoft YaHei",
					r.name = o.capital_key,
					this.settleHistoryPanel.group_capital.addChild(r),
					r.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeCapital, this)
				}
			}
		}
		,
		i.prototype.changeCapital = function(t) {
			var e = "";
			"all" != t.currentTarget.name && (e = t.currentTarget.name),
			this.capital != e && (this.settleHistoryPanel.bg_capital.x = this.settleHistoryPanel.group_capital.getChildByName(t.currentTarget.name).x,
			this.capital = e,
			this.settleHistoryPanel.history_data = new Array,
			this.setData(),
			1 == this.type && (this.page = 1,
			this.scV = 0,
			this.getSettleHistory(!0)))
		}
		,
		i.prototype.getSettleHistory = function(t) {
			if (void 0 === t && (t = !1),
			(t || this.settleHistoryPanel.history_data.length != this.total || !(this.total > 0)) && !this.get_history_ing) {
				this.get_history_ing = !0;
				var e = new eui.ArrayCollection;
				null != this.capital && "" != this.capital && e.addItem({
					key: "capital_key",
					value: this.capital
				}),
				e.addItem({
					key: "game_model_type",
					value: 1
				}),
				e.addItem({
					key: "limit",
					value: this.limit
				}),
				e.addItem({
					key: "page",
					value: this.page
				}),
				e.addItem({
					key: "is_sim",
					value: this.is_sim
				}),
				this.showLoading(),
				HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "trade/getMyTradeHistory", e, this.onGetSettleHistoryComplete, this.onGetSettleHistoryIOError, this.onGetSettleHistoryProgress, this)
			}
		}
		,
		i.prototype.onGetSettleHistoryComplete = function(e) {
			this.closeLoading(),
			this.get_history_ing = !1;
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_ROUND_FOUND) {
				var a = n.results.results;
				this.total = n.results.total,
				this.page++;
				for (var s = 0; s < a.length; s++)
					this.settleHistoryPanel.history_data.push(a[s]);
				this.setData()
			} else if (403 == n.type)
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			else {
				n.message;
				this.get_history_ing = !1,
				this.settleHistoryPanel.history_data = new Array,
				this.setData()
			}
		}
		,
		i.prototype.onGetSettleHistoryIOError = function(t) {
			this.closeLoading()
		}
		,
		i.prototype.onGetSettleHistoryProgress = function(t) {}
		,
		i
	}(BaseMediator);
	e.NAME = "MyClassicalSettleHistoryMediator",
	t.MyClassicalSettleHistoryMediator = e,
	__reflect(e.prototype, "game.MyClassicalSettleHistoryMediator");
	var i = function(e) {
		function i() {
			var t = e.call(this) || this;
			return t.addEventListener(eui.UIEvent.COMPLETE, t.uiCompHandler, t),
			t.skinName = "resource/ui/panel/MyClassicalSettleHistoryItemSkin.exml",
			t
		}
		return __extends(i, e),
		i.prototype.uiCompHandler = function() {
			var e = this;
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			this.btn_detail.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				t.AppFacade.getInstance().sendNotification(PanelNotify.MY_CLASSICAL_TRADE_DETAIL, e.data.round_id)
			}, this),
			this.setData()
		}
		,
		i.prototype.dataChanged = function() {
			null != this.lb_num && this.setData()
		}
		,
		i.prototype.setData = function() {
			if (null != this.data) {
				var t = Utils.convertTime(this.data.end_time.toString(), "hhmm");
				this.lb_num.text = t + "期",
				this.lb_capital.text = this.data.capital_name,
				"EURUSD" == this.data.capital_key && (this.lb_capital.text = "欧/美"),
				"GBPUSD" == this.data.capital_key && (this.lb_capital.text = "镑/美");
				var e = this.data.settle_capital_odds;
				if (null != e) {
					e = JSON.parse(e);
					var i = "";
					i = this.data.end_point - this.data.start_point > 0 ? CONST.ODDS_IMG.UP : this.data.end_point - this.data.start_point < 0 ? CONST.ODDS_IMG.DOWN : CONST.ODDS_IMG.FLAT;
					for (var n = 0; n < e.length; n++) {
						var a = e[n]
						  , s = a.order;
						0 != s && 2 != s && (this.img.source = RES.getRes(i),
						1 == s ? (this.lb_1.text = "平",
						this.lb_1.textColor = 16777215,
						this.lb_2.text = "x30") : 3 == s ? (this.lb_1.text = "涨单",
						this.lb_2.text = "单",
						this.lb_1.textColor = 16516871) : 4 == s ? (this.lb_1.text = "涨双",
						this.lb_2.text = "双",
						this.lb_1.textColor = 16516871) : 5 == s ? (this.lb_1.text = "跌单",
						this.lb_2.text = "单",
						this.lb_1.textColor = 372004) : 6 == s && (this.lb_1.text = "跌双",
						this.lb_2.text = "双",
						this.lb_1.textColor = 372004))
					}
				}
				this.lb_close.text = this.data.end_point,
				this.lb_trade_amount.text = Utils.moneyFormat(this.data.trade_amount, 2).toString(),
				parseFloat(this.data.profit) > parseFloat(this.data.trade_amount) ? (this.lb_profit.textColor = 16516871,
				this.lb_profit.text = "+" + Utils.moneyFormat(this.data.profit, 2).toString()) : (this.lb_profit.textColor = 16516871,
				this.data.profit > 0 ? this.lb_profit.text = "+" + Utils.moneyFormat(Math.abs(this.data.profit), 2) : (this.lb_profit.textColor = 16777215,
				this.lb_profit.text = "0"))
			}
		}
		,
		i
	}(eui.ItemRenderer);
	t.MyClassicalSettleHistoryItem = i,
	__reflect(i.prototype, "game.MyClassicalSettleHistoryItem");
	var n = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/MoneyListItemSkin.exml",
			e
		}
		return __extends(e, t),
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			this.setData()
		}
		,
		e.prototype.dataChanged = function() {
			null != this.lb_type && this.setData()
		}
		,
		e.prototype.setData = function() {
			if (null != this.data) {
				var t = this.data.product_type
				  , e = this.data.order_price
				  , i = this.data.order_amount
				  , n = this.data.created_at
				  , a = this.data.status
				  , s = this.data.gift
				  , o = this.data.pay_type;
				"G" == t ? (this.lb_amount.text = parseFloat(e).toString(),
				2 == a ? (this.lb_status.text = "充值成功",
				this.lb_status.textColor = 16001316) : (this.lb_status.text = "充值失败",
				this.lb_status.textColor = 16777215),
				1 == o ? this.lb_type.text = "微信支付" : this.lb_type.text = "支付宝支付") : "T" == t ? (this.lb_amount.text = parseFloat(i).toString(),
				4 == a ? (this.lb_status.text = "等待审核",
				this.lb_status.textColor = 16777215) : 5 == a ? (this.lb_status.text = "提现成功",
				this.lb_status.textColor = 16001316) : 6 == a && (this.lb_status.text = "提现失败",
				this.lb_status.textColor = 16777215),
				this.lb_type.text = "微信红包") : "Z" == t && (this.lb_amount.text = parseFloat(s).toString(),
				2 == a ? (this.lb_status.text = "充值成功",
				this.lb_status.textColor = 16001316) : (this.lb_status.text = "充值失败",
				this.lb_status.textColor = 16777215),
				this.lb_type.text = "充值赠金"),
				this.lb_time.text = Utils.convertTime(n, "Y-m-d H:i:s")
			}
		}
		,
		e
	}(eui.ItemRenderer);
	t.MoneyListItem = n,
	__reflect(n.prototype, "game.MoneyListItem")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i(n) {
			void 0 === n && (n = null);
			var a = e.call(this, i.NAME, n) || this;
			return a.limit = 20,
			a.page = 1,
			a.total = 0,
			a.get_history_ing = !1,
			a.scV = 0,
			a.type = 1,
			a.capital = "",
			a.settleHistoryPanel = t.MySettleHistoryPanel.getInstance(),
			a
		}
		return __extends(i, e),
		i.prototype.listNotificationInterests = function() {
			return [PanelNotify.OPEN_MY_SETTLE_HISTORY, PanelNotify.CLOSE_MY_SETTLE_HISTORY, PanelNotify.MY_TRADE_DETAIL]
		}
		,
		i.prototype.handleNotification = function(t) {
			var e = t.getBody();
			switch (t.getName()) {
			case PanelNotify.OPEN_MY_SETTLE_HISTORY:
				this.showUI(this.settleHistoryPanel, !0, 0, 0, 5);
				break;
			case PanelNotify.CLOSE_MY_SETTLE_HISTORY:
				this.closePanel(6);
				break;
			case PanelNotify.MY_TRADE_DETAIL:
				this.getMyTradeDetail(e)
			}
		}
		,
		i.prototype.showLoading = function() {
			null == this.settleHistoryPanel.loading_image && (this.settleHistoryPanel.loading_image = new eui.Image),
			this.settleHistoryPanel.loading_image.verticalCenter = .5,
			this.settleHistoryPanel.loading_image.horizontalCenter = .5,
			this.settleHistoryPanel.loading_image.source = RES.getRes("loading_run_png"),
			this.settleHistoryPanel.loading_image.anchorOffsetX = .5 * this.settleHistoryPanel.loading_image.width,
			this.settleHistoryPanel.loading_image.anchorOffsetY = .5 * this.settleHistoryPanel.loading_image.height,
			this.settleHistoryPanel.addChild(this.settleHistoryPanel.loading_image),
			this.settleHistoryPanel.addEventListener(egret.Event.ENTER_FRAME, this.runLoading, this)
		}
		,
		i.prototype.runLoading = function(t) {
			this.settleHistoryPanel.loading_image.rotation += 3
		}
		,
		i.prototype.closeLoading = function() {
			this.settleHistoryPanel.contains(this.settleHistoryPanel.loading_image) && this.settleHistoryPanel.removeChild(this.settleHistoryPanel.loading_image),
			this.settleHistoryPanel.removeEventListener(egret.Event.ENTER_FRAME, this.runLoading, this)
		}
		,
		i.prototype.getMyTradeDetail = function(t) {
			this.showLoading();
			var e = new eui.ArrayCollection;
			e.addItem({
				key: "round_id",
				value: t
			}),
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "trade/getMyTradeHistoryDetail", e, this.onMyTradeDetailComplete, this.onMyTradeDetailIOError, this.onMyTradeDetailProgress, this)
		}
		,
		i.prototype.onMyTradeDetailComplete = function(e) {
			this.closeLoading();
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_TRADE_FOUND)
				this.showDetail(n.results);
			else if (403 == n.type)
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			else {
				var a = n.message;
				Toast.launch(a, -100)
			}
		}
		,
		i.prototype.showDetail = function(t) {
			if (this.settleHistoryPanel.scroller_my_trade.viewport.scrollV = 0,
			null != t) {
				egret.Tween.get(this.settleHistoryPanel.group_list, {
					loop: !1
				}).to({
					x: -1 * this.settleHistoryPanel.group_list.width
				}, 300),
				this.settleHistoryPanel.group_detail.visible = !0,
				this.settleHistoryPanel.group_detail.x = 719,
				egret.Tween.get(this.settleHistoryPanel.group_detail, {
					loop: !1
				}).to({
					x: 0
				}, 300);
				var e = t.round;
				if (null != e) {
					var i = Utils.convertTime(e.end_time.toString(), "hhmm");
					this.settleHistoryPanel.lb_qishu.text = i + "期",
					this.settleHistoryPanel.lb_capital.text = e.capital_name,
					this.settleHistoryPanel.lb_open_price.text = e.start_point,
					this.settleHistoryPanel.lb_close_price.text = e.end_point;
					var n = e.end_point - e.start_point
					  , a = Utils.getRoundPoint(e.start_point);
					"BTCCNY" == e.capital_key ? this.settleHistoryPanel.img_capital.source = RES.getRes("icon_btccny_png") : "EURUSD" == e.capital_key ? this.settleHistoryPanel.img_capital.source = RES.getRes("icon_eurusd_png") : "XAUUSD" == e.capital_key ? this.settleHistoryPanel.img_capital.source = RES.getRes("icon_xauusd_png") : "GBPUSD" == e.capital_key ? this.settleHistoryPanel.img_capital.source = RES.getRes("icon_gbpusd_png") : "LTCCNY" == e.capital_key && (this.settleHistoryPanel.img_capital.source = RES.getRes("icon_ltccny_png")),
					this.settleHistoryPanel.img_capital.x = this.settleHistoryPanel.lb_capital.x + this.settleHistoryPanel.lb_capital.width + 30,
					"BTCCNY" == e.capital_key ? n = parseFloat(n.toFixed(a)) : (n *= Math.pow(10, a),
					n = Math.round(n)),
					n > 0 ? this.settleHistoryPanel.lb_point_diff.textColor = 16516871 : 0 > n ? this.settleHistoryPanel.lb_point_diff.textColor = 372004 : this.settleHistoryPanel.lb_point_diff.textColor = 16250100,
					this.settleHistoryPanel.lb_point_diff.text = n.toString(),
					this.settleHistoryPanel.lb_total_bet.text = Utils.moneyFormat(t.total_bet_amount, 2).toString(),
					this.settleHistoryPanel.lb_total_person.text = t.total_bet_person + "人";
					var s = e.settle_capital_odds;
					if (null != s) {
						s = JSON.parse(s);
						var o = "";
						o = e.end_point - e.start_point > 0 ? CONST.ODDS_IMG.UP : e.end_point - e.start_point < 0 ? CONST.ODDS_IMG.DOWN : CONST.ODDS_IMG.FLAT;
						var r = new eui.Group;
						r.x = this.settleHistoryPanel.lb_settle_result.width + this.settleHistoryPanel.lb_settle_result.x + 20,
						r.y = this.settleHistoryPanel.lb_settle_result.y,
						r.name = "settle_result_group",
						this.settleHistoryPanel.group_detail.addChild(r);
						for (var l = 0; l < s.length; l++) {
							var h = new eui.Image
							  , d = new eui.Label;
							h.width = 55,
							h.height = 31,
							h.source = RES.getRes(o),
							h.y = 0,
							0 == l ? h.x = 0 : 1 == l && (h.x = 60);
							var _ = s[l]
							  , p = _.odds;
							_.id;
							p = parseFloat(parseFloat(p.toString()).toFixed(2)),
							d.text = "X" + p.toString(),
							d.fontFamily = "lgzbFont",
							d.textColor = 16113323,
							d.stroke = 1,
							d.strokeColor = 789259,
							d.size = 15,
							d.x = h.x + (h.width - d.width) / 2,
							d.y = h.y + 5,
							r.addChild(h),
							r.addChild(d)
						}
						for (var u = t.my_trades, g = (t.banker_trade_detail,
						0), c = 0, m = 0; m < u.length; m++) {
							var y = u[m]
							  , v = Utils.moneyFormat(y.trade_amount, 2).toString()
							  , b = Utils.moneyFormat(y.profit, 2).toString();
							g += parseFloat(y.profit);
							var f = y.display
							  , p = y.odds
							  , C = y.order
							  , T = new eui.Label;
							T.text = f,
							T.y = c,
							T.size = 25,
							T.width = 100,
							T.x = -5,
							T.textAlign = "center",
							2 == C || C > 6 ? T.textColor = 5169700 : (0 == C || C > 2 && 7 > C) && (T.textColor = 16001316),
							this.settleHistoryPanel.group_my_trade.addChild(T);
							var S = new eui.Label;
							S.text = parseFloat(p) + "倍",
							S.y = c,
							S.width = 100,
							S.size = 25,
							S.x = 120,
							S.textAlign = "center",
							this.settleHistoryPanel.group_my_trade.addChild(S);
							var E = new eui.Label;
							E.text = v,
							E.y = c,
							E.size = 25,
							E.width = 120,
							E.x = 290,
							E.textAlign = "center",
							this.settleHistoryPanel.group_my_trade.addChild(E);
							var w = new eui.Label;
							"0" != b ? (w.textColor = 16001316,
							w.text = "+" + b) : (w.textColor = 16777215,
							w.text = b),
							w.y = c,
							w.fontFamily = "Microsoft YaHei",
							w.size = 25,
							w.width = 140,
							w.x = 470,
							w.textAlign = "center",
							this.settleHistoryPanel.group_my_trade.addChild(w),
							c = c + T.height + 10
						}
						if (g > 0 ? this.settleHistoryPanel.lb_my_total_profit.text = "+" + Utils.moneyFormat(g, 2) : this.settleHistoryPanel.lb_my_total_profit.text = Utils.moneyFormat(g, 2).toString(),
						null != t.banker) {
							var I = t.banker.net_profit;
							0 > I ? (this.settleHistoryPanel.lb_banker_total_profit.textColor = 5169700,
							I = "-" + Utils.moneyFormat(Math.abs(I), 2)) : (this.settleHistoryPanel.lb_banker_total_profit.textColor = 16001316,
							I = "+" + Utils.moneyFormat(I, 2)),
							this.settleHistoryPanel.lb_banker_total_profit.text = I
						}
					}
				}
			}
		}
		,
		i.prototype.showList = function() {
			this.settleHistoryPanel.group_detail.contains(this.settleHistoryPanel.group_detail.getChildByName("settle_res_group")) && this.settleHistoryPanel.group_detail.removeChild(this.settleHistoryPanel.group_detail.getChildByName("settle_res_group")),
			this.settleHistoryPanel.group_my_trade.removeChildren();
			var t = this;
			egret.Tween.get(this.settleHistoryPanel.group_detail, {
				loop: !1
			}).to({
				x: 719
			}, 300).call(function() {
				t.settleHistoryPanel.group_detail.visible = !1
			}),
			egret.Tween.get(this.settleHistoryPanel.group_list, {
				loop: !1
			}).to({
				x: 0
			}, 300)
		}
		,
		i.prototype.onMyTradeDetailIOError = function(t) {
			this.closeLoading()
		}
		,
		i.prototype.onMyTradeDetailProgress = function(t) {}
		,
		i.prototype.initUI = function() {
			this.scV = 0,
			this.type = 1,
			this.settleHistoryPanel.group_my_title.visible = !0,
			this.settleHistoryPanel.group_banker_title.visible = !1,
			this.settleHistoryPanel.settleHistoryList.useVirtualLayout = !1,
			this.settleHistoryPanel.img_close.addEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.settleHistoryPanel.img_detail_close.addEventListener(egret.TouchEvent.TOUCH_TAP, this.showList, this),
			this.settleHistoryPanel.scroller_history_list.addEventListener(egret.TouchEvent.TOUCH_MOVE, this.moveListener, this),
			this.settleHistoryPanel.btn_my_history.addEventListener(egret.TouchEvent.TOUCH_TAP, this.my_history, this),
			this.settleHistoryPanel.btn_banker_profit.addEventListener(egret.TouchEvent.TOUCH_TAP, this.banker_profit, this)
		}
		,
		i.prototype.moveListener = function() {
			1 == this.type && this.settleHistoryPanel.scroller_history_list.viewport.scrollV + this.settleHistoryPanel.scroller_history_list.height >= this.settleHistoryPanel.scroller_history_list.viewport.contentHeight - 5 && this.total > 0 && (this.scV = this.settleHistoryPanel.scroller_history_list.viewport.scrollV,
			this.getSettleHistory())
		}
		,
		i.prototype.my_history = function() {
			this.capital = "",
			this.settleHistoryPanel.bg_capital.x = 0,
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			this.settleHistoryPanel.btn_my_history.enabled = !1,
			this.settleHistoryPanel.btn_banker_profit.enabled = !0,
			this.scV = 0,
			this.type = 1,
			this.total = 0,
			this.settleHistoryPanel.group_my_title.visible = !0,
			this.settleHistoryPanel.group_banker_title.visible = !1,
			this.settleHistoryPanel.history_data = new Array,
			this.setData(),
			this.page = 1,
			this.limit = 20,
			this.getSettleHistory()
		}
		,
		i.prototype.banker_profit = function() {
			this.capital = "",
			this.settleHistoryPanel.bg_capital.x = 0,
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			this.settleHistoryPanel.btn_my_history.enabled = !0,
			this.settleHistoryPanel.btn_banker_profit.enabled = !1,
			this.settleHistoryPanel.group_my_title.visible = !1,
			this.settleHistoryPanel.group_banker_title.visible = !0,
			this.type = 2,
			this.settleHistoryPanel.history_data = new Array,
			this.setData(),
			this.getBankerTradeHistory()
		}
		,
		i.prototype.close = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			this.settleHistoryPanel.img_close.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.settleHistoryPanel.scroller_history_list.removeEventListener(egret.TouchEvent.TOUCH_MOVE, this.moveListener, this),
			this.settleHistoryPanel.btn_my_history.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.my_history, this),
			this.settleHistoryPanel.btn_banker_profit.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.banker_profit, this),
			this.closePanel(6)
		}
		,
		i.prototype.initData = function() {
			this.settleHistoryPanel.btn_my_history.enabled = !1,
			this.settleHistoryPanel.btn_banker_profit.enabled = !0,
			this.limit = 20,
			this.page = 1,
			this.settleHistoryPanel.history_data = new Array,
			this.getSettleHistory(),
			this.getCapitalList()
		}
		,
		i.prototype.setData = function() {
			this.settleHistoryPanel.settleHistoryList.dataProvider = new eui.ArrayCollection(this.settleHistoryPanel.history_data),
			1 == this.type ? (this.settleHistoryPanel.settleHistoryList.itemRenderer = t.MySettleHistoryItem,
			this.settleHistoryPanel.settleHistoryList.validateNow(),
			this.settleHistoryPanel.scroller_history_list.viewport.scrollV = this.scV) : this.settleHistoryPanel.settleHistoryList.itemRenderer = t.BankerTradeHistoryItem
		}
		,
		i.prototype.getCapitalList = function() {
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "capital/getCapital", null, this.onGetCapitalListComplete, this.onGetCapitalListIOError, this.onGetCapitalListProgress, this)
		}
		,
		i.prototype.onGetCapitalListComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_CAPITAL_FOUND)
				this.showCapitalList(n.results);
			else {
				if (403 == n.type)
					return void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				n.message
			}
		}
		,
		i.prototype.onGetCapitalListIOError = function(t) {}
		,
		i.prototype.onGetCapitalListProgress = function(t) {}
		,
		i.prototype.showCapitalList = function(t) {
			if (null != t) {
				this.settleHistoryPanel.group_capital.removeChildren();
				var e = 600 / (t.length + 1)
				  , i = this.settleHistoryPanel.group_capital.height
				  , n = 22
				  , a = new eui.Label;
				a.x = 0,
				a.y = 0,
				a.text = "全部",
				a.height = i,
				a.width = e,
				a.textAlign = "center",
				a.verticalAlign = "middle",
				a.fontFamily = "Microsoft YaHei",
				a.size = n,
				a.name = "all",
				this.settleHistoryPanel.group_capital.addChild(a),
				this.settleHistoryPanel.bg_capital = new eui.Image,
				this.settleHistoryPanel.bg_capital.source = RES.getRes("bg_round_remain_png"),
				this.settleHistoryPanel.bg_capital.width = e,
				this.settleHistoryPanel.bg_capital.height = i,
				this.settleHistoryPanel.bg_capital.x = a.x,
				this.settleHistoryPanel.bg_capital.y = a.y,
				this.settleHistoryPanel.group_capital.addChild(this.settleHistoryPanel.bg_capital),
				this.settleHistoryPanel.group_capital.setChildIndex(this.settleHistoryPanel.bg_capital, 999),
				this.settleHistoryPanel.group_capital.setChildIndex(a, 1e3),
				a.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeCapital, this);
				for (var s = 0; s < t.length; s++) {
					var o = t[s]
					  , r = new eui.Label;
					r.text = o.capital_name,
					"EURUSD" == o.capital_key && (r.text = "欧/美"),
					"GBPUSD" == o.capital_key && (r.text = "镑/美"),
					r.height = i,
					r.width = e,
					r.x = (s + 1) * e,
					r.y = 0,
					r.size = n,
					r.textAlign = "center",
					r.verticalAlign = "middle",
					r.fontFamily = "Microsoft YaHei",
					r.name = o.capital_key,
					this.settleHistoryPanel.group_capital.addChild(r),
					r.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeCapital, this)
				}
			}
		}
		,
		i.prototype.changeCapital = function(t) {
			var e = "";
			"all" != t.currentTarget.name && (e = t.currentTarget.name),
			this.capital != e && (this.settleHistoryPanel.bg_capital.x = this.settleHistoryPanel.group_capital.getChildByName(t.currentTarget.name).x,
			this.capital = e,
			this.settleHistoryPanel.history_data = new Array,
			this.setData(),
			1 == this.type ? (this.page = 1,
			this.scV = 0,
			this.getSettleHistory(!0)) : this.getBankerTradeHistory())
		}
		,
		i.prototype.getSettleHistory = function(t) {
			if (void 0 === t && (t = !1),
			(t || this.settleHistoryPanel.history_data.length != this.total || !(this.total > 0)) && !this.get_history_ing) {
				this.get_history_ing = !0;
				var e = new eui.ArrayCollection;
				null != this.capital && "" != this.capital && e.addItem({
					key: "capital_key",
					value: this.capital
				}),
				e.addItem({
					key: "limit",
					value: this.limit
				}),
				e.addItem({
					key: "page",
					value: this.page
				}),
				this.showLoading(),
				HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "trade/getMyTradeHistory", e, this.onGetSettleHistoryComplete, this.onGetSettleHistoryIOError, this.onGetSettleHistoryProgress, this)
			}
		}
		,
		i.prototype.onGetSettleHistoryComplete = function(e) {
			this.closeLoading(),
			this.get_history_ing = !1;
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_ROUND_FOUND) {
				var a = n.results.results;
				this.total = n.results.total,
				this.page++;
				for (var s = 0; s < a.length; s++)
					this.settleHistoryPanel.history_data.push(a[s]);
				this.setData()
			} else if (403 == n.type)
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			else {
				n.message;
				this.get_history_ing = !1,
				this.settleHistoryPanel.history_data = new Array,
				this.setData()
			}
		}
		,
		i.prototype.onGetSettleHistoryIOError = function(t) {
			this.closeLoading()
		}
		,
		i.prototype.onGetSettleHistoryProgress = function(t) {}
		,
		i.prototype.getBankerTradeHistory = function() {
			this.showLoading();
			var t = null;
			null != this.capital && "" != this.capital && (t = new eui.ArrayCollection,
			t.addItem({
				key: "capital_key",
				value: this.capital
			})),
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "trade/getBankerTradeHistory", t, this.onGetBankerTradeHistoryComplete, this.onGetBankerTradeHistoryIOError, this.onGetBankerTradeHistoryProgress, this)
		}
		,
		i.prototype.onGetBankerTradeHistoryComplete = function(e) {
			this.closeLoading();
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_ROUND_FOUND) {
				var a = n.results.results;
				this.total = n.results.total,
				this.settleHistoryPanel.history_data = new Array;
				for (var s = 0; s < a.length; s++)
					this.settleHistoryPanel.history_data.push(a[s]);
				this.setData()
			} else if (403 == n.type)
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			else {
				n.message;
				this.settleHistoryPanel.history_data = new Array,
				this.setData()
			}
		}
		,
		i.prototype.onGetBankerTradeHistoryIOError = function(t) {
			this.closeLoading()
		}
		,
		i.prototype.onGetBankerTradeHistoryProgress = function(t) {}
		,
		i
	}(BaseMediator);
	e.NAME = "MySettleHistoryMediator",
	t.MySettleHistoryMediator = e,
	__reflect(e.prototype, "game.MySettleHistoryMediator");
	var i = function(e) {
		function i() {
			var t = e.call(this) || this;
			return t.addEventListener(eui.UIEvent.COMPLETE, t.uiCompHandler, t),
			t.skinName = "resource/ui/panel/MySettleHistoryItemSkin.exml",
			t
		}
		return __extends(i, e),
		i.prototype.uiCompHandler = function() {
			var e = this;
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			this.btn_detail.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				t.AppFacade.getInstance().sendNotification(PanelNotify.MY_TRADE_DETAIL, e.data.round_id)
			}, this),
			this.setData()
		}
		,
		i.prototype.dataChanged = function() {
			null != this.lb_num && this.setData()
		}
		,
		i.prototype.setData = function() {
			if (null != this.data) {
				var t = Utils.convertTime(this.data.end_time.toString(), "hhmm");
				this.lb_num.text = t + "期",
				this.lb_capital.text = this.data.capital_name,
				"EURUSD" == this.data.capital_key && (this.lb_capital.text = "欧/美"),
				"GBPUSD" == this.data.capital_key && (this.lb_capital.text = "镑/美");
				var e = this.data.settle_capital_odds;
				if (null != e) {
					e = JSON.parse(e);
					var i = "";
					i = this.data.end_point - this.data.start_point > 0 ? CONST.ODDS_IMG.UP : this.data.end_point - this.data.start_point < 0 ? CONST.ODDS_IMG.DOWN : CONST.ODDS_IMG.FLAT;
					var n = this.group_settle.getChildByName("mh_odds_img_1")
					  , a = this.group_settle.getChildByName("mh_lb_odds_1");
					n && this.group_settle.removeChild(n),
					a && this.group_settle.removeChild(a);
					for (var s = 0; s < e.length; s++) {
						var o = new eui.Image
						  , r = new eui.Label;
						o.name = "mh_odds_img_" + s,
						r.name = "mh_lb_odds_" + s,
						o.width = 45,
						o.height = 25,
						o.source = RES.getRes(i),
						o.y = 3.5,
						1 == e.length ? o.x = (this.group_settle.width - o.width) / 2 : 2 == e.length && (0 == s ? o.x = (this.group_settle.width - (2 * o.width + 5)) / 2 : 1 == s && (o.x = (this.group_settle.width - (2 * o.width + 5)) / 2 + o.width + 5));
						var l = e[s]
						  , h = l.odds;
						h = parseFloat(parseFloat(h.toString()).toFixed(2)),
						r.text = "X" + h.toString(),
						r.fontFamily = "lgzbFont",
						r.textColor = 16113323,
						r.stroke = 1,
						r.strokeColor = 789259,
						r.size = 14,
						r.x = o.x + (o.width - r.width) / 2,
						r.y = o.y + 4,
						this.group_settle.addChild(o),
						this.group_settle.addChild(r)
					}
				}
				this.lb_trade_amount.text = Utils.moneyFormat(this.data.trade_amount, 2).toString(),
				parseFloat(this.data.profit) > parseFloat(this.data.trade_amount) ? (this.lb_profit.textColor = 16516871,
				this.lb_profit.text = "+" + Utils.moneyFormat(this.data.profit, 2)) : (this.lb_profit.textColor = 16516871,
				this.data.profit > 0 ? this.lb_profit.text = "+" + Utils.moneyFormat(Math.abs(this.data.profit), 2) : (this.lb_profit.textColor = 16777215,
				this.lb_profit.text = "0"))
			}
		}
		,
		i
	}(eui.ItemRenderer);
	t.MySettleHistoryItem = i,
	__reflect(i.prototype, "game.MySettleHistoryItem");
	var n = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/BankerTradeHistoryItemSkin.exml",
			e
		}
		return __extends(e, t),
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			this.setData()
		}
		,
		e.prototype.dataChanged = function() {
			null != this.lb_num && this.setData()
		}
		,
		e.prototype.setData = function() {
			if (null != this.data) {
				var t = Utils.convertTime(this.data.end_time.toString(), "hhmm");
				this.lb_num.text = t + "期",
				this.lb_capital.text = this.data.capital_name,
				"EURUSD" == this.data.capital_key && (this.lb_capital.text = "欧/美"),
				"GBPUSD" == this.data.capital_key && (this.lb_capital.text = "镑/美"),
				this.lb_banker.text = this.data.name;
				var e = this.data.settle_capital_odds;
				if (null != e) {
					e = JSON.parse(e);
					var i = "";
					i = this.data.end_point - this.data.start_point > 0 ? CONST.ODDS_IMG.UP : this.data.end_point - this.data.start_point < 0 ? CONST.ODDS_IMG.DOWN : CONST.ODDS_IMG.FLAT;
					for (var n = 0; n < e.length; n++) {
						var a = new eui.Image
						  , s = new eui.Label;
						a.width = 45,
						a.height = 25,
						a.source = RES.getRes(i),
						a.y = 3.5,
						1 == e.length ? a.x = (this.group_settle.width - a.width) / 2 : 2 == e.length && (0 == n ? a.x = (this.group_settle.width - (2 * a.width + 5)) / 2 : 1 == n && (a.x = (this.group_settle.width - (2 * a.width + 5)) / 2 + a.width + 5));
						var o = e[n]
						  , r = o.odds;
						r = parseFloat(parseFloat(r.toString()).toFixed(2)),
						s.text = "X" + r.toString(),
						s.fontFamily = "lgzbFont",
						s.textColor = 16113323,
						s.stroke = 1,
						s.strokeColor = 789259,
						s.size = 14,
						s.x = a.x + (a.width - s.width) / 2,
						s.y = a.y + 4,
						this.group_settle.addChild(a),
						this.group_settle.addChild(s)
					}
				}
				"Y" == this.data.is_win ? parseFloat(this.data.profit) > 0 ? (this.lb_profit.textColor = 16516871,
				this.lb_profit.text = "+" + Utils.moneyFormat(this.data.profit, 2)) : (this.lb_profit.textColor = 16777215,
				this.lb_profit.text = Utils.moneyFormat(this.data.profit, 2).toString()) : (this.lb_profit.text = "-" + Utils.moneyFormat(Math.abs(this.data.profit), 2),
				this.lb_profit.textColor = 372004),
				parseFloat(this.data.profit) + parseFloat(this.data.trade_amount) <= 0 ? this.img_burst.visible = !0 : this.img_burst.visible = !1
			}
		}
		,
		e
	}(eui.ItemRenderer);
	t.BankerTradeHistoryItem = n,
	__reflect(n.prototype, "game.BankerTradeHistoryItem")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i(n) {
			void 0 === n && (n = null);
			var a = e.call(this, i.NAME, n) || this;
			return a.closeCallback = null,
			a.registerRewardPanel = t.RegisterRewardPanel.getInstance(),
			a
		}
		return __extends(i, e),
		i.prototype.listNotificationInterests = function() {
			return [PanelNotify.OPEN_REGISTER_REWARD]
		}
		,
		i.prototype.handleNotification = function(t) {
			var e = t.getBody();
			switch (null != e.closeCallback && (this.closeCallback = e.closeCallback),
			t.getName()) {
			case PanelNotify.OPEN_REGISTER_REWARD:
				this.showUI(this.registerRewardPanel, !0, 0, 0, 5)
			}
		}
		,
		i.prototype.initUI = function() {
			var e = this;
			this.registerRewardPanel.group.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
				e.getRegisterReward()
			}, this)
		}
		,
		i.prototype.getRegisterReward = function() {
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "type",
				value: 1
			})
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "user/getTaskReward", t, this.onGetSalaryComplete, this.onGetSalaryIOError, this.onGetSalaryProgress, this)
		}
		,
		i.prototype.onGetSalaryComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_GET_REWARD_SUCCESS) {
				var a = this;
				a.closePanel(6);
				var s = Array();
				s.game_model_type = 1,
				s.game_room_id = 9,
				s.capital = "BTCCNY",
				s.is_sim = "Y",
				t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_CLASSICAL_SIM, s)
			} else {
				if (403 == n.type)
					return void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				var o = n.message;
				Toast.launch(o, -100),
				this.closePanel(6),
				null != this.closeCallback && this.closeCallback()
			}
		}
		,
		i.prototype.onGetSalaryIOError = function(t) {}
		,
		i.prototype.onGetSalaryProgress = function(t) {}
		,
		i.prototype.getEwallet = function() {
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "ewallet_type",
				value: "G"
			})
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + API.balance, t, this.onGetEwalletComplete, this.onGetEwalletIOError, this.onGetEwalletProgress, this)
		}
		,
		i.prototype.onGetEwalletComplete = function(e) {
			debugger
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_EWALLET_FOUND) {
				var a = n.results
				  , s = a.balance
				  , o = {
					gold_amount: s
				};
				t.AppFacade.getInstance().sendNotification(MainNotify.UPDATE_HEADER_EWALLET, o)
			} else {
				if (403 == n.type)
					return void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				n.message
			}
		}
		,
		i.prototype.onGetEwalletIOError = function(t) {}
		,
		i.prototype.onGetEwalletProgress = function(t) {}
		,
		i
	}(BaseMediator);
	e.NAME = "RegisterRewardMediator",
	t.RegisterRewardMediator = e,
	__reflect(e.prototype, "game.RegisterRewardMediator")
}(game || (game = {}));
var GameConfig = function() {
	function t() {}
	return t.curStage = function() {
		return egret.MainContext.instance.stage
	}
	,
	t.curWidth = function() {
		return egret.MainContext.instance.stage.stageWidth
	}
	,
	t.curHeight = function() {
		return egret.MainContext.instance.stage.stageHeight
	}
	,
	t
}();
GameConfig.API_ADDRESS = "/",
GameConfig.API_BASE_LINK = "/api/",
GameConfig.SOCKET_HOST = "47.94.43.120",
GameConfig.SOCKET_PORT = "7899",
GameConfig.VERSION = "2.1.11",
__reflect(GameConfig.prototype, "GameConfig");
var game;
!function(t) {
	var e = function(e) {
		function i(n) {
			void 0 === n && (n = null);
			var a = e.call(this, i.NAME, n) || this;
			return a.limit = 20,
			a.page = 1,
			a.total = 0,
			a.get_history_ing = !1,
			a.scV = 0,
			a.capital = "",
			a.settleHistoryPanel = t.SettleHistoryPanel.getInstance(),
			a
		}
		return __extends(i, e),
		i.prototype.listNotificationInterests = function() {
			return [PanelNotify.OPEN_SETTLE_HISTORY, PanelNotify.CLOSE_SETTLE_HISTORY]
		}
		,
		i.prototype.handleNotification = function(t) {
			var e = t.getBody();
			switch (t.getName()) {
			case PanelNotify.OPEN_SETTLE_HISTORY:
				this.capital = e.capital,
				this.showUI(this.settleHistoryPanel, !0, 0, 0, 5);
				break;
			case PanelNotify.CLOSE_SETTLE_HISTORY:
				this.closePanel(6)
			}
		}
		,
		i.prototype.showLoading = function() {
			null == this.settleHistoryPanel.loading_image && (this.settleHistoryPanel.loading_image = new eui.Image),
			this.settleHistoryPanel.loading_image.verticalCenter = .5,
			this.settleHistoryPanel.loading_image.horizontalCenter = .5,
			this.settleHistoryPanel.loading_image.source = RES.getRes("loading_run_png"),
			this.settleHistoryPanel.loading_image.anchorOffsetX = .5 * this.settleHistoryPanel.loading_image.width,
			this.settleHistoryPanel.loading_image.anchorOffsetY = .5 * this.settleHistoryPanel.loading_image.height,
			this.settleHistoryPanel.addChild(this.settleHistoryPanel.loading_image),
			this.settleHistoryPanel.addEventListener(egret.Event.ENTER_FRAME, this.runLoading, this)
		}
		,
		i.prototype.runLoading = function(t) {
			this.settleHistoryPanel.loading_image.rotation += 3
		}
		,
		i.prototype.closeLoading = function() {
			this.settleHistoryPanel.contains(this.settleHistoryPanel.loading_image) && this.settleHistoryPanel.removeChild(this.settleHistoryPanel.loading_image),
			this.settleHistoryPanel.removeEventListener(egret.Event.ENTER_FRAME, this.runLoading, this)
		}
		,
		i.prototype.getCapitalList = function() {
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "capital/getCapital", null, this.onGetCapitalListComplete, this.onGetCapitalListIOError, this.onGetCapitalListProgress, this)
		}
		,
		i.prototype.onGetCapitalListComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_CAPITAL_FOUND)
				this.showCapitalList(n.results);
			else {
				if (403 == n.type)
					return void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				n.message
			}
		}
		,
		i.prototype.onGetCapitalListIOError = function(t) {}
		,
		i.prototype.onGetCapitalListProgress = function(t) {}
		,
		i.prototype.getCapitalOddsList = function() {
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "game_model_type",
				value: 2
			})
			t.addItem({
				key: "capital_key",
				value: this.capital
			})
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "trade/getCapitalOdds", t, this.onGetCapitalOddsListComplete, this.onGetCapitalOddsListIOError, this.onGetCapitalOddsListProgress, this)
		}
		,
		i.prototype.onGetCapitalOddsListComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_CAPITAL_ODDS_FOUND)
				this.capital_odds = n.results,
				this.initIntervalOdds();
			else {
				if (403 == n.type)
					return void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				var a = n.message;
				Toast.launch(a, -100)
			}
		}
		,
		i.prototype.onGetCapitalOddsListIOError = function(t) {}
		,
		i.prototype.onGetCapitalOddsListProgress = function(t) {}
		,
		i.prototype.initUI = function() {
			this.scV = 0,
			this.settleHistoryPanel.settleHistoryList.useVirtualLayout = !1,
			this.settleHistoryPanel.img_close.addEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.settleHistoryPanel.scroller_history_list.addEventListener(egret.TouchEvent.TOUCH_MOVE, this.moveListener, this)
		}
		,
		i.prototype.initData = function() {
			this.getCapitalList(),
			this.getCapitalOddsList(),
			this.limit = 20,
			this.page = 1,
			this.settleHistoryPanel.history_data = new Array,
			this.getSettleHistory()
		}
		,
		i.prototype.showCapitalList = function(t) {
			if (null != t) {
				this.settleHistoryPanel.group_capital.removeChildren();
				var e = 600 / t.length
				  , i = this.settleHistoryPanel.group_capital.height
				  , n = 22;
				this.settleHistoryPanel.bg_capital = new eui.Image,
				this.settleHistoryPanel.bg_capital.source = RES.getRes("bg_round_remain_png"),
				this.settleHistoryPanel.bg_capital.width = e,
				this.settleHistoryPanel.bg_capital.height = i,
				this.settleHistoryPanel.group_capital.addChild(this.settleHistoryPanel.bg_capital),
				this.settleHistoryPanel.group_capital.setChildIndex(this.settleHistoryPanel.bg_capital, 999);
				for (var a = 0; a < t.length; a++) {
					var s = t[a]
					  , o = new eui.Label;
					o.text = s.capital_name,
					"EURUSD" == s.capital_key && (o.text = "欧/美"),
					"GBPUSD" == s.capital_key && (o.text = "镑/美"),
					o.height = i,
					o.width = e,
					o.x = a * e,
					o.y = 0,
					o.size = n,
					o.textAlign = "center",
					o.verticalAlign = "middle",
					o.fontFamily = "Microsoft YaHei",
					o.name = s.capital_key,
					this.settleHistoryPanel.group_capital.addChild(o),
					o.addEventListener(egret.TouchEvent.TOUCH_TAP, this.changeCapital, this),
					this.capital == s.capital_key && (this.settleHistoryPanel.bg_capital.x = o.x,
					this.settleHistoryPanel.bg_capital.y = o.y)
				}
			}
		}
		,
		i.prototype.changeCapital = function(t) {
			var e = "";
			e = t.currentTarget.name,
			this.capital != e && (this.settleHistoryPanel.bg_capital.x = this.settleHistoryPanel.group_capital.getChildByName(t.currentTarget.name).x,
			this.capital = e,
			this.getCapitalOddsList(),
			this.settleHistoryPanel.history_data = new Array,
			this.setData(),
			this.page = 1,
			this.scV = 0,
			this.getSettleHistory(!0))
		}
		,
		i.prototype.moveListener = function() {
			this.settleHistoryPanel.scroller_history_list.viewport.scrollV + this.settleHistoryPanel.scroller_history_list.height >= this.settleHistoryPanel.scroller_history_list.viewport.contentHeight - 5 && this.total > 0 && (this.scV = this.settleHistoryPanel.scroller_history_list.viewport.scrollV,
			this.getSettleHistory())
		}
		,
		i.prototype.close = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			this.settleHistoryPanel.img_close.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.settleHistoryPanel.scroller_history_list.removeEventListener(egret.TouchEvent.TOUCH_MOVE, this.moveListener, this),
			this.closePanel(6)
		}
		,
		i.prototype.initIntervalOdds = function() {
			null != this.capital_odds && (this.settleHistoryPanel.label_odds_1.text = "x" + parseFloat(this.capital_odds[1].odds),
			this.settleHistoryPanel.label_odds_3.text = "x" + parseFloat(this.capital_odds[3].odds),
			this.settleHistoryPanel.label_odds_4.text = "x" + parseFloat(this.capital_odds[4].odds),
			this.settleHistoryPanel.label_odds_5.text = "x" + parseFloat(this.capital_odds[5].odds),
			this.settleHistoryPanel.label_odds_6.text = "x" + parseFloat(this.capital_odds[6].odds),
			this.settleHistoryPanel.label_odds_7.text = "x" + parseFloat(this.capital_odds[7].odds),
			this.settleHistoryPanel.label_odds_8.text = "x" + parseFloat(this.capital_odds[8].odds),
			this.settleHistoryPanel.label_odds_9.text = "x" + parseFloat(this.capital_odds[9].odds),
			this.settleHistoryPanel.label_odds_10.text = "x" + parseFloat(this.capital_odds[10].odds),
			this.settleHistoryPanel.label_interval_3.text = this.capital_odds[3].display,
			this.settleHistoryPanel.label_interval_4.text = this.capital_odds[4].display,
			this.settleHistoryPanel.label_interval_5.text = this.capital_odds[5].display,
			this.settleHistoryPanel.label_interval_6.text = this.capital_odds[6].display,
			this.settleHistoryPanel.label_interval_7.text = this.capital_odds[7].display,
			this.settleHistoryPanel.label_interval_8.text = this.capital_odds[8].display,
			this.settleHistoryPanel.label_interval_9.text = this.capital_odds[9].display,
			this.settleHistoryPanel.label_interval_10.text = this.capital_odds[10].display)
		}
		,
		i.prototype.setData = function() {
			this.settleHistoryPanel.settleHistoryList.dataProvider = new eui.ArrayCollection(this.settleHistoryPanel.history_data),
			this.settleHistoryPanel.settleHistoryList.itemRenderer = t.SettleHistoryItem,
			this.settleHistoryPanel.settleHistoryList.validateNow(),
			this.settleHistoryPanel.scroller_history_list.viewport.scrollV = this.scV
		}
		,
		i.prototype.getSettleHistory = function(t) {
			if (void 0 === t && (t = !1),
			!t) {
				if (this.settleHistoryPanel.history_data.length == this.total && this.total > 0)
					return;
				if (this.settleHistoryPanel.history_data.length >= 60)
					return
			}
			if (!this.get_history_ing) {
				this.get_history_ing = !0;
				var e = new eui.ArrayCollection;
				e.addItem({
					key: "game_model_type",
					value: 2
				}),
				e.addItem({
					key: "capital_key",
					value: this.capital
				}),
				e.addItem({
					key: "limit",
					value: this.limit
				}),
				e.addItem({
					key: "page",
					value: this.page
				}),
				this.showLoading(),
				HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "trade/getSettleHistory", e, this.onGetSettleHistoryComplete, this.onGetSettleHistoryIOError, this.onGetSettleHistoryProgress, this)
			}
		}
		,
		i.prototype.onGetSettleHistoryComplete = function(e) {
			this.closeLoading(),
			this.get_history_ing = !1;
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_ROUND_FOUND) {
				var a = n.results.results;
				this.total = n.results.total,
				this.page++;
				for (var s = 0; s < a.length; s++)
					this.settleHistoryPanel.history_data.push(a[s]);
				this.setData()
			} else if (403 == n.type)
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			else {
				n.message;
				this.get_history_ing = !1,
				this.settleHistoryPanel.history_data = new Array,
				this.setData()
			}
		}
		,
		i.prototype.onGetSettleHistoryIOError = function(t) {
			this.closeLoading()
		}
		,
		i.prototype.onGetSettleHistoryProgress = function(t) {}
		,
		i
	}(BaseMediator);
	e.NAME = "SettleHistoryMediator",
	t.SettleHistoryMediator = e,
	__reflect(e.prototype, "game.SettleHistoryMediator");
	var i = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/SettleHistoryItemSkin.exml",
			e
		}
		return __extends(e, t),
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			this.setData()
		}
		,
		e.prototype.dataChanged = function() {
			null != this.lb_num && this.setData()
		}
		,
		e.prototype.setData = function() {
			if (null != this.data) {
				var t = Utils.convertTime(this.data.end_time.toString(), "hhmm");
				this.lb_num.text = t + "期";
				var e = this.data.settle_capital_odds;
				if (null != e) {
					e = JSON.parse(e);
					for (var i = 0; i < e.length; i++) {
						var n = e[i]
						  , a = n.order;
						if (0 != a && 2 != a) {
							var s, o = 50, r = this.height / 2 - 18;
							1 == a ? (o = o + 550 / 9 * 4 + 550 / 18 - 8,
							s = 16777215) : a >= 3 && 6 >= a ? (o = o + 550 / 9 * (a - 3) + 550 / 18 - 8,
							s = 16001316) : a >= 7 && 10 >= a && (o = o + 550 / 9 * (a - 2) + 550 / 18 - 8,
							s = 5169700);
							var l = 30
							  , h = 30;
							this.drawShape(o, r, l, h, s);
							var d = new eui.Label;
							d.text = parseFloat(n.odds).toString(),
							d.fontFamily = "lgzbFont",
							d.size = 17,
							d.bold = !0,
							d.stroke = 1,
							this.addChild(d),
							d.x = o + (l - d.width) / 2,
							d.y = r + (h - d.height) / 2
						}
					}
				}
			}
		}
		,
		e.prototype.drawShape = function(t, e, i, n, a) {
			var s = new egret.Shape;
			s.graphics.beginFill(a, 1),
			s.graphics.drawRoundRect(t, e, i, n, 10, 10),
			s.graphics.endFill(),
			this.addChild(s)
		}
		,
		e
	}(eui.ItemRenderer);
	t.SettleHistoryItem = i,
	__reflect(i.prototype, "game.SettleHistoryItem")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i(n) {
			void 0 === n && (n = null);
			var a = e.call(this, i.NAME, n) || this;
			return a.custom_product_id = "",
			a.data = Array(),
			a.shopPanel = t.ShopPanel.getInstance(),
			a
		}
		return __extends(i, e),
		i.prototype.listNotificationInterests = function() {
			return [PanelNotify.OPEN_SHOP, PanelNotify.CLOSE_SHOP, PanelNotify.BUY_GOLD]
		}
		,
		i.prototype.handleNotification = function(t) {
			var e = t.getBody();
			switch (t.getName()) {
			case PanelNotify.OPEN_SHOP:
				this.showUI(this.shopPanel, !0, 0, 0, 5);
				break;
			case PanelNotify.CLOSE_SHOP:
				this.closePanel(6);
				break;
			case PanelNotify.BUY_GOLD:
				this.buyGold(e)
			}
		}
		,
		i.prototype.initUI = function() {
			this.shopPanel.img_close.addEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.shopPanel.group_product_0.addEventListener(egret.TouchEvent.TOUCH_TAP, this.buyGold, this),
			this.shopPanel.group_product_1.addEventListener(egret.TouchEvent.TOUCH_TAP, this.buyGold, this),
			this.shopPanel.group_product_2.addEventListener(egret.TouchEvent.TOUCH_TAP, this.buyGold, this),
			this.shopPanel.group_product_3.addEventListener(egret.TouchEvent.TOUCH_TAP, this.buyGold, this),
			this.shopPanel.group_product_4.addEventListener(egret.TouchEvent.TOUCH_TAP, this.buyGold, this),
			this.shopPanel.group_product_5.addEventListener(egret.TouchEvent.TOUCH_TAP, this.buyGold, this),
			this.shopPanel.group_no_return.addEventListener(egret.TouchEvent.TOUCH_TAP, this.goToCustomTopup, this),
			this.shopPanel.group_topup_return_introduce.addEventListener(egret.TouchEvent.TOUCH_TAP, this.goToTopupReturnIntroduce, this)
		}
		,
		i.prototype.goToTopupReturnIntroduce = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
			this.close(),
			setTimeout(function() {
				t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_TOPUP_RETURN_INTRODUCE)
			}, 300)
		}
		,
		i.prototype.goToCustomTopup = function() {
			var e = this;
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
			this.close(),
			setTimeout(function() {
				t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_CUSTOM_TOPUP, e.custom_product_id)
			}, 300)
		}
		,
		i.prototype.close = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			this.closePanel(6),
			this.shopPanel.img_close.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.shopPanel.group_product_0.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.buyGold, this),
			this.shopPanel.group_product_1.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.buyGold, this),
			this.shopPanel.group_product_2.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.buyGold, this),
			this.shopPanel.group_product_3.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.buyGold, this),
			this.shopPanel.group_product_4.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.buyGold, this),
			this.shopPanel.group_product_5.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.buyGold, this),
			this.shopPanel.group_no_return.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.goToCustomTopup, this),
			this.shopPanel.group_topup_return_introduce.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.goToTopupReturnIntroduce, this)
		}
		,
		i.prototype.initData = function() {
			this.getProduct()
		}
		,
		i.prototype.setData = function() {
			for (var t = 0; t < this.data.length; t++) {
				var e = this.data[t]
				  , i = parseInt(e.order);
				2 == parseInt(e.activity_type) ? 1 == i ? this.shopPanel.group_product_0.name = e.id : 2 == i ? this.shopPanel.group_product_1.name = e.id : 3 == i ? this.shopPanel.group_product_2.name = e.id : 4 == i ? this.shopPanel.group_product_3.name = e.id : 5 == i ? this.shopPanel.group_product_4.name = e.id : 6 == i && (this.shopPanel.group_product_5.name = e.id) : 3 == parseInt(e.activity_type) && (this.custom_product_id = e.id)
			}
		}
		,
		i.prototype.getProduct = function() {
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "type",
				value: "G"
			})
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "product/get", t, this.onGetProductComplete, this.onGetProductIOError, this.onGetProductProgress, this)
		}
		,
		i.prototype.onGetProductComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_PRODUCT_FOUND) {
				var a = n.results;
				this.data = new Array;
				for (var s = 0; s < a.length; s++) {
					var o = a[s];
					this.data.push(o)
				}
				this.setData()
			} else if (403 == n.type)
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			else {
				n.message
			}
		}
		,
		i.prototype.onGetProductIOError = function(t) {}
		,
		i.prototype.onGetProductProgress = function(t) {}
		,
		i.prototype.buyGold = function(e) {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1);
			var i = getWxUserInfo();
			if (null == i.payOpenId || void 0 == i.payOpenId || "undefined" == i.payOpenId || "" == i.payOpenId)
				return void Toast.launch("获取微信信息失败，请在微信中使用该功能");
			this.showLoading();
			var n = e.currentTarget.name
			  , a = new eui.ArrayCollection;
			a.addItem({
				key: "product_id",
				value: n
			}),
			a.addItem({
				key: "open_id",
				value: i.payOpenId
			});
			var s = "ewallet/buyGold";
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + s, a, this.onBuyProductComplete, this.onBuyProductIOError, this.onBuyProductProgress, this)
		}
		,
		i.prototype.onBuyProductComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_BUY_PRODUCT_SUCCESS) {
				var a = n.results;
				if (null != a) {
					var s = a.order_no
					  , o = a.price
					  , r = getWxUserInfo()
					  , l = null;
					if (null != r.payOpenId && void 0 != r.payOpenId && "undefined" != r.payOpenId) {
						l = r.payOpenId;
						var h = {
							orderNo: s,
							price: o,
							payOpenId: l
						};
						gopay(h)
					}
				}
			} else if (403 == n.type)
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN),
				this.closeLoading();
			else {
				var d = n.message;
				Toast.launch(d, -100),
				this.closeLoading()
			}
		}
		,
		i.prototype.onBuyProductIOError = function(t) {
			this.closeLoading(),
			Toast.launch("网络异常,请检查您的网络设置.", -100)
		}
		,
		i.prototype.onBuyProductProgress = function(t) {}
		,
		i.prototype.getEwallet = function() {
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "ewallet_type",
				value: "G"
			})
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + API.balance, t, this.onGetEwalletComplete, this.onGetEwalletIOError, this.onGetEwalletProgress, this)
		}
		,
		i.prototype.onGetEwalletComplete = function(e) {
			debugger
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_EWALLET_FOUND) {
				var a = n.results
				  , s = a.balance
				  , o = {
					gold_amount: s
				};
				t.AppFacade.getInstance().sendNotification(MainNotify.UPDATE_HEADER_EWALLET, o)
			} else {
				if (403 == n.type)
					return void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				n.message
			}
		}
		,
		i.prototype.onGetEwalletIOError = function(t) {}
		,
		i.prototype.onGetEwalletProgress = function(t) {}
		,
		i.prototype.onGetTopupVIPIOError = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			n.message;
			return 403 == n.type ? void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN) : void 0
		}
		,
		i.prototype.onGetTopupVIPProgress = function(t) {}
		,
		i.prototype.showLoading = function() {
			if (null == this.shopPanel.loading_group) {
				this.shopPanel.loading_group = new eui.Group,
				this.shopPanel.loading_group.width = 719,
				this.shopPanel.loading_group.height = 1199,
				this.shopPanel.loading_group.verticalCenter = .5,
				this.shopPanel.loading_group.horizontalCenter = .5;
				var t = new egret.Sprite;
				t.graphics.clear(),
				t.graphics.beginFill(0, .6),
				t.graphics.drawRect(0, 0, GameConfig.curWidth(), GameConfig.curHeight()),
				t.graphics.endFill(),
				t.width = GameConfig.curWidth(),
				t.height = GameConfig.curHeight(),
				t.touchEnabled = !0,
				egret.Tween.get(t).to({
					alpha: 1
				}, 150),
				t.visible = !0,
				this.shopPanel.loading_group.addChild(t),
				null == this.shopPanel.loading_image && (this.shopPanel.loading_image = new eui.Image),
				this.shopPanel.loading_image.verticalCenter = .5,
				this.shopPanel.loading_image.horizontalCenter = .5,
				this.shopPanel.loading_image.source = RES.getRes("loading_run_png"),
				this.shopPanel.loading_image.anchorOffsetX = .5 * this.shopPanel.loading_image.width,
				this.shopPanel.loading_image.anchorOffsetY = .5 * this.shopPanel.loading_image.height,
				this.shopPanel.loading_group.addChild(this.shopPanel.loading_image)
			}
			GameLayerManager.gameLayer().effectLayer.contains(this.shopPanel.loading_group) || (GameLayerManager.gameLayer().effectLayer.addChild(this.shopPanel.loading_group),
			GameLayerManager.gameLayer().effectLayer.addEventListener(egret.Event.ENTER_FRAME, this.runLoading, this))
		}
		,
		i.prototype.runLoading = function(t) {
			this.shopPanel.loading_image.rotation += 3
		}
		,
		i.prototype.closeLoading = function() {
			GameLayerManager.gameLayer().effectLayer.contains(this.shopPanel.loading_group) && GameLayerManager.gameLayer().effectLayer.removeChild(this.shopPanel.loading_group),
			GameLayerManager.gameLayer().effectLayer.removeEventListener(egret.Event.ENTER_FRAME, this.runLoading, this)
		}
		,
		i
	}(BaseMediator);
	e.NAME = "ShopMediator",
	t.ShopMediator = e,
	__reflect(e.prototype, "game.ShopMediator")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i(n) {
			void 0 === n && (n = null);
			var a = e.call(this, i.NAME, n) || this;
			return a.signPanel = new t.SignPanel,
			a.isPlay1 = !1,
			a.isPlay2 = !1,
			a.isPlay3 = !1,
			a.isPlay4 = !1,
			a.isPlay5 = !1,
			a.isPlay6 = !1,
			a.isPlay7 = !1,
			a.isPlay8 = !1,
			a.isPlay9 = !1,
			a.isPlay10 = !1,
			a
		}
		return __extends(i, e),
		i.prototype.listNotificationInterests = function() {
			return [PanelNotify.OPEN_SIGN, PanelNotify.CLOSE_SIGN]
		}
		,
		i.prototype.handleNotification = function(t) {
			var e = t.getBody();
			switch (t.getName()) {
			case PanelNotify.OPEN_SIGN:
				this.signPanel.data = e,
				this.showUI(this.signPanel, !0, 0, 0, 6);
				break;
			case PanelNotify.CLOSE_SIGN:
				this.closePanel(6)
			}
		}
		,
		i.prototype.initUI = function() {
			this.signPanel.btn_sign.addEventListener(egret.TouchEvent.TOUCH_TAP, this.sign, this);
			var t = this.signPanel.data.activity_sign_reward;
			if (null != t) {
				var e = t[0].start_date
				  , i = t[0].end_date;
				e.length <= 10 && (e = 1e3 * parseInt(e)),
				i.length <= 10 && (i = 1e3 * parseInt(i));
				var n = new Date(e)
				  , a = (n.getMonth() + 1).toString()
				  , s = n.getDate().toString()
				  , o = new Date(i)
				  , r = (o.getMonth() + 1).toString()
				  , l = o.getDate().toString();
				this.signPanel.sign_title.text = a + "月" + s + "日 - " + r + "月" + l + "日"
			}
		}
		,
		i.prototype.initData = function() {
			this.signPanel.normal_reward_array = new eui.ArrayCollection,
			this.signPanel.normal_reward_array.addItem(this.signPanel.normal_reward_1),
			this.signPanel.normal_reward_array.addItem(this.signPanel.normal_reward_2),
			this.signPanel.normal_reward_array.addItem(this.signPanel.normal_reward_3),
			this.signPanel.normal_reward_array.addItem(this.signPanel.normal_reward_4),
			this.signPanel.normal_reward_array.addItem(this.signPanel.normal_reward_5),
			this.signPanel.normal_reward_array.addItem(this.signPanel.normal_reward_6),
			this.signPanel.normal_reward_array.addItem(this.signPanel.normal_reward_7),
			this.signPanel.normal_sign_array = new eui.ArrayCollection,
			this.signPanel.normal_sign_array.addItem(this.signPanel.sign_1),
			this.signPanel.normal_sign_array.addItem(this.signPanel.sign_2),
			this.signPanel.normal_sign_array.addItem(this.signPanel.sign_3),
			this.signPanel.normal_sign_array.addItem(this.signPanel.sign_4),
			this.signPanel.normal_sign_array.addItem(this.signPanel.sign_5),
			this.signPanel.normal_sign_array.addItem(this.signPanel.sign_6),
			this.signPanel.normal_sign_array.addItem(this.signPanel.sign_7),
			this.signPanel.normal_sign_gold_array = new eui.ArrayCollection,
			this.signPanel.normal_sign_gold_array.addItem(this.signPanel.sign_gold_1),
			this.signPanel.normal_sign_gold_array.addItem(this.signPanel.sign_gold_2),
			this.signPanel.normal_sign_gold_array.addItem(this.signPanel.sign_gold_3),
			this.signPanel.normal_sign_gold_array.addItem(this.signPanel.sign_gold_4),
			this.signPanel.normal_sign_gold_array.addItem(this.signPanel.sign_gold_5),
			this.signPanel.normal_sign_gold_array.addItem(this.signPanel.sign_gold_6),
			this.signPanel.normal_sign_gold_array.addItem(this.signPanel.sign_gold_7),
			this.signPanel.normal_sign_mark_array = new eui.ArrayCollection,
			this.signPanel.normal_sign_mark_array.addItem(this.signPanel.sign_mark_1),
			this.signPanel.normal_sign_mark_array.addItem(this.signPanel.sign_mark_2),
			this.signPanel.normal_sign_mark_array.addItem(this.signPanel.sign_mark_3),
			this.signPanel.normal_sign_mark_array.addItem(this.signPanel.sign_mark_4),
			this.signPanel.normal_sign_mark_array.addItem(this.signPanel.sign_mark_5),
			this.signPanel.normal_sign_mark_array.addItem(this.signPanel.sign_mark_6),
			this.signPanel.normal_sign_mark_array.addItem(this.signPanel.sign_mark_7),
			this.signPanel.activity_days_array = new eui.ArrayCollection,
			this.signPanel.activity_days_array.addItem(this.signPanel.activity_days_1),
			this.signPanel.activity_days_array.addItem(this.signPanel.activity_days_2),
			this.signPanel.activity_days_array.addItem(this.signPanel.activity_days_3),
			this.signPanel.activity_days_array.addItem(this.signPanel.activity_days_4),
			this.signPanel.activity_reward_array = new eui.ArrayCollection,
			this.signPanel.activity_reward_array.addItem(this.signPanel.activity_reward_1),
			this.signPanel.activity_reward_array.addItem(this.signPanel.activity_reward_2),
			this.signPanel.activity_reward_array.addItem(this.signPanel.activity_reward_3),
			this.signPanel.activity_reward_array.addItem(this.signPanel.activity_reward_4);
			for (var t = 0; t < this.signPanel.normal_sign_array.length; t++)
				this.signPanel.normal_sign_array.getItemAt(t).addEventListener(egret.TouchEvent.TOUCH_TAP, this.sign, this),
				this.signPanel.normal_reward_array.getItemAt(t).addEventListener(egret.TouchEvent.TOUCH_TAP, this.sign, this),
				this.signPanel.normal_sign_gold_array.getItemAt(t).addEventListener(egret.TouchEvent.TOUCH_TAP, this.sign, this);
			var e = this.signPanel.data.normal_sign_reward
			  , i = this.signPanel.data.activity_sign_reward;
			null != this.signPanel.data.normal_sign && (this.signPanel.normal_days = this.signPanel.data.normal_sign.days),
			null != this.signPanel.data.activity_sign && (this.signPanel.activity_days = this.signPanel.data.activity_sign.days);
			for (var t = 0; t < e.length; t++)
				this.signPanel.normal_reward_array.getItemAt(t).text = parseInt(e[t].amount),
				this.signPanel.normal_days > 0 && 7 != this.signPanel.normal_days && t < this.signPanel.normal_days ? (this.signPanel.normal_sign_array.getItemAt(t).source = "bg_sign_" + (t + 1) + "_selected_png",
				this.signPanel.normal_sign_mark_array.getItemAt(t).visible = !0) : (this.signPanel.normal_sign_array.getItemAt(t).source = "bg_sign_" + (t + 1) + "_normal_png",
				this.signPanel.normal_sign_mark_array.getItemAt(t).visible = !1);
			for (var t = 0; t < i.length; t++)
				this.signPanel.activity_days_array.getItemAt(t).text = parseInt(i[t].days) + "天",
				"G" == i[t].ewallet_type ? this.signPanel.activity_reward_array.getItemAt(t).text = "金币" + parseInt(i[t].amount) : this.signPanel.activity_reward_array.getItemAt(t).text = "钻石" + parseInt(i[t].amount);
			this.signPanel.activity_days > 0 ? this.signPanel.activity_sign_progress.value = this.signPanel.activity_days / i[3].days * 100 : this.signPanel.activity_sign_progress.value = 0,
			console.log(this.signPanel.activity_sign_progress.value)
		}
		,
		i.prototype.sign = function(e) {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "user/sign", null, this.onPostComplete, this.onPostIOError, this.onPostProgress, this)
		}
		,
		i.prototype.onPostComplete = function(t) {
			var e = t.currentTarget
			  , n = e.response? JSON.parse(e.response): {type: 1};
			if (i.status_code == MessageCode.CODE_SIGN_SUCCESS) {
				for (var n = null, a = 0; 7 > a; a++)
					this.signPanel.normal_days >= 0 && (7 == this.signPanel.normal_days && (this.signPanel.normal_days = 0),
					a == this.signPanel.normal_days && (this.signPanel.normal_sign_array.getItemAt(a).source = "bg_sign_" + (a + 1) + "_selected_png",
					this.signPanel.normal_sign_mark_array.getItemAt(a).visible = !0,
					n = this.signPanel.normal_sign_array.getItemAt(a)));
				var s = i.results.amount;
				this.getEwallet(),
				this.showAmountIncrease(s, n)
			} else if (403 == i.status_code)
				;
			else {
				i.message
			}
			null != this.signPanel && void 0 != this.signPanel && null != this.signPanel.data && void 0 != this.signPanel.data && "undefined" != this.signPanel.data && null != this.signPanel.data.callback && void 0 != this.signPanel.data.callback && "undefined" != this.signPanel.data.callback && this.signPanel.data.callback()
		}
		,
		i.prototype.onPostIOError = function(t) {}
		,
		i.prototype.onPostProgress = function(t) {}
		,
		i.prototype.showAmountIncrease = function(e, i) {
			var n = i.x + 30
			  , a = i.y + i.height / 2 + 30
			  , s = this;
			t.Fly.flyGold(n, a, 380, 50, 1e3, 15, e, function() {
				s.closePanel(6)
			}, 400, 10)
		}
		,
		i.prototype.getEwallet = function() {
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "ewallet_type",
				value: "G"
			})
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + API.balance, t, this.onGetEwalletComplete, this.onGetEwalletIOError, this.onGetEwalletProgress, this)
		}
		,
		i.prototype.onGetEwalletComplete = function(e) {
			debugger
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_EWALLET_FOUND) {
				var a = n.results
				  , s = a.balance
				  , o = {
					gold_amount: s
				};
				t.AppFacade.getInstance().sendNotification(MainNotify.UPDATE_HEADER_EWALLET, o)
			} else {
				if (403 == n.type)
					return void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				n.message
			}
		}
		,
		i.prototype.onGetEwalletIOError = function(t) {}
		,
		i.prototype.onGetEwalletProgress = function(t) {}
		,
		i.prototype.btn1Click = function(t) {
			this.isPlay1 ? this.isPlay1 = !1 : this.isPlay1 = !0
		}
		,
		i.prototype.btn2Click = function(t) {
			this.isPlay2 ? this.isPlay2 = !1 : this.isPlay2 = !0
		}
		,
		i.prototype.btn3Click = function(t) {}
		,
		i.prototype.btn4Click = function(t) {}
		,
		i.prototype.btn5Click = function(t) {}
		,
		i.prototype.btn6Click = function(t) {}
		,
		i.prototype.btn7Click = function(t) {}
		,
		i.prototype.btn8Click = function(t) {
			this.isPlay8 || (this.isPlay8 = !0)
		}
		,
		i.prototype.btn9Click = function(t) {
			this.isPlay9 || (this.isPlay9 = !0)
		}
		,
		i.prototype.btn10Click = function(t) {
			this.isPlay10 || (this.isPlay10 = !0)
		}
		,
		i.prototype.closeButtonClick = function(t) {
			this.closePanel(6)
		}
		,
		i
	}(BaseMediator);
	e.NAME = "SignMediator",
	t.SignMediator = e,
	__reflect(e.prototype, "game.SignMediator")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i(n) {
			void 0 === n && (n = null);
			var a = e.call(this, i.NAME, n) || this;
			return a.tag = "T",
			a.data = null,
			a.TipPanel = t.TipPanel.getInstance(),
			a
		}
		return __extends(i, e),
		i.prototype.listNotificationInterests = function() {
			return [PanelNotify.OPEN_TIP, PanelNotify.CLOSE_TIP]
		}
		,
		i.prototype.handleNotification = function(t) {
			var e = t.getBody();
			switch (t.getName()) {
			case PanelNotify.OPEN_TIP:
				this.data = e,
				this.showUI(this.TipPanel, !0, 0, 0, 5);
				break;
			case PanelNotify.CLOSE_TIP:
				this.closePanel(6)
			}
		}
		,
		i.prototype.initUI = function() {
			this.TipPanel.btn_ok.addEventListener(egret.TouchEvent.TOUCH_TAP, this.callBack, this);
			var t = this.TipPanel.groupTips.getChildByName("childGroupTips");
			t && this.TipPanel.groupTips.removeChild(t),
			this.TipPanel.groupTips.addChild(this.data.group),
			this.data.cancelable && this.TipPanel.group_bg.addEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.TipPanel.img_close.addEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this)
		}
		,
		i.prototype.callBack = function() {
			this.close(),
			null != this.data.callback && this.data.callback(this.data.params)
		}
		,
		i.prototype.close = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			this.TipPanel.btn_ok.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.callBack, this),
			this.TipPanel.group_bg.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.TipPanel.img_close.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.closePanel(6)
		}
		,
		i
	}(BaseMediator);
	e.NAME = "TipMediator",
	t.TipMediator = e,
	__reflect(e.prototype, "game.TipMediator")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i(n) {
			void 0 === n && (n = null);
			var a = e.call(this, i.NAME, n) || this;
			return a.panel = t.TopupReturnIntroducePanel.getInstance(),
			a
		}
		return __extends(i, e),
		i.prototype.listNotificationInterests = function() {
			return [PanelNotify.OPEN_TOPUP_RETURN_INTRODUCE, PanelNotify.CLOSE_TOPUP_RETURN_INTRODUCE]
		}
		,
		i.prototype.handleNotification = function(t) {
			t.getBody();
			switch (t.getName()) {
			case PanelNotify.OPEN_TOPUP_RETURN_INTRODUCE:
				this.showUI(this.panel, !0, 0, 0, 5, !1, .8);
				break;
			case PanelNotify.CLOSE_TOPUP_RETURN_INTRODUCE:
				this.closePanel(6)
			}
		}
		,
		i.prototype.initUI = function() {
			this.panel.img_close.addEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this)
		}
		,
		i.prototype.close = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			this.panel.img_close.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.closePanel(6)
		}
		,
		i
	}(BaseMediator);
	e.NAME = "TopupReturnIntroduceMediator",
	t.TopupReturnIntroduceMediator = e,
	__reflect(e.prototype, "game.TopupReturnIntroduceMediator")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i(n) {
			void 0 === n && (n = null);
			var a = e.call(this, i.NAME, n) || this;
			return a.type = "",
			a.is_vip = !1,
			a._userAccountPanel = t.UserAccountPanel.getInstance(),
			a
		}
		return __extends(i, e),
		i.prototype.listNotificationInterests = function() {
			return [PanelNotify.OPEN_USER_ACCOUNT]
		}
		,
		i.prototype.handleNotification = function(t) {
			var e = t.getBody();
			switch (this.type = e,
			t.getName()) {
			case PanelNotify.OPEN_USER_ACCOUNT:
				this.showUI(this._userAccountPanel, !0, 0, 0, 5)
			}
		}
		,
		i.prototype.initUI = function() {
			this._userAccountPanel.img_close.addEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this._userAccountPanel.img_music_switch.addEventListener(egret.TouchEvent.TOUCH_TAP, this.musicSwitch, this),
			this._userAccountPanel.img_sound_switch.addEventListener(egret.TouchEvent.TOUCH_TAP, this.soundSwitch, this),
			this._userAccountPanel.btn_sign_out.addEventListener(egret.TouchEvent.TOUCH_TAP, this.signOut, this),
			t.SceneTrade.getInstance().playMusic ? this._userAccountPanel.img_music_switch.source = RES.getRes("bg_on_png") : this._userAccountPanel.img_music_switch.source = RES.getRes("bg_off_png"),
			t.SceneTrade.getInstance().playSound ? this._userAccountPanel.img_sound_switch.source = RES.getRes("bg_on_png") : this._userAccountPanel.img_sound_switch.source = RES.getRes("bg_off_png")
		}
		,
		i.prototype.initData = function() {
			this.getEwallet(),
			this.getUserInfo()
		}
		,
		i.prototype.musicSwitch = function() {
			t.SceneTrade.getInstance().playMusic ? (this._userAccountPanel.img_music_switch.source = RES.getRes("bg_off_png"),
			t.SceneTrade.getInstance().stopMusic(),
			t.SceneTrade.getInstance().playMusic = !1,
			Utils.setStorageObj(Keys.FK_MUSIC, !1)) : (this._userAccountPanel.img_music_switch.source = RES.getRes("bg_on_png"),
			t.SceneTrade.getInstance().playMusic = !0,
			Utils.setStorageObj(Keys.FK_MUSIC, !0),
			t.SceneTrade.getInstance().playBgSound())
		}
		,
		i.prototype.soundSwitch = function() {
			t.SceneTrade.getInstance().playSound ? (this._userAccountPanel.img_sound_switch.source = RES.getRes("bg_off_png"),
			t.SceneTrade.getInstance().playSound = !1,
			Utils.setStorageObj(Keys.FK_SOUND, !1)) : (this._userAccountPanel.img_sound_switch.source = RES.getRes("bg_on_png"),
			t.SceneTrade.getInstance().playSound = !0,
			Utils.setStorageObj(Keys.FK_SOUND, !0))
		}
		,
		i.prototype.close = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			this._userAccountPanel.img_close.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this._userAccountPanel.img_music_switch.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.musicSwitch, this),
			this._userAccountPanel.img_sound_switch.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.soundSwitch, this),
			this._userAccountPanel.btn_sign_out.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.signOut, this),
			this.closePanel(6),
			"FOOTER" == this.type && t.FooterBar.getInstance().selectTab(t.FooterBar.getInstance().lastFocused)
		}
		,
		i.prototype.signOut = function() {
			this.close(),
			t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN)
		}
		,
		i.prototype.updateUserInfo = function(t) {
			var e = t.account_info;
			if (null != e) {
				// this._userAccountPanel.lb_name.text = Utils.getLimitUserName(e.name, 12);
				var i = new RegExp("(\\d{4})(\\d{4})(\\d{3})")
				  , n = e.tel.replace(i, "$1****$3");
				if (this._userAccountPanel.lb_phone.text = n,
				this._userAccountPanel.img_vip.source = RES.getRes("icon_vip_" + e.vip_grade + "_png"),
				e.vip_grade > 0 ? this.is_vip = !0 : this.is_vip = !1,
				void 0 == e.avatar_url || null == e.avatar_url || "" == e.avatar_url) {
					var a = new egret.Bitmap(RES.getRes("person_png"));
					this.showAvatar(a)
				} else
					this.loadBankerImage(e.avatar_url);
				// null != e.recommend_user_1_name ? this._userAccountPanel.lb_agent_name.text = Utils.getLimitUserName(e.recommend_user_1_name, 12) : this._userAccountPanel.lb_agent_name.text = "",
				this._userAccountPanel.lb_bet_round_num.text = t.round_count,
				t.day_profit >= 0 ? this._userAccountPanel.lb_bet_profit.text = Utils.moneyFormat(t.day_profit, 2).toString() : this._userAccountPanel.lb_bet_profit.text = "-" + Utils.moneyFormat(Math.abs(t.day_profit), 2),
				this._userAccountPanel.lb_today_trade_amount.text = Utils.moneyFormat(t.day_trade, 2).toString(),
				this._userAccountPanel.lb_round_most_profit.text = Utils.moneyFormat(t.max_profit, 2).toString(),
				this._userAccountPanel.lb_banker_round.text = t.bankers_num,
				t.bankers_profit >= 0 ? this._userAccountPanel.lb_banker_profit.text = Utils.moneyFormat(t.bankers_profit, 2).toString() : this._userAccountPanel.lb_banker_profit.text = "-" + Utils.moneyFormat(Math.abs(t.bankers_profit), 2),
				this._userAccountPanel.lb_burst_num.text = t.bankers_brust,
				this._userAccountPanel.lb_invite_user_num.text = t.recommend_user_num,
				null == t.recommend_user_income && (t.recommend_user_income = 0),
				this._userAccountPanel.lb_invite_amount.text = parseFloat(parseFloat(t.recommend_user_income).toFixed(3)) + " 元"
			}
		}
		,
		i.prototype.loadBankerImage = function(t) {
			var e = new egret.ImageLoader;
			e.addEventListener(egret.Event.COMPLETE, this.ImageLoadCompleteHandler, this),
			e.load(t)
		}
		,
		i.prototype.ImageLoadCompleteHandler = function(t) {
			var e = t.currentTarget
			  , i = new egret.Bitmap(e.data);
			this.showAvatar(i)
		}
		,
		i.prototype.showAvatar = function(t) {
			null != this._userAccountPanel.getChildByName("avatar_bitmap") && (this._userAccountPanel.removeChild(this._userAccountPanel.getChildByName("avatar_bitmap")),
			this._userAccountPanel.removeChild(this._userAccountPanel.getChildByName("avatar_rect")),
			this._userAccountPanel.removeChild(this._userAccountPanel.getChildByName("avatar_circle"))),
			t.x = 56,
			t.y = 354,
			t.width = 92,
			t.height = 95,
			t.name = "avatar_bitmap",
			this._userAccountPanel.addChild(t);
			var e = new egret.Shape;
			e.graphics.beginFill(16366631),
			e.graphics.drawRoundRect(56, 354, 92, 92, 20, 20),
			e.graphics.endFill(),
			e.name = "avatar_rect",
			this._userAccountPanel.addChild(e),
			t.mask = e;
			var i = new eui.Image;
			this.is_vip ? i.source = RES.getRes("bg_user_avatar_png") : i.source = RES.getRes("bg_user_avatar_1_png"),
			i.width = 98,
			i.height = 98,
			i.x = 54,
			i.y = 351,
			i.name = "avatar_circle",
			this._userAccountPanel.addChild(i)
		}
		,
		i.prototype.getUserInfo = function() {
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "user/info", null, this.onGetUserInfoComplete, this.onGetUserInfoIOError, this.onGetUserInfoProgress, this)
		}
		,
		i.prototype.onGetUserInfoComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_USER_FOUND) {
				var a = n.results;
				this.updateUserInfo(a)
			} else {
				if (403 == n.type)
					return void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				n.message
			}
		}
		,
		i.prototype.onGetUserInfoIOError = function(t) {}
		,
		i.prototype.onGetUserInfoProgress = function(t) {}
		,
		i.prototype.getEwallet = function() {
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "ewallet_type",
				value: "G"
			})
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + API.balance, t, this.onGetEwalletComplete, this.onGetEwalletIOError, this.onGetEwalletProgress, this)
		}
		,
		i.prototype.onGetEwalletComplete = function(e) {
			debugger
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_EWALLET_FOUND) {
				var a = n.results
				  , s = a.balance;
				this._userAccountPanel.lb_gold.text = Utils.moneyFormat(s, 2).toString(),
				this._userAccountPanel.lb_total_trade_amount.text = Utils.moneyFormat(a.trade_amount, 2).toString()
			} else {
				if (403 == n.type)
					return void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				n.message
			}
		}
		,
		i.prototype.onGetEwalletIOError = function(t) {}
		,
		i.prototype.onGetEwalletProgress = function(t) {}
		,
		i
	}(BaseMediator);
	e.NAME = "UserAccountMediator",
	t.UserAccountMediator = e,
	__reflect(e.prototype, "game.UserAccountMediator")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i(n) {
			void 0 === n && (n = null);
			var a = e.call(this, i.NAME, n) || this;
			return a.userNoticeTimer = null,
			a.userNoticePanel = t.UserNoticePanel.getInstance(!0),
			a
		}
		return __extends(i, e),
		i.getInstance = function(t) {
			return i._instance || t && (i._instance = new i),
			i._instance
		}
		,
		i.prototype.listNotificationInterests = function() {
			return [PanelNotify.OPEN_USER_NOTICE, PanelNotify.CLOSE_USER_NOTICE, PanelNotify.ADD_USER_NOTICE]
		}
		,
		i.prototype.handleNotification = function(t) {
			var e = t.getBody();
			switch (t.getName()) {
			case PanelNotify.OPEN_USER_NOTICE:
				this.showUI(this.userNoticePanel, !0, 0, 0, 5);
				break;
			case PanelNotify.CLOSE_USER_NOTICE:
				this.closePanel(6);
				break;
			case PanelNotify.ADD_USER_NOTICE:
				this.Notification_CHAT_ADD_NOTICE(e)
			}
		}
		,
		i.prototype.initUI = function() {
			var e = this;
			this.userNoticePanel.notice_data = new Array,
			this.userNoticePanel.noticeList.dataProvider = new eui.ArrayCollection(this.userNoticePanel.notice_data),
			this.userNoticePanel.noticeList.itemRenderer = t.UserNoticeItem,
			this.userNoticePanel.noticeList.useVirtualLayout = !1,
			this.userNoticePanel.btn_send_message.addEventListener(egret.TouchEvent.TOUCH_TAP, this.sendUserNotice, this),
			this.userNoticePanel.noticeList.addEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			eui.Watcher.watch(this.userNoticePanel.scrList.viewport, ["contentHeight"], function() {
				e.userNoticePanel.noticeList.validateNow(),
				e.userNoticePanel.scrList.viewport.contentHeight >= e.userNoticePanel.scrList.height && (e.userNoticePanel.scrList.viewport.scrollV = e.userNoticePanel.scrList.viewport.contentHeight - e.userNoticePanel.scrList.height + 5)
			}, this),
			null == this.userNoticeTimer && (this.userNoticeTimer = setInterval(function(t) {
				t.scrollList()
			}, 2e3, this))
		}
		,
		i.prototype.scrollList = function() {
			20 == this.userNoticePanel.notice_data.length && (this.userNoticePanel.notice_data.push(this.userNoticePanel.notice_data[0]),
			this.setData())
		}
		,
		i.prototype.close = function() {
			this.userNoticePanel.noticeList.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.userNoticePanel.btn_send_message.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.sendUserNotice, this),
			null != this.userNoticeTimer && (clearInterval(this.userNoticeTimer),
			this.userNoticeTimer = null),
			this.closePanel(6)
		}
		,
		i.prototype.initData = function() {
			this.getMessageList()
		}
		,
		i.prototype.setData = function() {
			if (this.userNoticePanel.noticeList.dataProvider = new eui.ArrayCollection(this.userNoticePanel.notice_data),
			this.userNoticePanel.noticeList.validateNow(),
			this.userNoticePanel.scrList.viewport.contentHeight >= this.userNoticePanel.scrList.height && (this.userNoticePanel.scrList.viewport.scrollV = this.userNoticePanel.scrList.viewport.contentHeight - this.userNoticePanel.scrList.height + 5),
			this.userNoticePanel.notice_data.length > 20) {
				var t = this.userNoticePanel.notice_data.length - 20;
				this.userNoticePanel.notice_data.splice(0, t)
			}
		}
		,
		i.prototype.getMessageList = function() {
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "user/getUserNotice", null, this.onGetMessageComplete, this.onGetMessageIOError, this.onGetMessageProgress, this)
		}
		,
		i.prototype.onGetMessageComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_GET_MESSAGE_SUCCESS) {
				var a = n.results;
				this.userNoticePanel.notice_data = new Array;
				for (var s = a.length - 1; s >= 0; s--)
					1 == a[s].type && this.userNoticePanel.notice_data.push(a[s]);
				this.setData()
			} else if (403 == n.type)
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			else {
				n.message
			}
		}
		,
		i.prototype.onGetMessageIOError = function(t) {}
		,
		i.prototype.onGetMessageProgress = function(t) {}
		,
		i.prototype.sendUserNotice = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1);
			var e = this.userNoticePanel.edit_message.text;
			if (e = e.trim(),
			null == e || "" == e)
				return void Toast.launch("请输入内容.", -100);
			if (e.length > 20)
				return void Toast.launch("内容不能超过20个汉字.", -100);
			var i = new eui.ArrayCollection;
			i.addItem({
				key: "message",
				value: e
			}),
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "user/sendUserNotice", i, this.onSendUserNoticeComplete, this.onSendUserNoticeIOError, this.onSendUserNoticeProgress, this)
		}
		,
		i.prototype.onSendUserNoticeComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_SEND_MESSAGE_SUCCESS) {
				var a = t.GameGrabUI.getInstance(!1, null);
				null != a && a.getEwallet()
			} else if (403 == n.type)
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			else if (n.type == MessageCode.CODE_BALANCE_NOT_ENOUGH) {
				t.AppFacade.getInstance().sendNotification(PanelNotify.OPEN_SHOP);
				var s = n.message;
				Toast.launch(s, -100)
			} else {
				var s = n.message;
				Toast.launch(s, -100)
			}
		}
		,
		i.prototype.onSendUserNoticeIOError = function(t) {}
		,
		i.prototype.onSendUserNoticeProgress = function(t) {}
		,
		i.prototype.Notification_CHAT_ADD_NOTICE = function(t) {
			this.userNoticePanel.edit_message.text = "",
			t = JSON.parse(t),
			Main.noticeList.push({
				user_id: t.user_id,
				message: t.message,
				name: t.name,
				type: t.type,
				is_show: !1
			}),
			1 == t.type && (null != this.userNoticePanel.notice_data && this.userNoticePanel.notice_data.push(t),
			this.setData())
		}
		,
		i
	}(BaseMediator);
	e.NAME = "UserNoticeMediator",
	t.UserNoticeMediator = e,
	__reflect(e.prototype, "game.UserNoticeMediator");
	var i = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/UserNoticeItemSkin.exml",
			e
		}
		return __extends(e, t),
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this);
			var t = this;
			setTimeout(function() {
				t.setData()
			}, 10)
		}
		,
		e.prototype.dataChanged = function() {
			null != this.lb_name && this.setData()
		}
		,
		e.prototype.setData = function() {
			if (null != this.data) {
				void 0 == this.data.avatar_url || null == this.data.avatar_url || "" == this.data.avatar_url ? this.user_avatar.source = RES.getRes("person_png") : this.loadImage(this.data.avatar_url),
				this.vip_grade.source = RES.getRes("icon_vip_" + this.data.vip_grade + "_png");
				var t = this.data.name;
				t.length > 6 && (t = t.substring(0, 6)),
				this.lb_message.text = "【" + t + "】: " + this.data.message
			}
		}
		,
		e.prototype.loadImage = function(t) {
			if (null != t) {
				var e = new egret.ImageLoader;
				e.addEventListener(egret.Event.COMPLETE, this.bankerImageLoadCompleteHandler, this),
				e.load(t)
			}
		}
		,
		e.prototype.bankerImageLoadCompleteHandler = function(t) {
			var e = t.currentTarget;
			this.user_avatar.bitmapData = e.data
		}
		,
		e
	}(eui.ItemRenderer);
	t.UserNoticeItem = i,
	__reflect(i.prototype, "game.UserNoticeItem")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i(n) {
			void 0 === n && (n = null);
			var a = e.call(this, i.NAME, n) || this;
			return a.closeCallback = null,
			a.userTaskPanel = t.UserTaskPanel.getInstance(),
			a
		}
		return __extends(i, e),
		i.prototype.listNotificationInterests = function() {
			return [PanelNotify.OPEN_USER_TASK, PanelNotify.CLOSE_USER_TASK, PanelNotify.GET_SALARY]
		}
		,
		i.prototype.handleNotification = function(t) {
			var e = t.getBody();
			switch (t.getName()) {
			case PanelNotify.OPEN_USER_TASK:
				null != e && null != e.closeCallback && (this.closeCallback = e.closeCallback),
				this.showUI(this.userTaskPanel, !0, 0, 0, 5);
				break;
			case PanelNotify.CLOSE_USER_TASK:
				null != this.closeCallback && this.closeCallback(2),
				this.closePanel(6);
				break;
			case PanelNotify.GET_SALARY:
				this.getSalary()
			}
		}
		,
		i.prototype.initUI = function() {
			this.userTaskPanel.img_close.addEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this);
			var t = this.userTaskPanel.group_content.width
			  , e = this.userTaskPanel.group_content.height;
			this.drawWithdrawBg(t, e)
		}
		,
		i.prototype.drawWithdrawBg = function(t, e) {
			var i = new egret.Bitmap;
			i.texture = RES.getRes("bg_user_task_png");
			var n = new egret.Rectangle(315,180,10,10);
			i.scale9Grid = n,
			i.width = t,
			i.height = e,
			this.userTaskPanel.group_content.addChild(i),
			this.userTaskPanel.group_content.setChildIndex(i, 999),
			this.userTaskPanel.group_content.setChildIndex(this.userTaskPanel.group_list, 1e3)
		}
		,
		i.prototype.close = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			this.closePanel(6),
			this.userTaskPanel.img_close.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			null != this.closeCallback && this.closeCallback(1)
		}
		,
		i.prototype.initData = function() {
			this.getUserTask()
		}
		,
		i.prototype.setData = function() {
			this.userTaskPanel.list_user_task.dataProvider = new eui.ArrayCollection(this.userTaskPanel.data),
			null != this.userTaskPanel.data && (this.userTaskPanel.list_user_task.itemRenderer = t.UserTaskItem)
		}
		,
		i.prototype.getUserTask = function() {
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "user/getUserTask", null, this.onGetUserTaskComplete, this.onGetUserTaskIOError, this.onGetUserTaskProgress, this)
		}
		,
		i.prototype.onGetUserTaskComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_GET_TASK_SUCCESS) {
				var a = n.results;
				this.userTaskPanel.data = new Array;
				for (var s = 0; s < a.length; s++) {
					var o = a[s];
					1 != parseInt(o.type) && this.userTaskPanel.data.push(o)
				}
				this.setData()
			} else if (403 == n.type)
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			else {
				n.message;
				this.userTaskPanel.data = new Array,
				this.setData()
			}
		}
		,
		i.prototype.onGetUserTaskIOError = function(t) {}
		,
		i.prototype.onGetUserTaskProgress = function(t) {}
		,
		i.prototype.getSalary = function() {
			this.showLoading();
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "type",
				value: 5
			})
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "user/getTaskReward", t, this.onGetSalaryComplete, this.onGetSalaryIOError, this.onGetSalaryProgress, this)
		}
		,
		i.prototype.onGetSalaryComplete = function(e) {
			this.closeLoading();
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_GET_REWARD_SUCCESS)
				t.Fly.flyGold(100, 580, 100, 50, 1e3, 15, parseFloat(n.results.amount), function() {}),
				this.getUserTask(),
				this.getEwallet(),
				t.HeaderBarV2._instance.getUserTaskNum();
			else {
				if (403 == n.type)
					return void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				var a = n.message;
				Toast.launch(a, -100)
			}
		}
		,
		i.prototype.onGetSalaryIOError = function(t) {
			this.closeLoading()
		}
		,
		i.prototype.onGetSalaryProgress = function(t) {}
		,
		i.prototype.getEwallet = function() {
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "ewallet_type",
				value: "G"
			})
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + API.balance, t, this.onGetEwalletComplete, this.onGetEwalletIOError, this.onGetEwalletProgress, this)
		}
		,
		i.prototype.onGetEwalletComplete = function(e) {
			debugger
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_EWALLET_FOUND) {
				var a = n.results
				  , s = a.balance
				  , o = {
					gold_amount: s
				};
				t.AppFacade.getInstance().sendNotification(MainNotify.UPDATE_HEADER_EWALLET, o)
			} else {
				if (403 == n.type)
					return void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				n.message
			}
		}
		,
		i.prototype.onGetEwalletIOError = function(t) {}
		,
		i.prototype.onGetEwalletProgress = function(t) {}
		,
		i.prototype.showLoading = function() {
			if (null == this.userTaskPanel.loading_group) {
				this.userTaskPanel.loading_group = new eui.Group,
				this.userTaskPanel.loading_group.width = 719,
				this.userTaskPanel.loading_group.height = 1199,
				this.userTaskPanel.loading_group.verticalCenter = .5,
				this.userTaskPanel.loading_group.horizontalCenter = .5;
				var t = new egret.Sprite;
				t.graphics.clear(),
				t.graphics.beginFill(0, .6),
				t.graphics.drawRect(0, 0, GameConfig.curWidth(), GameConfig.curHeight()),
				t.graphics.endFill(),
				t.width = GameConfig.curWidth(),
				t.height = GameConfig.curHeight(),
				t.touchEnabled = !0,
				egret.Tween.get(t).to({
					alpha: 1
				}, 150),
				t.visible = !0,
				this.userTaskPanel.loading_group.addChild(t),
				null == this.userTaskPanel.loading_image && (this.userTaskPanel.loading_image = new eui.Image),
				this.userTaskPanel.loading_image.verticalCenter = .5,
				this.userTaskPanel.loading_image.horizontalCenter = .5,
				this.userTaskPanel.loading_image.source = RES.getRes("loading_run_png"),
				this.userTaskPanel.loading_image.anchorOffsetX = .5 * this.userTaskPanel.loading_image.width,
				this.userTaskPanel.loading_image.anchorOffsetY = .5 * this.userTaskPanel.loading_image.height,
				this.userTaskPanel.loading_group.addChild(this.userTaskPanel.loading_image)
			}
			GameLayerManager.gameLayer().effectLayer.contains(this.userTaskPanel.loading_group) || (GameLayerManager.gameLayer().effectLayer.addChild(this.userTaskPanel.loading_group),
			GameLayerManager.gameLayer().effectLayer.addEventListener(egret.Event.ENTER_FRAME, this.runLoading, this))
		}
		,
		i.prototype.runLoading = function(t) {
			this.userTaskPanel.loading_image.rotation += 3
		}
		,
		i.prototype.closeLoading = function() {
			GameLayerManager.gameLayer().effectLayer.contains(this.userTaskPanel.loading_group) && GameLayerManager.gameLayer().effectLayer.removeChild(this.userTaskPanel.loading_group),
			GameLayerManager.gameLayer().effectLayer.removeEventListener(egret.Event.ENTER_FRAME, this.runLoading, this)
		}
		,
		i
	}(BaseMediator);
	e.NAME = "UserTaskMediator",
	t.UserTaskMediator = e,
	__reflect(e.prototype, "game.UserTaskMediator");
	var i = function(e) {
		function i() {
			var t = e.call(this) || this;
			return t.addEventListener(eui.UIEvent.COMPLETE, t.uiCompHandler, t),
			t.skinName = "resource/ui/panel/UserTaskItemSkin.exml",
			t
		}
		return __extends(i, e),
		i.prototype.dataChanged = function() {
			null != this.lb_content && this.setData()
		}
		,
		i.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			this.setData()
		}
		,
		i.prototype.setData = function() {
			if (null != this.data) {
				var t = this.data.req_times
				  , e = this.data.times
				  , i = e / t * 100;
				this.lb_times.text = e + " / " + t,
				this.progress_bar.value = i;
				var n = this.data.type
				  , a = this.data.status;
				if (2 == n || 3 == n)
					this.img_task_name.source = null,
					this.btn_get.enabled = !1,
					1 == a ? this.lb_status.text = "未完成" : 2 == a && (this.lb_status.text = "已完成"),
					2 == n ? (this.img_task.source = RES.getRes("icon_user_task_100_bag_png"),
					this.lb_content.textFlow = [{
						text: "参与20期游戏，且每期下注不低于",
						style: {
							textColor: 16641430,
							size: 23
						}
					}, {
						text: "50万金币",
						style: {
							textColor: 16641430,
							size: 23
						}
					}]) : 3 == n && (this.lb_content.textFlow = [{
						text: "参与20期游戏，且每期都成为庄家，上庄金额不低于1000万",
						style: {
							textColor: 16641430,
							size: 23
						}
					}],
					this.img_task.source = RES.getRes("icon_user_task_1000_bag_png"));
				else if (4 == n)
					this.lb_content.textFlow = [{
						text: "完成新手任务领取",
						style: {
							textColor: 16641430,
							size: 23
						}
					}, {
						text: "10000",
						style: {
							textColor: 16366631,
							size: 23
						}
					}, {
						text: "金币",
						style: {
							textColor: 16641430,
							size: 23
						}
					}],
					1 == a ? (this.btn_get.enabled = !0,
					this.lb_status.text = "前往") : 2 == a && (this.btn_get.enabled = !1,
					this.lb_status.text = "已完成"),
					this.img_task.source = RES.getRes("icon_gold_bag_png"),
					this.img_task_name.source = RES.getRes("icon_new_user_task_png"),
					this.btn_get.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.goToNewUserTask, this),
					this.btn_get.addEventListener(egret.TouchEvent.TOUCH_TAP, this.goToNewUserTask, this);
				else if (5 == n) {
					if (this.lb_content.textFlow = [{
						text: "余额不足1000金币，补助",
						style: {
							textColor: 16641430,
							size: 23
						}
					}, {
						text: "5000",
						style: {
							textColor: 16366631,
							size: 23
						}
					}, {
						text: "金币，每日可领3次",
						style: {
							textColor: 16641430,
							size: 23
						}
					}],
					2 == a)
						this.btn_get.enabled = !1,
						this.lb_status.text = "已完成";
					else {
						var s = this.data.ewallet
						  , o = s.amount
						  , r = s.amount
						  , l = s.safe_box_amount;
						this.lb_status.text = "领取",
						parseFloat(o) + parseFloat(l) < 1e3 && parseFloat(r) + parseFloat(l) < 1e3 ? this.btn_get.enabled = !0 : this.btn_get.enabled = !1
					}
					this.img_task.source = RES.getRes("icon_gold_bag_png"),
					this.img_task_name.source = RES.getRes("icon_salary_png"),
					this.btn_get.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.getSaLary, this),
					this.btn_get.addEventListener(egret.TouchEvent.TOUCH_TAP, this.getSaLary, this)
				}
			}
		}
		,
		i.prototype.goToNewUserTask = function() {
			t.AppFacade.getInstance().sendNotification(PanelNotify.CLOSE_USER_TASK),
			t.SceneTrade.getInstance().stopBgSound(),
			t.SceneTrade.getInstance().playGrabSound(),
			setTimeout(function() {
				t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_GRAB_GUIDE)
			}, 400)
		}
		,
		i.prototype.getSaLary = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
			t.AppFacade.getInstance().sendNotification(PanelNotify.GET_SALARY)
		}
		,
		i.prototype.drawWithdrawBg = function(t, e) {
			var i = new egret.Bitmap;
			i.texture = RES.getRes("bg_user_task_item_png");
			var n = new egret.Rectangle(100,30,10,10);
			i.scale9Grid = n,
			i.width = t,
			i.height = e,
			this.group.addChild(i),
			this.group.setChildIndex(i, 999),
			this.group.setChildIndex(this.group_content, 1e3)
		}
		,
		i
	}(eui.ItemRenderer);
	t.UserTaskItem = i,
	__reflect(i.prototype, "game.UserTaskItem")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i(n) {
			void 0 === n && (n = null);
			var a = e.call(this, i.NAME, n) || this;
			return a.limit = 20,
			a.page = 1,
			a.total = 0,
			a.get_record_ing = !1,
			a.scV = 0,
			a.product_id = "",
			a.card_no = "",
			a.withdrawPanel = t.WithdrawPanel.getInstance(),
			a
		}
		return __extends(i, e),
		i.prototype.listNotificationInterests = function() {
			return [PanelNotify.OPEN_WITHDRAW, PanelNotify.CLOSE_WITHDRAW, PanelNotify.BUY_CARD, PanelNotify.SHOW_CARD_NO]
		}
		,
		i.prototype.handleNotification = function(t) {
			var e = t.getBody();
			switch (t.getName()) {
			case PanelNotify.OPEN_WITHDRAW:
				this.showUI(this.withdrawPanel, !0, 0, 0, 5);
				break;
			case PanelNotify.CLOSE_WITHDRAW:
				this.closePanel(6);
				break;
			case PanelNotify.BUY_CARD:
				this.product_id = e,
				this.showDialog();
				break;
			case PanelNotify.SHOW_CARD_NO:
				this.showCardNo(e)
			}
		}
		,
		i.prototype.showDialog = function() {
			this.withdrawPanel.group_dialog.x = -1 * this.withdrawPanel.group_dialog.width,
			this.withdrawPanel.group_dialog_parent.visible = !0,
			egret.Tween.get(this.withdrawPanel.group_dialog, {
				loop: !1
			}).to({
				x: (this.withdrawPanel.width - this.withdrawPanel.group_dialog.width) / 2
			}, 400),
			this.withdrawPanel.img_return.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeDialog, this),
			this.withdrawPanel.img_ok.addEventListener(egret.TouchEvent.TOUCH_TAP, this.buyCard, this)
		}
		,
		i.prototype.showCardNo = function(t) {
			this.card_no = t,
			this.showDialog(),
			this.withdrawPanel.img_ok.visible = !1,
			egret.Tween.get(this.withdrawPanel.img_return, {
				loop: !1
			}).to({
				x: (this.withdrawPanel.group_dialog.width - this.withdrawPanel.img_return.width) / 2
			}, 400),
			this.withdrawPanel.lb_dialog_content_1.text = "您的兑换码是:",
			this.withdrawPanel.lb_dialog_content_2.text = t,
			this.withdrawPanel.lb_dialog_content_2.x = (this.withdrawPanel.group_dialog.width - this.withdrawPanel.lb_dialog_content_2.width) / 2 - 70,
			this.showCopyLb()
		}
		,
		i.prototype.closeDialog = function() {
			this.product_id = "",
			this.card_no = "";
			var t = this;
			this.withdrawPanel.img_return.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.closeDialog, this),
			this.withdrawPanel.img_ok.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.buyCard, this),
			egret.Tween.get(this.withdrawPanel.group_dialog, {
				loop: !1
			}).to({
				x: -1 * this.withdrawPanel.group_dialog.width
			}, 400).call(function() {
				t.withdrawPanel.img_ok.visible = !0,
				t.withdrawPanel.lb_dialog_content_1.text = "您确定要兑换礼品?",
				t.withdrawPanel.lb_dialog_content_2.text = "",
				t.withdrawPanel.img_return.x = 117,
				t.withdrawPanel.img_ok.x = 397,
				t.withdrawPanel.group_dialog.contains(t.withdrawPanel.lb_copy) && t.withdrawPanel.group_dialog.removeChild(t.withdrawPanel.lb_copy),
				t.withdrawPanel.group_dialog_parent.visible = !1
			})
		}
		,
		i.prototype.initUI = function() {
			this.withdrawPanel.group_dialog_parent.visible = !1,
			this.withdrawPanel.group_detail.visible = !1,
			this.withdrawPanel.img_close.addEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.withdrawPanel.img_qrcode.addEventListener(egret.TouchEvent.TOUCH_TAP, this.openQRCode, this),
			this.withdrawPanel.img_withdraw_detail.addEventListener(egret.TouchEvent.TOUCH_TAP, this.showWithdrawDetail, this),
			this.drawWithdrawBg(this.withdrawPanel.group_content.width, this.withdrawPanel.group_content.height),
			this.drawWithdrawDialogBg(this.withdrawPanel.group_dialog.width, this.withdrawPanel.group_dialog.height)
		}
		,
		i.prototype.showWithdrawDetail = function() {
			var t = this;
			this.withdrawPanel.group_detail.x = this.withdrawPanel.width,
			this.withdrawPanel.group_detail.visible = !0,
			this.withdrawPanel.scroller_detail.visible = !1,
			egret.Tween.get(this.withdrawPanel.group_product, {
				loop: !1
			}).to({
				x: -1 * this.withdrawPanel.group_product.width
			}, 400).call(function() {
				t.drawWithdrawDetailBg(t.withdrawPanel.group_detail.width, t.withdrawPanel.group_detail.height),
				egret.Tween.get(t.withdrawPanel.group_detail, {
					loop: !1
				}).to({
					x: 45
				}, 400).call(function() {
					t.withdrawPanel.scroller_detail.visible = !0
				})
			}),
			this.withdrawPanel.scroller_detail.addEventListener(egret.TouchEvent.TOUCH_MOVE, this.moveListener, this),
			this.withdrawPanel.img_detail_close.addEventListener(egret.TouchEvent.TOUCH_TAP, this.closeWithdrawDetail, this),
			this.initWithdrawRecordData()
		}
		,
		i.prototype.closeWithdrawDetail = function() {
			var t = this;
			this.withdrawPanel.img_detail_close.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.closeWithdrawDetail, this),
			this.withdrawPanel.scroller_detail.removeEventListener(egret.TouchEvent.TOUCH_MOVE, this.moveListener, this),
			egret.Tween.get(this.withdrawPanel.group_detail, {
				loop: !1
			}).to({
				x: this.withdrawPanel.width
			}, 400).call(function() {
				egret.Tween.get(t.withdrawPanel.group_product, {
					loop: !1
				}).to({
					x: 45
				}, 400).call(function() {})
			})
		}
		,
		i.prototype.moveListener = function() {
			this.withdrawPanel.scroller_detail.viewport.scrollV + this.withdrawPanel.scroller_detail.height >= this.withdrawPanel.scroller_detail.viewport.contentHeight - 5 && this.total > 0 && (this.scV = this.withdrawPanel.scroller_detail.viewport.scrollV,
			this.getWithdrawRecord())
		}
		,
		i.prototype.initWithdrawRecordData = function() {
			this.limit = 20,
			this.page = 1,
			this.scV = 0,
			this.withdrawPanel.detail_data = new Array,
			this.getWithdrawRecord()
		}
		,
		i.prototype.getWithdrawRecord = function() {
			if (!(this.withdrawPanel.detail_data.length == this.total && this.total > 0 || this.get_record_ing)) {
				this.get_record_ing = !0;
				var t = new eui.ArrayCollection;
				var ui = Utils.getStorageObj(Keys.FK_UserInfo)
				t.addItem({
					key: "uid",
					value: ui.uid
				})
				t.addItem({
					key: "token",
					value: ui.token
				})
				t.addItem({
					key: "limit",
					value: this.limit
				})
				t.addItem({
					key: "page",
					value: this.page
				})
				t.addItem({
					key: "product_type",
					value: "T"
				})
				t.addItem({
					key: "movement_type",
					value: 5
				})
				this.showLoading()
				HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "order/getOrder", t, this.onGetWithdrawRecordComplete, this.onGetWithdrawRecordIOError, this.onGetWithdrawRecordProgress, this)
			}
		}
		,
		i.prototype.onGetWithdrawRecordComplete = function(e) {
			this.closeLoading(),
			this.get_record_ing = !1;
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_GET_ORDER_SUCCESS) {
				var a = n.results;
				this.total = n.total,
				this.page++;
				for (var s = 0; s < a.length; s++)
					this.withdrawPanel.detail_data.push(a[s]);
				this.setDetailData()
			} else if (403 == n.type)
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			else {
				n.message;
				this.get_record_ing = !1,
				this.withdrawPanel.detail_data = new Array,
				this.setData()
			}
		}
		,
		i.prototype.onGetWithdrawRecordIOError = function(t) {
			this.closeLoading()
		}
		,
		i.prototype.onGetWithdrawRecordProgress = function(t) {}
		,
		i.prototype.openQRCode = function() {
			var t = {
				qrcode_type: "kefu",
				qrcode_url: "../public/assets/img/icon_customer_service_qrcode.png",
				qrcode_action: "长按识别二维码，添加官方客服微信",
				qrcode_title: "官方兑换专属二维码，谨防诈骗"
			};
			showQRCodeImg(t)
		}
		,
		i.prototype.close = function() {
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().btn_dialog_sound_ready && t.SceneTrade.getInstance().btn_dialog_sound.play(0, 1),
			this.withdrawPanel.img_close.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.close, this),
			this.withdrawPanel.img_qrcode.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.openQRCode, this),
			this.withdrawPanel.img_withdraw_detail.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.showWithdrawDetail, this),
			this.closePanel(6)
		}
		,
		i.prototype.initData = function() {
			null == this.withdrawPanel.data && this.getProduct(),
			this.getEwallet()
		}
		,
		i.prototype.setData = function() {
			this.withdrawPanel.withdrawList.dataProvider = new eui.ArrayCollection(this.withdrawPanel.data),
			null != this.withdrawPanel.data && (this.withdrawPanel.withdrawList.itemRenderer = t.WithdrawItem)
		}
		,
		i.prototype.setDetailData = function() {
			this.withdrawPanel.list_detail.dataProvider = new eui.ArrayCollection(this.withdrawPanel.detail_data),
			null != this.withdrawPanel.detail_data && (this.withdrawPanel.list_detail.itemRenderer = t.WithdrawRecordItem,
			this.withdrawPanel.list_detail.validateNow(),
			this.withdrawPanel.scroller_detail.viewport.scrollV = this.scV)
		}
		,
		i.prototype.getProduct = function() {
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "type",
				value: "T"
			})
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "product/get", t, this.onGetProductComplete, this.onGetProductIOError, this.onGetProductProgress, this)
		}
		,
		i.prototype.onGetProductComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_PRODUCT_FOUND) {
				var a = n.results;
				this.withdrawPanel.data = new Array;
				for (var s = 0; s < a.length; s++) {
					var o = a[s]
					  , r = "";
					r = s >= a.length - 1 ? "icon_iphone6_png" : s >= a.length - 2 ? "icon_ipadmini2_png" : 3 >= s ? "icon_red_bag_png" : s > 3 && 8 >= s ? "icon_gold_bag_png" : "icon_iphone6_png";
					var l = "消耗" + Utils.moneyFormat(parseFloat(o.amount) + parseFloat(o.amount) * o.fee, 2) + "金币"
					  , h = Utils.moneyFormat(parseFloat(o.amount) + parseFloat(o.amount) * o.fee, 2) + "金币"
					  , d = parseFloat(o.value) + "元微信红包";
					s == a.length - 1 ? d = "iPhone 7 plus" : s == a.length - 2 && (d = "iPad MiNi 2"),
					0 == o.fee && (h = "原价" + Utils.moneyFormat(parseFloat(o.amount) + .05 * parseFloat(o.amount), 2) + "金币",
					l = "现消耗" + Utils.moneyFormat(parseFloat(o.amount) + parseFloat(o.amount) * o.fee, 2) + "金币");
					var _ = "还剩" + o.quantity + "个";
					this.withdrawPanel.data.push({
						id: o.id,
						icon: r,
						content: d,
						price: l,
						origin_price: h,
						fee: o.fee,
						quantity: _
					})
				}
				this.setData()
			} else if (403 == n.type)
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			else {
				n.message
			}
		}
		,
		i.prototype.onGetProductIOError = function(t) {}
		,
		i.prototype.onGetProductProgress = function(t) {}
		,
		i.prototype.buyCard = function() {
			if (null != this.product_id && "" != this.product_id) {
				var t = new eui.ArrayCollection;
				var ui = Utils.getStorageObj(Keys.FK_UserInfo)
				t.addItem({
					key: "uid",
					value: ui.uid
				})
				t.addItem({
					key: "token",
					value: ui.token
				})
				t.addItem({
					key: "product_id",
					value: this.product_id
				}),
				this.showLoading(),
				HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "ewallet/buyCard", t, this.onBuyProductComplete, this.onBuyProductIOError, this.onBuyProductProgress, this)
			}
		}
		,
		i.prototype.onBuyProductComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_BUY_PRODUCT_SUCCESS)
				this.closeLoading(),
				this.withdrawPanel.img_ok.visible = !1,
				egret.Tween.get(this.withdrawPanel.img_return, {
					loop: !1
				}).to({
					x: (this.withdrawPanel.group_dialog.width - this.withdrawPanel.img_return.width) / 2
				}, 400),
				this.withdrawPanel.lb_dialog_content_1.text = "兑换成功！您的兑换码是:",
				this.withdrawPanel.lb_dialog_content_2.text = n.results.card_no,
				this.withdrawPanel.lb_dialog_content_2.x = (this.withdrawPanel.group_dialog.width - this.withdrawPanel.lb_dialog_content_2.width) / 2 - 70,
				this.card_no = n.results.card_no,
				this.showCopyLb(),
				this.getEwallet();
			else if (403 == n.type)
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN),
				this.closeLoading();
			else {
				var a = n.message;
				this.closeLoading(),
				this.closeDialog(),
				Toast.launch(a, -100)
			}
		}
		,
		i.prototype.showCopyLb = function(t) {
			if (void 0 === t && (t = 0),
			null == this.withdrawPanel.lb_copy) {
				this.withdrawPanel.lb_copy = new eui.Label;
				var e = (new egret.HtmlTextParser).parser("<u>点击复制</u>");
				this.withdrawPanel.lb_copy.textFlow = e
			}
			this.withdrawPanel.lb_copy.x = this.withdrawPanel.group_dialog.width / 2 + t,
			this.withdrawPanel.lb_copy.y = this.withdrawPanel.lb_dialog_content_2.y,
			this.withdrawPanel.group_dialog.addChild(this.withdrawPanel.lb_copy),
			this.withdrawPanel.lb_copy.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.copyCardNo, this),
			this.withdrawPanel.lb_copy.addEventListener(egret.TouchEvent.TOUCH_TAP, this.copyCardNo, this)
		}
		,
		i.prototype.copyCardNo = function() {
			this.copy(this.card_no)
		}
		,
		i.prototype.onBuyProductIOError = function(t) {
			this.closeLoading()
		}
		,
		i.prototype.onBuyProductProgress = function(t) {}
		,
		i.prototype.getEwallet = function() {
			var t = new eui.ArrayCollection;
			var ui = Utils.getStorageObj(Keys.FK_UserInfo)
			t.addItem({
				key: "uid",
				value: ui.uid
			})
			t.addItem({
				key: "token",
				value: ui.token
			})
			t.addItem({
				key: "ewallet_type",
				value: "G"
			})
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + API.balance, t, this.onGetEwalletComplete, this.onGetEwalletIOError, this.onGetEwalletProgress, this)
		}
		,
		i.prototype.onGetEwalletComplete = function(e) {
			debugger
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_EWALLET_FOUND) {
				var a = n.results
				  , s = a.balance;
				this.withdrawPanel.lb_balance.text = Utils.moneyFormat(s, 2).toString();
				var o = {
					gold_amount: s
				};
				t.AppFacade.getInstance().sendNotification(MainNotify.UPDATE_HEADER_EWALLET, o)
			} else {
				if (403 == n.type)
					return void t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
				n.message
			}
		}
		,
		i.prototype.onGetEwalletIOError = function(t) {}
		,
		i.prototype.onGetEwalletProgress = function(t) {}
		,
		i.prototype.showLoading = function() {
			if (null == this.withdrawPanel.loading_group) {
				this.withdrawPanel.loading_group = new eui.Group,
				this.withdrawPanel.loading_group.width = 719,
				this.withdrawPanel.loading_group.height = 1199,
				this.withdrawPanel.loading_group.verticalCenter = .5,
				this.withdrawPanel.loading_group.horizontalCenter = .5;
				var t = new egret.Sprite;
				t.graphics.clear(),
				t.graphics.beginFill(0, .6),
				t.graphics.drawRect(0, 0, GameConfig.curWidth(), GameConfig.curHeight()),
				t.graphics.endFill(),
				t.width = GameConfig.curWidth(),
				t.height = GameConfig.curHeight(),
				t.touchEnabled = !0,
				egret.Tween.get(t).to({
					alpha: 1
				}, 150),
				t.visible = !0,
				this.withdrawPanel.loading_group.addChild(t),
				null == this.withdrawPanel.loading_image && (this.withdrawPanel.loading_image = new eui.Image),
				this.withdrawPanel.loading_image.verticalCenter = .5,
				this.withdrawPanel.loading_image.horizontalCenter = .5,
				this.withdrawPanel.loading_image.source = RES.getRes("loading_run_png"),
				this.withdrawPanel.loading_image.anchorOffsetX = .5 * this.withdrawPanel.loading_image.width,
				this.withdrawPanel.loading_image.anchorOffsetY = .5 * this.withdrawPanel.loading_image.height,
				this.withdrawPanel.loading_group.addChild(this.withdrawPanel.loading_image)
			}
			GameLayerManager.gameLayer().effectLayer.contains(this.withdrawPanel.loading_group) || (GameLayerManager.gameLayer().effectLayer.addChild(this.withdrawPanel.loading_group),
			GameLayerManager.gameLayer().effectLayer.addEventListener(egret.Event.ENTER_FRAME, this.runLoading, this))
		}
		,
		i.prototype.runLoading = function(t) {
			this.withdrawPanel.loading_image.rotation += 3
		}
		,
		i.prototype.closeLoading = function() {
			GameLayerManager.gameLayer().effectLayer.contains(this.withdrawPanel.loading_group) && GameLayerManager.gameLayer().effectLayer.removeChild(this.withdrawPanel.loading_group),
			GameLayerManager.gameLayer().effectLayer.removeEventListener(egret.Event.ENTER_FRAME, this.runLoading, this)
		}
		,
		i.prototype.drawWithdrawBg = function(t, e) {
			var i = new egret.Bitmap;
			i.texture = RES.getRes("bg_withdraw_png");
			var n = new egret.Rectangle(315,180,10,10);
			i.scale9Grid = n,
			i.width = t,
			i.height = e,
			i.y = this.withdrawPanel.group_content.y,
			this.withdrawPanel.group_product.addChild(i),
			this.withdrawPanel.group_product.setChildIndex(i, 999),
			this.withdrawPanel.group_product.setChildIndex(this.withdrawPanel.group_content, 1e3),
			this.withdrawPanel.setChildIndex(this.withdrawPanel.group_dialog_parent, 1001)
		}
		,
		i.prototype.drawWithdrawDialogBg = function(t, e) {
			var i = new egret.Bitmap;
			i.texture = RES.getRes("bg_withdraw_dialog_png");
			var n = new egret.Rectangle(315,75,10,10);
			i.scale9Grid = n,
			i.width = t,
			i.height = e,
			i.x = (this.withdrawPanel.group_dialog.width - t) / 2,
			i.y = 0,
			this.withdrawPanel.group_dialog.addChild(i),
			this.withdrawPanel.group_dialog.setChildIndex(i, 999),
			this.withdrawPanel.group_dialog.setChildIndex(this.withdrawPanel.lb_notice, 1e3),
			this.withdrawPanel.group_dialog.setChildIndex(this.withdrawPanel.lb_dialog_content_1, 1e3),
			this.withdrawPanel.group_dialog.setChildIndex(this.withdrawPanel.lb_dialog_content_2, 1e3),
			this.withdrawPanel.group_dialog.setChildIndex(this.withdrawPanel.img_ok, 1e3),
			this.withdrawPanel.group_dialog.setChildIndex(this.withdrawPanel.img_return, 1e3)
		}
		,
		i.prototype.drawWithdrawDetailBg = function(t, e) {
			var i = new egret.Bitmap;
			i.texture = RES.getRes("bg_withdraw_dialog_png");
			var n = new egret.Rectangle(315,75,10,10);
			i.scale9Grid = n,
			i.width = t,
			i.height = e,
			this.withdrawPanel.group_detail.addChild(i),
			this.withdrawPanel.group_detail.setChildIndex(i, 999),
			this.withdrawPanel.group_detail.setChildIndex(this.withdrawPanel.img_detail_close, 1e3),
			this.withdrawPanel.group_detail.setChildIndex(this.withdrawPanel.lb_detail_title, 1e3),
			this.withdrawPanel.group_detail.setChildIndex(this.withdrawPanel.lb_detail_title_date, 1e3),
			this.withdrawPanel.group_detail.setChildIndex(this.withdrawPanel.lb_detail_title_name, 1e3),
			this.withdrawPanel.group_detail.setChildIndex(this.withdrawPanel.lb_detail_title_status, 1e3),
			this.withdrawPanel.group_detail.setChildIndex(this.withdrawPanel.scroller_detail, 1e3)
		}
		,
		i.prototype.copy = function(t) {
			var e = document.createElement("input");
			e.value = t,
			document.body.appendChild(e),
			e.select(),
			e.setSelectionRange(0, e.value.length),
			document.execCommand("Copy"),
			document.body.removeChild(e),
			Toast.launch("复制成功", -100)
		}
		,
		i
	}(BaseMediator);
	e.NAME = "WithdrawMediator",
	t.WithdrawMediator = e,
	__reflect(e.prototype, "game.WithdrawMediator");
	var i = function(e) {
		function i() {
			var t = e.call(this) || this;
			return t.addEventListener(eui.UIEvent.COMPLETE, t.uiCompHandler, t),
			t.skinName = "resource/ui/panel/WithdrawItemSkin.exml",
			t
		}
		return __extends(i, e),
		i.prototype.dataChanged = function() {
			null != this.lb_content && this.setData()
		}
		,
		i.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			this.setData()
		}
		,
		i.prototype.setData = function() {
			if (null != this.data) {
				if (this.img_product.source = RES.getRes(this.data.icon),
				this.lb_content.text = this.data.content,
				this.lb_num.text = this.data.quantity,
				0 == this.data.fee) {
					this.lb_content.y = 23,
					this.lb_origin_price.visible = !0,
					this.lb_origin_price.text = this.data.origin_price;
					var t = 8345750
					  , e = this.lb_origin_price.x
					  , i = this.lb_origin_price.x + this.lb_origin_price.width
					  , n = this.lb_origin_price.y + this.lb_origin_price.height / 2
					  , a = n;
					this.drawLine(e, i, n, a, t, this, 2)
				} else
					this.lb_content.y = 33,
					this.lb_origin_price.visible = !1,
					this.lb_origin_price.text = "",
					this.contains(this.line) && this.removeChild(this.line);
				this.lb_price.text = this.data.price,
				this.img_withdraw.name = this.data.id,
				this.img_withdraw.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.buyProduct, this),
				this.img_withdraw.addEventListener(egret.TouchEvent.TOUCH_TAP, this.buyProduct, this)
			}
		}
		,
		i.prototype.buyProduct = function(e) {
			var i = e.currentTarget.name;
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
			t.AppFacade.getInstance().sendNotification(PanelNotify.BUY_CARD, i)
		}
		,
		i.prototype.drawLine = function(t, e, i, n, a, s, o) {
			void 0 === o && (o = 2),
			null == this.line && (this.line = new egret.Shape),
			this.line.graphics.lineStyle(o, a),
			this.line.graphics.moveTo(t, i),
			this.line.graphics.lineTo(e, n),
			this.line.graphics.endFill(),
			s.addChild(this.line)
		}
		,
		i
	}(eui.ItemRenderer);
	t.WithdrawItem = i,
	__reflect(i.prototype, "game.WithdrawItem");
	var n = function(e) {
		function i() {
			var t = e.call(this) || this;
			return t.addEventListener(eui.UIEvent.COMPLETE, t.uiCompHandler, t),
			t.skinName = "resource/ui/panel/WithdrawRecordItemSkin.exml",
			t
		}
		return __extends(i, e),
		i.prototype.dataChanged = function() {
			null != this.lb_date && this.setData()
		}
		,
		i.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			this.setData()
		}
		,
		i.prototype.setData = function() {
			if (null != this.data) {
				var t = Utils.convertTime(this.data.created_at, "Y-m-d H:i:s")
				  , e = parseFloat(this.data.value) + "元微信红包";
				parseFloat(this.data.value) >= 2e3 && (e = "iPad MiNi 2"),
				parseFloat(this.data.value) >= 4e3 && (e = "iPhone 7 plus");
				var i = this.data.status;
				4 == i ? i = "未使用" : 5 == i ? i = "已使用" : 6 == i && (i = "无效"),
				this.lb_date.text = t,
				this.lb_name.text = e,
				this.lb_status.text = i;
				var n = 0
				  , a = this.width - 20
				  , s = this.y
				  , o = s
				  , r = 7552915;
				this.drawLine(n, a, s, o, r, this, 1),
				this.img_withdraw_code.name = this.data.card_no,
				this.img_withdraw_code.removeEventListener(egret.TouchEvent.TOUCH_TAP, this.showCardNo, this),
				this.img_withdraw_code.addEventListener(egret.TouchEvent.TOUCH_TAP, this.showCardNo, this)
			}
		}
		,
		i.prototype.drawLine = function(t, e, i, n, a, s, o) {
			void 0 === o && (o = 2);
			var r = new egret.Shape;
			return r.graphics.lineStyle(o, a),
			r.graphics.moveTo(t, i),
			r.graphics.lineTo(e, n),
			r.graphics.endFill(),
			s.addChild(r),
			r
		}
		,
		i.prototype.showCardNo = function(e) {
			var i = e.currentTarget.name;
			t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().normal_btn_sound_ready && t.SceneTrade.getInstance().normal_btn_sound.play(0, 1),
			t.AppFacade.getInstance().sendNotification(PanelNotify.SHOW_CARD_NO, i)
		}
		,
		i
	}(eui.ItemRenderer);
	t.WithdrawRecordItem = n,
	__reflect(n.prototype, "game.WithdrawRecordItem")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/BigWinnerPanelSkin.exml",
			e
		}
		return __extends(e, t),
		e.getInstance = function() {
			return this._instance || (this._instance = new e),
			this._instance
		}
		,
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this)
		}
		,
		e.prototype.partAdded = function(e, i) {
			t.prototype.partAdded.call(this, e, i)
		}
		,
		e.prototype.childrenCreated = function() {
			t.prototype.childrenCreated.call(this)
		}
		,
		e
	}(eui.Component);
	t.BigWinnerPanel = e,
	__reflect(e.prototype, "game.BigWinnerPanel", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/ClassicalBankerQueuePanelSkin.exml",
			e
		}
		return __extends(e, t),
		e.getInstance = function() {
			return this._instance || (this._instance = new e),
			this._instance
		}
		,
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			this.list_banker_queue.layout.gap = 10
		}
		,
		e.prototype.partAdded = function(e, i) {
			t.prototype.partAdded.call(this, e, i)
		}
		,
		e.prototype.childrenCreated = function() {
			t.prototype.childrenCreated.call(this)
		}
		,
		e
	}(eui.Component);
	t.ClassicalBankerQueuePanel = e,
	__reflect(e.prototype, "game.ClassicalBankerQueuePanel", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/ClassicalHistoryPanelSkin.exml",
			e
		}
		return __extends(e, t),
		e.getInstance = function() {
			return this._instance || (this._instance = new e),
			this._instance
		}
		,
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this)
		}
		,
		e.prototype.partAdded = function(e, i) {
			t.prototype.partAdded.call(this, e, i)
		}
		,
		e.prototype.childrenCreated = function() {
			t.prototype.childrenCreated.call(this)
		}
		,
		e
	}(eui.Component);
	t.ClassicalHistoryPanel = e,
	__reflect(e.prototype, "game.ClassicalHistoryPanel", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/ClassicalKlineHelpPanelSkin.exml",
			e
		}
		return __extends(e, t),
		e.getInstance = function() {
			return this._instance || (this._instance = new e),
			this._instance
		}
		,
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this)
		}
		,
		e.prototype.partAdded = function(e, i) {
			t.prototype.partAdded.call(this, e, i)
		}
		,
		e.prototype.childrenCreated = function() {
			t.prototype.childrenCreated.call(this)
		}
		,
		e
	}(eui.Component);
	t.ClassicalKlineHelpPanel = e,
	__reflect(e.prototype, "game.ClassicalKlineHelpPanel", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/CustomTopupPanelSkin.exml",
			e
		}
		return __extends(e, t),
		e.getInstance = function() {
			return this._instance || (this._instance = new e),
			this._instance
		}
		,
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this)
		}
		,
		e.prototype.partAdded = function(e, i) {
			t.prototype.partAdded.call(this, e, i)
		}
		,
		e.prototype.childrenCreated = function() {
			t.prototype.childrenCreated.call(this)
		}
		,
		e
	}(eui.Component);
	t.CustomTopupPanel = e,
	__reflect(e.prototype, "game.CustomTopupPanel", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/EmergencyNoticePanelSkin.exml",
			e
		}
		return __extends(e, t),
		e.getInstance = function() {
			return this._instance || (this._instance = new e),
			this._instance
		}
		,
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this)
		}
		,
		e.prototype.partAdded = function(e, i) {
			t.prototype.partAdded.call(this, e, i)
		}
		,
		e.prototype.childrenCreated = function() {
			t.prototype.childrenCreated.call(this)
		}
		,
		e
	}(eui.Component);
	t.EmergencyNoticePanel = e,
	__reflect(e.prototype, "game.EmergencyNoticePanel", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/FirstTopupPanelSkin.exml",
			e
		}
		return __extends(e, t),
		e.getInstance = function() {
			return this._instance || (this._instance = new e),
			this._instance
		}
		,
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this)
		}
		,
		e.prototype.partAdded = function(e, i) {
			t.prototype.partAdded.call(this, e, i)
		}
		,
		e.prototype.childrenCreated = function() {
			t.prototype.childrenCreated.call(this)
		}
		,
		e
	}(eui.Component);
	t.FirstTopupPanel = e,
	__reflect(e.prototype, "game.FirstTopupPanel", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/HelpPanelSkin.exml",
			e
		}
		return __extends(e, t),
		e.getInstance = function() {
			return this._instance || (this._instance = new e),
			this._instance
		}
		,
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this)
		}
		,
		e.prototype.partAdded = function(e, i) {
			t.prototype.partAdded.call(this, e, i)
		}
		,
		e.prototype.childrenCreated = function() {
			t.prototype.childrenCreated.call(this)
		}
		,
		e
	}(eui.Component);
	t.HelpPanel = e,
	__reflect(e.prototype, "game.HelpPanel", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/InviteListPanelSkin.exml",
			e
		}
		return __extends(e, t),
		e.getInstance = function() {
			return this._instance || (this._instance = new e),
			this._instance
		}
		,
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this)
		}
		,
		e.prototype.partAdded = function(e, i) {
			t.prototype.partAdded.call(this, e, i)
		}
		,
		e.prototype.childrenCreated = function() {
			t.prototype.childrenCreated.call(this)
		}
		,
		e
	}(eui.Component);
	t.InviteListPanel = e,
	__reflect(e.prototype, "game.InviteListPanel", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/KlineHelpPanelSkin.exml",
			e
		}
		return __extends(e, t),
		e.getInstance = function() {
			return this._instance || (this._instance = new e),
			this._instance
		}
		,
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this)
		}
		,
		e.prototype.partAdded = function(e, i) {
			t.prototype.partAdded.call(this, e, i)
		}
		,
		e.prototype.childrenCreated = function() {
			t.prototype.childrenCreated.call(this)
		}
		,
		e
	}(eui.Component);
	t.KlineHelpPanel = e,
	__reflect(e.prototype, "game.KlineHelpPanel", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/MoneyRankPanelSkin.exml",
			e
		}
		return __extends(e, t),
		e.getInstance = function() {
			return this._instance || (this._instance = new e),
			this._instance
		}
		,
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this)
		}
		,
		e.prototype.partAdded = function(e, i) {
			t.prototype.partAdded.call(this, e, i)
		}
		,
		e.prototype.childrenCreated = function() {
			t.prototype.childrenCreated.call(this)
		}
		,
		e
	}(eui.Component);
	t.MoneyRankPanel = e,
	__reflect(e.prototype, "game.MoneyRankPanel", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/MyClassicalSettleHistoryPanelSkin.exml",
			e
		}
		return __extends(e, t),
		e.getInstance = function() {
			return this._instance || (this._instance = new e),
			this._instance
		}
		,
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this)
		}
		,
		e.prototype.partAdded = function(e, i) {
			t.prototype.partAdded.call(this, e, i)
		}
		,
		e.prototype.childrenCreated = function() {
			t.prototype.childrenCreated.call(this)
		}
		,
		e
	}(eui.Component);
	t.MyClassicalSettleHistoryPanel = e,
	__reflect(e.prototype, "game.MyClassicalSettleHistoryPanel", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/MySettleHistoryPanelSkin.exml",
			e
		}
		return __extends(e, t),
		e.getInstance = function() {
			return this._instance || (this._instance = new e),
			this._instance
		}
		,
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this)
		}
		,
		e.prototype.partAdded = function(e, i) {
			t.prototype.partAdded.call(this, e, i)
		}
		,
		e.prototype.childrenCreated = function() {
			t.prototype.childrenCreated.call(this)
		}
		,
		e
	}(eui.Component);
	t.MySettleHistoryPanel = e,
	__reflect(e.prototype, "game.MySettleHistoryPanel", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/RegisterRewardPanelSkin.exml",
			e
		}
		return __extends(e, t),
		e.getInstance = function() {
			return this._instance || (this._instance = new e),
			this._instance
		}
		,
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this)
		}
		,
		e.prototype.partAdded = function(e, i) {
			t.prototype.partAdded.call(this, e, i)
		}
		,
		e.prototype.childrenCreated = function() {
			t.prototype.childrenCreated.call(this)
		}
		,
		e
	}(eui.Component);
	t.RegisterRewardPanel = e,
	__reflect(e.prototype, "game.RegisterRewardPanel", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/SafeBoxPanelSkin.exml",
			e
		}
		return __extends(e, t),
		e.getInstance = function() {
			return this._instance || (this._instance = new e),
			this._instance
		}
		,
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this)
		}
		,
		e.prototype.partAdded = function(e, i) {
			t.prototype.partAdded.call(this, e, i)
		}
		,
		e.prototype.childrenCreated = function() {
			t.prototype.childrenCreated.call(this)
		}
		,
		e
	}(eui.Component);
	t.SafeBoxPanel = e,
	__reflect(e.prototype, "game.SafeBoxPanel", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/SettleHistoryPanelSkin.exml",
			e
		}
		return __extends(e, t),
		e.getInstance = function() {
			return this._instance || (this._instance = new e),
			this._instance
		}
		,
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this)
		}
		,
		e.prototype.partAdded = function(e, i) {
			t.prototype.partAdded.call(this, e, i)
		}
		,
		e.prototype.childrenCreated = function() {
			t.prototype.childrenCreated.call(this)
		}
		,
		e
	}(eui.Component);
	t.SettleHistoryPanel = e,
	__reflect(e.prototype, "game.SettleHistoryPanel", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/ShopPanelSkin.exml",
			e
		}
		return __extends(e, t),
		e.getInstance = function() {
			return this._instance || (this._instance = new e),
			this._instance
		}
		,
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this)
		}
		,
		e.prototype.partAdded = function(e, i) {
			t.prototype.partAdded.call(this, e, i)
		}
		,
		e.prototype.childrenCreated = function() {
			t.prototype.childrenCreated.call(this)
		}
		,
		e
	}(eui.Component);
	t.ShopPanel = e,
	__reflect(e.prototype, "game.ShopPanel", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.normal_days = 0,
			e.activity_days = 0,
			e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/SignPanelSkin.exml",
			e
		}
		return __extends(e, t),
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this)
		}
		,
		e.prototype.partAdded = function(e, i) {
			t.prototype.partAdded.call(this, e, i)
		}
		,
		e.prototype.childrenCreated = function() {
			t.prototype.childrenCreated.call(this)
		}
		,
		e
	}(eui.Component);
	t.SignPanel = e,
	__reflect(e.prototype, "game.SignPanel", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/TipPanelSkin.exml",
			e
		}
		return __extends(e, t),
		e.getInstance = function() {
			return this._instance || (this._instance = new e),
			this._instance
		}
		,
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this)
		}
		,
		e.prototype.partAdded = function(e, i) {
			t.prototype.partAdded.call(this, e, i)
		}
		,
		e.prototype.childrenCreated = function() {
			t.prototype.childrenCreated.call(this)
		}
		,
		e
	}(eui.Component);
	t.TipPanel = e,
	__reflect(e.prototype, "game.TipPanel", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/TopupReturnIntroducePanelSkin.exml",
			e
		}
		return __extends(e, t),
		e.getInstance = function() {
			return this._instance || (this._instance = new e),
			this._instance
		}
		,
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this)
		}
		,
		e.prototype.partAdded = function(e, i) {
			t.prototype.partAdded.call(this, e, i)
		}
		,
		e.prototype.childrenCreated = function() {
			t.prototype.childrenCreated.call(this)
		}
		,
		e
	}(eui.Component);
	t.TopupReturnIntroducePanel = e,
	__reflect(e.prototype, "game.TopupReturnIntroducePanel", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/UserAccountPanelSkin.exml",
			e
		}
		return __extends(e, t),
		e.getInstance = function() {
			return this._instance || (this._instance = new e),
			this._instance
		}
		,
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this)
		}
		,
		e.prototype.partAdded = function(e, i) {
			t.prototype.partAdded.call(this, e, i)
		}
		,
		e.prototype.childrenCreated = function() {
			t.prototype.childrenCreated.call(this)
		}
		,
		e
	}(eui.Component);
	t.UserAccountPanel = e,
	__reflect(e.prototype, "game.UserAccountPanel", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/UserNoticePanelSkin.exml",
			e
		}
		return __extends(e, t),
		e.getInstance = function(t) {
			return this._instance || t && (this._instance = new e),
			this._instance
		}
		,
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this)
		}
		,
		e.prototype.partAdded = function(e, i) {
			t.prototype.partAdded.call(this, e, i)
		}
		,
		e.prototype.childrenCreated = function() {
			t.prototype.childrenCreated.call(this)
		}
		,
		e
	}(eui.Component);
	t.UserNoticePanel = e,
	__reflect(e.prototype, "game.UserNoticePanel", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/UserTaskPanelSkin.exml",
			e
		}
		return __extends(e, t),
		e.getInstance = function() {
			return this._instance || (this._instance = new e),
			this._instance
		}
		,
		e.prototype.uiCompHandler = function() {
			this.list_user_task.layout.gap = 5,
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this)
		}
		,
		e.prototype.partAdded = function(e, i) {
			t.prototype.partAdded.call(this, e, i)
		}
		,
		e.prototype.childrenCreated = function() {
			t.prototype.childrenCreated.call(this)
		}
		,
		e
	}(eui.Component);
	t.UserTaskPanel = e,
	__reflect(e.prototype, "game.UserTaskPanel", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/panel/WithdrawPanelSkin.exml",
			e
		}
		return __extends(e, t),
		e.getInstance = function() {
			return this._instance || (this._instance = new e),
			this._instance
		}
		,
		e.prototype.uiCompHandler = function() {
			this.withdrawList.layout.gap = 0,
			this.list_detail.layout.gap = 0,
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this)
		}
		,
		e.prototype.partAdded = function(e, i) {
			t.prototype.partAdded.call(this, e, i)
		}
		,
		e.prototype.childrenCreated = function() {
			t.prototype.childrenCreated.call(this)
		}
		,
		e
	}(eui.Component);
	t.WithdrawPanel = e,
	__reflect(e.prototype, "game.WithdrawPanel", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var PopUpManager;
!function(t) {
	function e(t, e, i, n, a, s, o) {
		if (void 0 === e && (e = !1),
		void 0 === i && (i = 0),
		void 0 === n && (n = 0),
		void 0 === a && (a = 0),
		void 0 === s && (s = !1),
		void 0 === o && (o = .6),
		!GameLayerManager.gameLayer().panelLayer.contains(t)) {
			t.scaleX = 1,
			t.scaleY = 1,
			t.x = 0,
			t.y = 0,
			t.alpha = 1,
			e && (this.darkSprite && GameLayerManager.gameLayer().panelLayer.contains(this.darkSprite) && GameLayerManager.gameLayer().panelLayer.removeChild(this.darkSprite),
			this.darkSprite = new egret.Sprite,
			this.darkSprite.graphics.clear(),
			this.darkSprite.graphics.beginFill(0, o),
			this.darkSprite.graphics.drawRect(0, 0, GameConfig.curWidth(), GameConfig.curHeight()),
			this.darkSprite.graphics.endFill(),
			this.darkSprite.width = GameConfig.curWidth(),
			this.darkSprite.height = GameConfig.curHeight(),
			GameLayerManager.gameLayer().panelLayer.contains(this.darkSprite) || GameLayerManager.gameLayer().panelLayer.addChild(this.darkSprite),
			this.darkSprite.touchEnabled = !0,
			egret.Tween.get(this.darkSprite).to({
				alpha: 1
			}, 150),
			this.darkSprite.visible = !0),
			GameLayerManager.gameLayer().panelLayer.addChild(t),
			GameConfig.curPanel = t,
			0 != i ? (t.x = GameConfig.curWidth() / 2 - i / 2,
			t.y = GameConfig.curHeight() / 2 - n / 2) : (i = t.width,
			n = t.height);
			var r = GameConfig.curWidth() / 2 - i / 2
			  , l = GameConfig.curHeight() / 2 - n / 2;
			switch (a) {
			case 0:
				break;
			case 1:
				t.alpha = 0,
				t.scaleX = .5,
				t.scaleY = .5,
				t.x = t.x + i / 4,
				t.y = t.y + n / 4,
				egret.Tween.get(t).to({
					alpha: 1,
					scaleX: 1,
					scaleY: 1,
					x: t.x - i / 4,
					y: t.y - n / 4
				}, 500, egret.Ease.backOut);
				break;
			case 2:
				t.alpha = 0,
				t.scaleX = .5,
				t.scaleY = .5,
				t.x = t.x + i / 4,
				t.y = t.y + n / 4,
				egret.Tween.get(t).to({
					alpha: 1,
					scaleX: 1,
					scaleY: 1,
					x: t.x - i / 4,
					y: t.y - n / 4
				}, 500, egret.Ease.elasticOut);
				break;
			case 3:
				s ? (t.x = -i,
				egret.Tween.get(t).to({
					x: r
				}, 500, egret.Ease.cubicOut)) : (t.x = -i,
				egret.Tween.get(t).to({
					x: 0
				}, 500, egret.Ease.cubicOut));
				break;
			case 4:
				s ? (t.x = i,
				egret.Tween.get(t).to({
					x: r
				}, 500, egret.Ease.cubicOut)) : (t.x = i,
				egret.Tween.get(t).to({
					x: 0
				}, 500, egret.Ease.cubicOut));
				break;
			case 5:
				s ? (t.y = -n,
				egret.Tween.get(t).to({
					y: l
				}, 500, egret.Ease.cubicOut)) : (t.y = -n,
				egret.Tween.get(t).to({
					y: 0
				}, 500, egret.Ease.cubicOut));
				break;
			case 6:
				s ? (t.y = GameConfig.curHeight(),
				egret.Tween.get(t).to({
					y: l
				}, 500, egret.Ease.cubicOut)) : (t.y = n,
				egret.Tween.get(t).to({
					y: 0
				}, 500, egret.Ease.cubicOut))
			}
		}
	}

	function i(t, e, i) {
		if (void 0 === e && (e = 0),
		void 0 === i && (i = 500),
		null != t) {
			var n = function() {
				GameLayerManager.gameLayer().panelLayer.contains(this.darkSprite) && GameLayerManager.gameLayer().panelLayer.removeChild(this.darkSprite)
			};
			switch (this.darkSprite && egret.Tween.get(this.darkSprite).to({
				alpha: 0
			}, 100).call(n, this),
			e) {
			case 0:
				break;
			case 1:
				egret.Tween.get(t).to({
					alpha: 0,
					scaleX: 0,
					scaleY: 0,
					x: t.x + t.width / 2,
					y: t.y + t.height / 2
				}, 300);
				break;
			case 2:
				break;
			case 3:
				egret.Tween.get(t).to({
					x: t.width
				}, 500, egret.Ease.cubicOut);
				break;
			case 4:
				egret.Tween.get(t).to({
					x: -t.width
				}, 500, egret.Ease.cubicOut);
				break;
			case 5:
				egret.Tween.get(t).to({
					y: t.height
				}, 500, egret.Ease.cubicOut);
				break;
			case 6:
				egret.Tween.get(t).to({
					y: -t.height
				}, 500, egret.Ease.cubicOut);
				break;
			case 7:
				egret.Tween.get(t.img_notice).to({
					height: 0
				}, i)
			}
			var a = 500;
			0 == e && (a = 0),
			egret.setTimeout(function() {
				GameLayerManager.gameLayer().panelLayer.contains(t) && GameLayerManager.gameLayer().panelLayer.removeChild(t)
			}, this, a)
		}
	}
	t.addPopUp = e,
	t.removePopUp = i
}(PopUpManager || (PopUpManager = {}));
var game;
!function(t) {
	var e = function(e) {
		function i() {
			var t = e.call(this) || this;
			return t.get_otp = !0,
			t.addEventListener(eui.UIEvent.COMPLETE, t.uiCompHandler, t),
			t.skinName = "resource/ui/scene/SceneForgetPWSkin.exml",
			t
		}
		return __extends(i, e),
		i.prototype.uiCompHandler = function() {
			var t = this;
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			this.btn_verify.addEventListener(egret.TouchEvent.TOUCH_TAP, this.verify, this),
			this.btn_ok.addEventListener(egret.TouchEvent.TOUCH_TAP, this.resetPWD, this),
			this.btn_cancel_1.addEventListener(egret.TouchEvent.TOUCH_TAP, this.cancel, this),
			this.btn_cancel_2.addEventListener(egret.TouchEvent.TOUCH_TAP, this.cancel, this),
			this.updateOtpCode(),
			this.verify_text.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				t.updateOtpCode()
			}, this),
			this.btn_get_otp.addEventListener(egret.TouchEvent.TOUCH_TAP, this.getOtp, this)
		}
		,
		i.prototype.updateOtpCode = function() {
			this.verify_code = 8995 * Math.random() + 1002,
			this.verify_code = parseInt(this.verify_code, 10),
			this.verify_text.text = this.verify_code
		}
		,
		i.prototype.getOtp = function(t) {
			if (this.get_otp) {
				if (null == this.account_input.text || "" == this.account_input.text)
					return void Toast.launch("请输入电话");
				if (!this.account_input.text.match(/^(((1[0|3|4|5|7|8][0-9]{1}))+\d{8})$/))
					return void Toast.launch("手机号不正确", -55);
				if (this.verifycode_input.text != this.verify_code)
					return void Toast.launch("图形码错误");
				var e = new eui.ArrayCollection;
				e.addItem({
					key: "account",
					value: this.account_input.text
				}),
				e.addItem({
					key: "type",
					value: "sms"
				}),
				e.addItem({
					key: "remark",
					value: "forget_pwd"
				}),
				HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "user/otp/get", e, this.onGetOtpComplete, this.onGetOtpIOError, this.onGetOtpProgress, this)
			}
		}
		,
		i.prototype.onGetOtpComplete = function(t) {
			var e = t.currentTarget
			  , n = e.response? JSON.parse(e.response): {type: 1};
			if (i.status_code == MessageCode.CODE_GET_OTP_SUCCESS) {
				var n = 60;
				this.get_otp = !1,
				this.timer = setInterval(function(t) {
					n >= 1 ? (n -= 1,
					t.btn_get_otp.text = n) : (t.get_otp = !0,
					t.btn_get_otp.text = "获取验证码",
					clearInterval(t.timer))
				}, 1e3, this)
			} else {
				var a = i.message;
				Toast.launch(a, -100)
			}
		}
		,
		i.prototype.onGetOtpIOError = function(t) {}
		,
		i.prototype.onGetOtpProgress = function(t) {}
		,
		i.prototype.verify = function(t) {
			if (null == this.account_input.text || "" == this.account_input.text)
				return void Toast.launch("请输入电话", -55);
			if (!this.account_input.text.match(/^(((1[0|3|4|5|7|8][0-9]{1}))+\d{8})$/))
				return void Toast.launch("手机号不正确", -55);
			if (this.verifycode_input.text != this.verify_code)
				return void Toast.launch("图形码错误", -55);
			if (null == this.otpcode_input.text || "" == this.otpcode_input.text)
				return void Toast.launch("请输入验证码", -55);
			var e = new eui.ArrayCollection;
			e.addItem({
				key: "account",
				value: this.account_input.text
			}),
			e.addItem({
				key: "code",
				value: this.otpcode_input.text
			}),
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "user/otp/verify", e, this.onVerifyComplete, this.onVerifyIOError, this.onVerifyProgress, this)
		}
		,
		i.prototype.onVerifyComplete = function(t) {
			var e = t.currentTarget
			  , n = e.response? JSON.parse(e.response): {type: 1};
			if (i.status_code == MessageCode.CODE_VERIFY_OTP_SUCCESS)
				this.group_newpwd.visible = !0,
				this.group_verify.visible = !1;
			else {
				var n = i.data;
				Toast.launch(n, -55)
			}
		}
		,
		i.prototype.onVerifyIOError = function(t) {}
		,
		i.prototype.onVerifyProgress = function(t) {}
		,
		i.prototype.resetPWD = function(t) {
			if (null == this.pwd_input.text || "" == this.pwd_input.text)
				return void Toast.launch("请输入密码", -55);
			if (this.pwd_input.text.length < 6 || this.pwd_input.text.length > 20)
				return void Toast.launch("请输入大于6位小于20位的密码", -55);
			if (null == this.repwd_input.text || "" == this.repwd_input.text)
				return void Toast.launch("请输入确认密码", -55);
			if (this.repwd_input.text != this.pwd_input.text)
				return void Toast.launch("两次密码输入不一致，请确认", -55);
			var e = new eui.ArrayCollection;
			e.addItem({
				key: "account",
				value: this.account_input.text
			}),
			e.addItem({
				key: "password",
				value: this.pwd_input.text
			}),
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "user/pwd/reset", e, this.onresetPWDComplete, this.onresetPWDIOError, this.onresetPWDProgress, this)
		}
		,
		i.prototype.onresetPWDComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_RESET_PASSWORD_SUCCESS)
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN);
			else {
				var a = n.message;
				Toast.launch(a, -55)
			}
		}
		,
		i.prototype.onresetPWDIOError = function(t) {}
		,
		i.prototype.onresetPWDProgress = function(t) {}
		,
		i.prototype.cancel = function(e) {
			t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN)
		}
		,
		i.prototype.partAdded = function(t, i) {
			e.prototype.partAdded.call(this, t, i)
		}
		,
		i.prototype.childrenCreated = function() {
			e.prototype.childrenCreated.call(this)
		}
		,
		i
	}(eui.Component);
	t.SceneForgetPW = e,
	__reflect(e.prototype, "game.SceneForgetPW", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i() {
			var t = e.call(this) || this;
			return t.addEventListener(eui.UIEvent.COMPLETE, t.uiCompHandler, t),
			t.skinName = "resource/ui/scene/SceneLoginSkin.exml",
			t
		}
		return __extends(i, e),
		i.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			this.btn_login.addEventListener(egret.TouchEvent.TOUCH_END, this.login, this),
			this.btn_register.addEventListener(egret.TouchEvent.TOUCH_TAP, this.register, this),
			this.lb_forgetpwd.addEventListener(egret.TouchEvent.TOUCH_TAP, this.forgetPWD, this),
			Utils.removeStorage(Keys.FK_UserInfo),
			this.input_account.inputType = egret.TextFieldInputType.TEL,
			this.input_pwd.inputType = egret.TextFieldInputType.PASSWORD
		}
		,
		i.prototype.login = function() {
			var username = this.input_account.text
			  , upwd = this.input_pwd.text;
			if (!username)
				return void Toast.launch("请输入账号", 170);
			if (!upwd)
				return void Toast.launch("请输入密码", 170);
			var i = getWxUserInfo()
			  , n = "";
			null != i.openid && void 0 != i.openid && "undefined" != i.openid && (n = i.openid);
			var data = new eui.ArrayCollection;
			data.addItem({
				key: "username",
				value: username
			})
			data.addItem({
				key: "upwd",
				value: upwd
			})
			// null != n && "" != n && data.addItem({
			// 	key: "third_token",
			// 	value: n//
			// }),
			var t = Utils.setStorageObj(Keys.FK_UserInfo, username);
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + API.login, data, this.onPostComplete, this.onPostIOError, this.onPostProgress, this)
		}
		,
		i.prototype.onPostComplete = function(e) {
			this.btn_login.addEventListener(egret.TouchEvent.TOUCH_END, this.login, this);
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_LOGIN_SUCCESS) {
				// var a = {
				// 	user_id: n.results.user_id,
				// 	name: n.results.name,
				// 	access_token: n.results.access_token,
				// 	avatar_url: n.results.avatar_url,
				// 	vip_grade: n.results.vip_grade
				// };
				n.results.name = Utils.getStorageObj(Keys.FK_UserInfo)
				Utils.setStorageObj(Keys.FK_UserInfo, n.results)
				debugger
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_TRADE)
				t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_HOME)
			} else {
				var s = n.data;
				Toast.launch(s, 170),
				this.btn_login.addEventListener(egret.TouchEvent.TOUCH_END, this.login, this)
			}
		}
		,
		i.prototype.onPostIOError = function(t) {}
		,
		i.prototype.onPostProgress = function(t) {}
		,
		i.prototype.register = function() {
			t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_REGISTER)
		}
		,
		i.prototype.forgetPWD = function() {
			t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_FORGETPWD)
		}
		,
		i.prototype.createCompleteEvent = function(t) {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.createCompleteEvent, this)
		}
		,
		i.prototype.partAdded = function(t, i) {
			e.prototype.partAdded.call(this, t, i)
		}
		,
		i
	}(eui.Component);
	t.SceneLogin = e,
	__reflect(e.prototype, "game.SceneLogin")
}(game || (game = {}));
var game;
!function(t) {
	var e = function(t) {
		function e() {
			return t.call(this) || this
		}
		return __extends(e, t),
		e.getInstance = function() {
			return this._instance || (this._instance = new e),
			this._instance
		}
		,
		e.prototype.partAdded = function(e, i) {
			t.prototype.partAdded.call(this, e, i)
		}
		,
		e.prototype.childrenCreated = function() {
			t.prototype.childrenCreated.call(this)
		}
		,
		e
	}(eui.Component);
	t.SceneMiJi = e,
	__reflect(e.prototype, "game.SceneMiJi", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i() {
			var t = e.call(this) || this;
			return t.get_otp = !0,
			t.addEventListener(eui.UIEvent.COMPLETE, t.uiCompHandler, t),
			t.skinName = "resource/ui/scene/SceneRegisterSkin.exml",
			t
		}
		return __extends(i, e),
		i.prototype.uiCompHandler = function() {
			var t = this;
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			this.btn_register.addEventListener(egret.TouchEvent.TOUCH_TAP, this.register, this),
			this.btn_cancel.addEventListener(egret.TouchEvent.TOUCH_TAP, this.cancel, this),
			this.updateOtpCode(),
			this.verify_text.addEventListener(egret.TouchEvent.TOUCH_TAP, function() {
				t.updateOtpCode()
			}, this),
			this.btn_get_otp.addEventListener(egret.TouchEvent.TOUCH_TAP, this.getOtp, this),
			this.account_input.inputType = egret.TextFieldInputType.TEL,
			this.verifycode_input.inputType = egret.TextFieldInputType.TEL,
			this.otpcode_input.inputType = egret.TextFieldInputType.TEL,
			this.pwd_input.inputType = egret.TextFieldInputType.PASSWORD,
			this.repwd_input.inputType = egret.TextFieldInputType.PASSWORD
		}
		,
		i.prototype.updateOtpCode = function() {
			this.verify_code = 8995 * Math.random() + 1002,
			this.verify_code = parseInt(this.verify_code, 10),
			this.verify_text.text = this.verify_code
		}
		,
		i.prototype.getOtp = function(t) {
			if (this.get_otp) {
				if (null == this.account_input.text || "" == this.account_input.text)
					return void Toast.launch("请输入电话");
				if (!this.account_input.text.match(/^(((1[0|3|4|5|7|8][0-9]{1}))+\d{8})$/))
					return void Toast.launch("手机号不正确", -55);
				if (null == this.pwd_input.text || "" == this.pwd_input.text)
					return void Toast.launch("请输入密码", -55);
				if (this.pwd_input.text.length < 6 || this.pwd_input.text.length > 20)
					return void Toast.launch("请输入大于6位小于20位的密码", -55);
				if (null == this.repwd_input.text || "" == this.repwd_input.text)
					return void Toast.launch("请输入确认密码", -55);
				if (this.repwd_input.text != this.pwd_input.text)
					return void Toast.launch("两次密码输入不一致，请确认", -55);
				if (this.verifycode_input.text != this.verify_code)
					return void Toast.launch("图形码错误");
				var e = 60;
				this.get_otp = !1,
				this.timer = setInterval(function(t) {
					e >= 1 ? (e -= 1,
					t.btn_get_otp.text = e) : (t.get_otp = !0,
					t.btn_get_otp.text = "获取验证码",
					clearInterval(t.timer))
				}, 1e3, this);
				var i = new eui.ArrayCollection;
				i.addItem({
					key: "account",
					value: this.account_input.text
				}),
				i.addItem({
					key: "type",
					value: "sms"
				}),
				i.addItem({
					key: "remark",
					value: "register"
				}),
				HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "user/otp/get", i, this.onGetOtpComplete, this.onGetOtpIOError, this.onGetOtpProgress, this)
			}
		}
		,
		i.prototype.onGetOtpComplete = function(t) {
			var e = t.currentTarget
			  , n = e.response? JSON.parse(e.response): {type: 1};
			if (i.status_code == MessageCode.CODE_GET_OTP_SUCCESS)
				;
			else {
				var n = i.data;
				Toast.launch(n, -100)
			}
		}
		,
		i.prototype.onGetOtpIOError = function(t) {}
		,
		i.prototype.onGetOtpProgress = function(t) {}
		,
		i.prototype.register = function(t) {
			if (null == this.account_input.text || "" == this.account_input.text)
				return void Toast.launch("请输入电话", -55);
			if (!this.account_input.text.match(/^(((1[0|3|4|5|7|8][0-9]{1}))+\d{8})$/))
				return void Toast.launch("手机号不正确", -55);
			if (null == this.pwd_input.text || "" == this.pwd_input.text)
				return void Toast.launch("请输入密码", -55);
			if (this.pwd_input.text.length < 6 || this.pwd_input.text.length > 20)
				return void Toast.launch("请输入大于6位小于20位的密码", -55);
			if (null == this.repwd_input.text || "" == this.repwd_input.text)
				return void Toast.launch("请输入确认密码", -55);
			if (this.repwd_input.text != this.pwd_input.text)
				return void Toast.launch("两次密码输入不一致，请确认", -55);
			if (this.verifycode_input.text != this.verify_code)
				return void Toast.launch("图形码错误", -55);
			if (null == this.otpcode_input.text || "" == this.otpcode_input.text)
				return void Toast.launch("请输入验证码", -55);
			var e = getWxUserInfo()
			  , i = "";
			null != e.openid && void 0 != e.openid && "undefined" != e.openid && (i = e.openid);
			var n = "";
			null != e.sex && void 0 != e.sex && "undefined" != e.sex && (n = e.sex);
			var a = "";
			null != e.name && void 0 != e.name && "undefined" != e.name && (a = e.name);
			var s = "";
			null != e.avatar_url && void 0 != e.avatar_url && "undefined" != e.avatar_url && (s = e.avatar_url);
			var o = new eui.ArrayCollection;
			// 用户名
			o.addItem({
				key: "username",
				value: this.account_input.text
			}),
			// 密码
			o.addItem({
				key: "upwd",
				value: this.pwd_input.text
			}),
			o.addItem({
				key: "upwd2",
				value: this.repwd_input.text
			}),
			// null != a && "" != a ? o.addItem({
			// 	key: "user_name",
			// 	value: a
			// }) : o.addItem({
			// 	key: "user_name",
			// 	value: this.account_input.text
			// }),
			// o.addItem({
			// 	key: "avatar_url",
			// 	value: s
			// }),
			// o.addItem({
			// 	key: "sex",
			// 	value: n
			// }),
			// 验证码
			o.addItem({
				key: "phonecode",
				value: this.otpcode_input.text
			}),
			// 推荐码
			o.addItem({
				key: "oid",
				value: '1031'
			});
			// o.addItem({
			// 	key: "third_token",
			// 	value: i
			// }),
			HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + API.reg, o, this.onRegisterComplete, this.onRegisterIOError, this.onRegisterProgress, this)
		}
		,
		i.prototype.onRegisterComplete = function(e) {
			var i = e.currentTarget
			  , n = i.response? JSON.parse(i.response): {type: 1};
			if (n.type == MessageCode.CODE_REGISTER_SUCCESS) {
				// var a = {
				// 	user_id: null,
				// 	name: null,
				// 	access_token: null,
				// 	avatar_url: null
				// };
				// a.user_id = n.results.user_id,
				// a.name = n.results.name,
				// a.access_token = n.results.access_token,
				// a.avatar_url = n.results.avatar_url,
				// Utils.setStorageObj(Keys.FK_UserInfo, a),
				t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_TRADE),
				t.AppFacade.getInstance().sendNotification(MainNotify.OPEN_HOME)
			} else {
				var s = n.data;
				Toast.launch(s, -55)
			}
		}
		,
		i.prototype.onRegisterIOError = function(t) {}
		,
		i.prototype.onRegisterProgress = function(t) {}
		,
		i.prototype.cancel = function(e) {
			t.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN)
		}
		,
		i.prototype.partAdded = function(t, i) {
			e.prototype.partAdded.call(this, t, i)
		}
		,
		i.prototype.childrenCreated = function() {
			e.prototype.childrenCreated.call(this)
		}
		,
		i
	}(eui.Component);
	t.SceneRegister = e,
	__reflect(e.prototype, "game.SceneRegister", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(t) {
		function e() {
			var e = t.call(this) || this;
			return e.playMusic = !0,
			e.playSound = !0,
			e.minute = 0,
			e.seconds = 0,
			e.canReward = !1,
			e.all_bg_ready = !1,
			e.grab_bg_ready = !1,
			e.bet_sound_ready = !1,
			e.start_bet_sound_ready = !1,
			e.stop_bet_sound_ready = !1,
			e.stop_bet_clock_ready = !1,
			e.disabled_bet_sound_ready = !1,
			e.gold_increase_sound_ready = !1,
			e.return_sound_ready = !1,
			e.count_down_sound_ready = !1,
			e.count_down_10_sound_ready = !1,
			e.normal_btn_sound_ready = !1,
			e.settle_result_sound_ready = !1,
			e.btn_dialog_sound_ready = !1,
			e.burst_banker_sound_ready = !1,
			e.change_bet_amount_sound_ready = !1,
			e.classical_bet_sound_ready = !1,
			e.classical_un_bet_sound_ready = !1,
			e.receive_chip_sound_ready = !1,
			e.win_amount_sound_ready = !1,
			e.sit_sound_ready = !1,
			e.userInfo = null,
			e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
			e.skinName = "resource/ui/scene/SceneTradeSkin.exml",
			e
		}
		return __extends(e, t),
		e.getInstance = function() {
			return this._instance || (this._instance = new e),
			this._instance
		}
		,
		e.prototype.playBgSound = function() {
			null == this.bg_channel && this.playMusic && this.all_bg_ready && (this.bg_channel = this.bg_sound.play()),
			null != this.bg_channel && (this.bg_channel.volume = 1)
		}
		,
		e.prototype.stopBgSound = function() {
			null != this.bg_channel && (this.bg_channel.stop(),
			this.bg_channel = null)
		}
		,
		e.prototype.playGrabSound = function() {
			null == this.grab_channel && this.playMusic && this.grab_bg_ready && (this.grab_channel = this.grab_sound.play()),
			null != this.grab_channel && (this.grab_channel.volume = .3)
		}
		,
		e.prototype.stopGrabSound = function() {
			null != this.grab_channel && (this.grab_channel.stop(),
			this.grab_channel = null)
		}
		,
		e.prototype.stopMusic = function() {
			this.stopBgSound(),
			this.stopGrabSound()
		}
		,
		e.prototype.loadSound = function() {
			var t = this;
			this.playSound = Utils.getStorageObj(Keys.FK_SOUND),
			null == this.playSound && (this.playSound = !0),
			this.playMusic = Utils.getStorageObj(Keys.FK_MUSIC),
			null == this.playMusic && (this.playMusic = !0),
			this.bg_sound = new egret.Sound,
			this.bg_sound.addEventListener(egret.Event.COMPLETE, function(e) {
				t.all_bg_ready = !0
			}, this),
			this.bg_sound.load("resource/sound/all_bg.mp3"),
			this.grab_sound = new egret.Sound,
			this.grab_sound.addEventListener(egret.Event.COMPLETE, function(e) {
				t.grab_bg_ready = !0
			}, this),
			this.grab_sound.load("resource/sound/grab_bg.mp3"),
			this.bet_sound = new egret.Sound,
			this.bet_sound.addEventListener(egret.Event.COMPLETE, function(e) {
				t.bet_sound_ready = !0
			}, this),
			this.bet_sound.load("resource/sound/bet.mp3"),
			this.start_bet_sound = new egret.Sound,
			this.start_bet_sound.addEventListener(egret.Event.COMPLETE, function(e) {
				t.start_bet_sound_ready = !0
			}, this),
			this.start_bet_sound.load("resource/sound/start_bet.mp3"),
			this.stop_bet_sound = new egret.Sound,
			this.stop_bet_sound.addEventListener(egret.Event.COMPLETE, function(e) {
				t.stop_bet_sound_ready = !0
			}, this),
			this.stop_bet_sound.load("resource/sound/stop_bet.mp3"),
			this.stop_bet_clock = new egret.Sound,
			this.stop_bet_clock.addEventListener(egret.Event.COMPLETE, function(e) {
				t.stop_bet_clock_ready = !0
			}, this),
			this.stop_bet_clock.load("resource/sound/stop_bet_clock.mp3"),
			this.disabled_bet_sound = new egret.Sound,
			this.disabled_bet_sound.addEventListener(egret.Event.COMPLETE, function(e) {
				t.disabled_bet_sound_ready = !0
			}, this),
			this.disabled_bet_sound.load("resource/sound/disabled_bet.mp3"),
			this.gold_increase_sound = new egret.Sound,
			this.gold_increase_sound.addEventListener(egret.Event.COMPLETE, function(e) {
				t.gold_increase_sound_ready = !0
			}, this),
			this.gold_increase_sound.load("resource/sound/wheel_gold_med.mp3"),
			this.return_sound = new egret.Sound,
			this.return_sound.addEventListener(egret.Event.COMPLETE, function(e) {
				t.return_sound_ready = !0
			}, this),
			this.return_sound.load("resource/sound/return.mp3"),
			this.count_down_sound = new egret.Sound,
			this.count_down_sound.addEventListener(egret.Event.COMPLETE, function(e) {
				t.count_down_sound_ready = !0
			}, this),
			this.count_down_sound.load("resource/sound/count_down.mp3"),
			this.count_down_10_sound = new egret.Sound,
			this.count_down_10_sound.addEventListener(egret.Event.COMPLETE, function(e) {
				t.count_down_10_sound_ready = !0
			}, this),
			this.count_down_10_sound.load("resource/sound/count_down_10.mp3"),
			this.normal_btn_sound = new egret.Sound,
			this.normal_btn_sound.addEventListener(egret.Event.COMPLETE, function(e) {
				t.normal_btn_sound_ready = !0
			}, this),
			this.normal_btn_sound.load("resource/sound/btn_normal.mp3"),
			this.settle_result_sound = new egret.Sound,
			this.settle_result_sound.addEventListener(egret.Event.COMPLETE, function(e) {
				t.settle_result_sound_ready = !0
			}, this),
			this.settle_result_sound.load("resource/sound/settle_result.mp3"),
			this.btn_dialog_sound = new egret.Sound,
			this.btn_dialog_sound.addEventListener(egret.Event.COMPLETE, function(e) {
				t.btn_dialog_sound_ready = !0
			}, this),
			this.btn_dialog_sound.load("resource/sound/btn_dialog.mp3"),
			this.burst_banker_sound = new egret.Sound,
			this.burst_banker_sound.addEventListener(egret.Event.COMPLETE, function(e) {
				t.burst_banker_sound_ready = !0
			}, this),
			this.burst_banker_sound.load("resource/sound/burst_banker.mp3"),
			this.change_bet_amount_sound = new egret.Sound,
			this.change_bet_amount_sound.addEventListener(egret.Event.COMPLETE, function(e) {
				t.change_bet_amount_sound_ready = !0
			}, this),
			this.change_bet_amount_sound.load("resource/sound/change.wav"),
			this.classical_bet_sound = new egret.Sound,
			this.classical_bet_sound.addEventListener(egret.Event.COMPLETE, function(e) {
				t.classical_bet_sound_ready = !0
			}, this),
			this.classical_bet_sound.load("resource/sound/chip.wav"),
			this.classical_un_bet_sound = new egret.Sound,
			this.classical_un_bet_sound.addEventListener(egret.Event.COMPLETE, function(e) {
				t.classical_un_bet_sound_ready = !0
			}, this),
			this.classical_un_bet_sound.load("resource/sound/unchip.wav"),
			this.receive_chip_sound = new egret.Sound,
			this.receive_chip_sound.addEventListener(egret.Event.COMPLETE, function(e) {
				t.receive_chip_sound_ready = !0
			}, this),
			this.receive_chip_sound.load("resource/sound/receive_chip.wav"),
			this.win_amount_sound = new egret.Sound,
			this.win_amount_sound.addEventListener(egret.Event.COMPLETE, function(e) {
				t.win_amount_sound_ready = !0
			}, this),
			this.win_amount_sound.load("resource/sound/win_amount.wav"),
			this.sit_sound = new egret.Sound,
			this.sit_sound.addEventListener(egret.Event.COMPLETE, function(e) {
				t.sit_sound_ready = !0
			}, this),
			this.sit_sound.load("resource/sound/sit.wav")
		}
		,
		e.prototype.uiCompHandler = function() {
			this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this),
			this.loadSound()
		}
		,
		e.prototype.partAdded = function(e, i) {
			t.prototype.partAdded.call(this, e, i)
		}
		,
		e.prototype.childrenCreated = function() {
			t.prototype.childrenCreated.call(this)
		}
		,
		e
	}(eui.Component);
	e.is_new_user = !1,
	e.already_show_qrcode = !1,
	t.SceneTrade = e,
	__reflect(e.prototype, "game.SceneTrade", ["eui.UIComponent", "egret.DisplayObject"])
}(game || (game = {}));
var game;
!function(t) {
	var e = function(e) {
		function i() {
			return e.call(this) || this
		}
		return __extends(i, e),
		i.prototype.register = function() {
			this.facade.registerCommand(SceneNotify.OPEN_LOGIN, i),
			this.facade.registerCommand(SceneNotify.OPEN_REGISTER, i),
			this.facade.registerCommand(SceneNotify.OPEN_FORGETPWD, i),
			this.facade.registerCommand(SceneNotify.OPEN_TRADE, i)
		}
		,
		i.prototype.execute = function(e) {
			var i = (e.getBody(),
			GameLayerManager.gameLayer().sceneLayer);
			switch (e.getName()) {
			case SceneNotify.OPEN_LOGIN:
				null == this.sceneLogin && (this.sceneLogin = new t.SceneLogin),
				null != t.SceneTrade._instance && (null != t.SceneTrade._instance.timer && t.SceneTrade._instance.timer.stop(),
				t.SceneTrade._instance.stopMusic()),
				null != t.HomePage._instance && t.HomePage._instance.destoryAll(),
				null != t.CapitalList._instance && (t.CapitalList._instance.isOpen = !1),
				null != t.GameGrabUI._instance && t.GameGrabUI._instance.destoryAll(),
				null != t.GameClassicalUI._instance && t.GameClassicalUI._instance.destoryAll(),
				t.CapitalList._instance = null,
				t.HeaderBar._instance = null,
				t.HeaderBarV2._instance = null,
				t.SceneTrade._instance = null,
				GameLayerManager.gameLayer().sceneLayer.removeChildren(),
				GameLayerManager.gameLayer().mainLayer.removeChildren(),
				GameLayerManager.gameLayer().panelLayer.removeChildren(),
				GameLayerManager.gameLayer().loadLayer.removeChildren(),
				GameLayerManager.gameLayer().effectLayer.removeChildren(),
				GameLayerManager.gameLayer().maskLayer.removeChildren(),
				i.addChild(this.sceneLogin);
				break;
			case SceneNotify.OPEN_REGISTER:
				null == this.sceneRegister && (this.sceneRegister = new t.SceneRegister),
				GameLayerManager.gameLayer().sceneLayer.removeChildren(),
				GameLayerManager.gameLayer().mainLayer.removeChildren(),
				GameLayerManager.gameLayer().panelLayer.removeChildren(),
				GameLayerManager.gameLayer().loadLayer.removeChildren(),
				GameLayerManager.gameLayer().effectLayer.removeChildren(),
				GameLayerManager.gameLayer().maskLayer.removeChildren(),
				i.addChild(this.sceneRegister);
				break;
			case SceneNotify.OPEN_FORGETPWD:
				null == this.sceneForgetPW && (this.sceneForgetPW = new t.SceneForgetPW),
				GameLayerManager.gameLayer().sceneLayer.removeChildren(),
				GameLayerManager.gameLayer().mainLayer.removeChildren(),
				GameLayerManager.gameLayer().panelLayer.removeChildren(),
				GameLayerManager.gameLayer().loadLayer.removeChildren(),
				GameLayerManager.gameLayer().effectLayer.removeChildren(),
				GameLayerManager.gameLayer().maskLayer.removeChildren(),
				i.addChild(this.sceneForgetPW);
				break;
			case SceneNotify.OPEN_TRADE:
				null == this.sceneTrade && (this.sceneTrade = t.SceneTrade.getInstance()),
				GameLayerManager.gameLayer().sceneLayer.removeChildren(),
				GameLayerManager.gameLayer().mainLayer.removeChildren(),
				GameLayerManager.gameLayer().panelLayer.removeChildren(),
				GameLayerManager.gameLayer().loadLayer.removeChildren(),
				GameLayerManager.gameLayer().effectLayer.removeChildren(),
				GameLayerManager.gameLayer().maskLayer.removeChildren(),
				i.addChild(this.sceneTrade)
			}
		}
		,
		i
	}(puremvc.SimpleCommand);
	e.NAME = "SceneManager",
	t.SceneManager = e,
	__reflect(e.prototype, "game.SceneManager", ["puremvc.ICommand", "puremvc.INotifier"])
}(game || (game = {}));
var GlobalData;
!function(t) {
	t.myName = "myName is ?"
}(GlobalData || (GlobalData = {}));
var Keys = function() {
	function t() {}
	return t
}();
Keys.FK_UserInfo = "UserInfo",
Keys.FK_SOUND = "play_sound",
Keys.FK_MUSIC = "play_music",
Keys.FK_BET_AMOUNT = "bet_amount_2",
Keys.FK_ADV = "adv",
__reflect(Keys.prototype, "Keys");
var AssetAdapter = function() {
	function t() {}
	return t.prototype.getAsset = function(t, e, i) {
		function n(n) {
			e.call(i, n, t)
		}
		if (RES.hasRes(t)) {
			var a = RES.getRes(t);
			a ? n(a) : RES.getResAsync(t, n, this)
		} else
			RES.getResByUrl(t, n, this, RES.ResourceItem.TYPE_IMAGE)
	}
	,
	t
}();
__reflect(AssetAdapter.prototype, "AssetAdapter", ["eui.IAssetAdapter"]);
var ThemeAdapter = function() {
	function t() {}
	return t.prototype.getTheme = function(t, e, i, n) {
		function a(t) {
			e.call(n, t)
		}

		function s(e) {
			e.resItem.url == t && (RES.removeEventListener(RES.ResourceEvent.ITEM_LOAD_ERROR, s, null),
			i.call(n))
		}
		RES.addEventListener(RES.ResourceEvent.ITEM_LOAD_ERROR, s, null),
		RES.getResByUrl(t, a, this, RES.ResourceItem.TYPE_TEXT)
	}
	,
	t
}();
__reflect(ThemeAdapter.prototype, "ThemeAdapter", ["eui.IThemeAdapter"]);
var Main = function(t) {
	function e() {
		var e = null !== t && t.apply(this, arguments) || this;
		return e.isResourceLoadEnd = !1,
		e.isThemeLoadEnd = !1,
		e
	}
	return __extends(e, t),
	e.prototype.createChildren = function() {
		t.prototype.createChildren.call(this);
		var e = new AssetAdapter;
		this.stage.registerImplementation("eui.IAssetAdapter", e),
		this.stage.registerImplementation("eui.IThemeAdapter", new ThemeAdapter),
		this.addChild(GameLayerManager.gameLayer()),
		this._trueLoadingUI = new TrueLoadingUI,
		this.loadRes()
	}
	,
	e.prototype.loadRes = function() {
		RES.addEventListener(RES.ResourceEvent.CONFIG_COMPLETE, this.onConfigComplete, this),
		RES.addEventListener(RES.ResourceEvent.CONFIG_LOAD_ERROR, this.onConfigLoadErr, this),
		RES.loadConfig("resource/default.res.json?v=" + GameConfig.VERSION, "resource/")
	}
	,
	e.prototype.onConfigComplete = function(t) {
		RES.removeEventListener(RES.ResourceEvent.CONFIG_COMPLETE, this.onConfigComplete, this);
		var e = new eui.Theme("resource/default.thm.json?v=" + GameConfig.VERSION,this.stage);
		e.addEventListener(eui.UIEvent.COMPLETE, this.onThemeLoadComplete, this),
		RES.addEventListener(RES.ResourceEvent.GROUP_COMPLETE, this.onResourceLoadComplete, this),
		RES.addEventListener(RES.ResourceEvent.GROUP_PROGRESS, this.onResourceProgress, this),
		RES.addEventListener(RES.ResourceEvent.GROUP_LOAD_ERROR, this.onResourceLoadErr, this),
		RES.loadGroup("loading")
	}
	,
	e.prototype.onThemeLoadComplete = function() {
		this.isThemeLoadEnd = !0,
		this.createScene()
	}
	,
	e.prototype.onConfigLoadErr = function(t) {}
	,
	e.prototype.onResourceLoadComplete = function(t) {
		"loading" == t.groupName ? (GameLayerManager.gameLayer().addChild(this._trueLoadingUI),
		closeLoading(),
		RES.loadGroup("common")) : "common" == t.groupName && (RES.removeEventListener(RES.ResourceEvent.GROUP_COMPLETE, this.onResourceLoadComplete, this),
		RES.removeEventListener(RES.ResourceEvent.GROUP_PROGRESS, this.onResourceProgress, this),
		RES.removeEventListener(RES.ResourceEvent.GROUP_LOAD_ERROR, this.onResourceLoadErr, this),
		this.isResourceLoadEnd = !0,
		this.createScene())
	}
	,
	e.prototype.onResourceLoadErr = function(t) {
		RES.loadGroup(t.groupName)
	}
	,
	e.prototype.onResourceProgress = function(t) {
		"common" == t.groupName ? this._trueLoadingUI.setProgress(t.itemsLoaded, t.itemsTotal) : "loading" == t.groupName
	}
	,
	e.prototype.createScene = function() {
		this.isThemeLoadEnd && this.isResourceLoadEnd && this.createGameScene()
	}
	,
	e.prototype.createGameScene = function() {
		var t = this;
		Toast.init(this, RES.getRes("toast-bg_png"));
		var e = Utils.getStorageObj(Keys.FK_ADV)
		  , i = "N";
		null != e && (i = e.always_show),
		"Y" == i && Utils.setStorageObj(Keys.FK_ADV, {
			id: null,
			always_show: ""
		}),
		game.AppFacade.getInstance().startUp(GameLayerManager.gameLayer());
		var n = getM();
		if ("login" == n)
			return clearM(),
			void this.goToLogin();
		"fromReg" == n && (clearM(),
		Utils.removeStorage(Keys.FK_UserInfo));
		var a = Utils.getStorageObj(Keys.FK_UserInfo);
		if (a && a.token) {
			t.closeLoading()
			game.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_TRADE)
			game.AppFacade.getInstance().sendNotification(MainNotify.OPEN_HOME)
			// var s = a.token
			//   , o = new eui.ArrayCollection;
			// HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "user/get", null, function(e) {
			// 	var i = e.currentTarget
			// 	  , n = i.response? JSON.parse(i.response): {type: 1};
			// 	if (n.type == MessageCode.CODE_USER_FOUND) {
			// 		var a = {
			// 			user_id: n.results.id,
			// 			name: n.results.name,
			// 			access_token: s,
			// 			avatar_url: n.results.avatar_url,
			// 			vip_grade: n.results.vip_grade
			// 		};
			// 		Utils.setStorageObj(Keys.FK_UserInfo, a),
			// 		t.closeLoading(),
			// 		game.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_TRADE),
			// 		game.AppFacade.getInstance().sendNotification(MainNotify.OPEN_HOME)
			// 	} else if (403 == n.type)
			// 		t.goToLogin();
			// 	else {
			// 		n.message;
			// 		t.goToLogin()
			// 	}
			// }, function(t) {}, function(t) {}, this)
		} else {
			var r = getWxUserInfo()
			  , l = null;
			if (null != r.openid && void 0 != r.openid && "undefined" != r.openid && (l = r.openid),
			null != l && "" != l) {
				var o = new eui.ArrayCollection;
				o.addItem({
					key: "third_token",
					value: l
				}),
				HttpUtils.sendPostRequest(GameConfig.API_BASE_LINK + "user/checkThirdToken", o, function(e) {
					var i = e.currentTarget
					  , n = i.response? JSON.parse(i.response): {type: 1};
					if (n.type == MessageCode.CODE_LOGIN_SUCCESS) {
						var a = {
							user_id: n.results.user_id,
							name: n.results.name,
							access_token: n.results.access_token,
							avatar_url: n.results.avatar_url,
							vip_grade: n.results.vip_grade
						};
						Utils.setStorageObj(Keys.FK_UserInfo, a),
						t.closeLoading(),
						game.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_TRADE),
						game.AppFacade.getInstance().sendNotification(MainNotify.OPEN_HOME)
					} else if (n.type == MessageCode.CODE_WX_REGISTER)
						t.goToRegister();
					else if (403 == n.type)
						t.goToLogin();
					else {
						n.message;
						t.goToLogin()
					}
				}, function(t) {}, function(t) {}, this)
			} else
				this.goToLogin()
		}
	}
	,
	e.prototype.goToLogin = function() {
		this.closeLoading(),
		Utils.removeStorage(Keys.FK_UserInfo),
		game.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_LOGIN)
	}
	,
	e.prototype.goToRegister = function() {
		this.closeLoading(),
		Utils.removeStorage(Keys.FK_UserInfo),
		game.AppFacade.getInstance().sendNotification(SceneNotify.OPEN_REGISTER)
	}
	,
	e.prototype.closeLoading = function() {
		closePreLoading(),
		GameLayerManager.gameLayer().removeChild(this._trueLoadingUI)
	}
	,
	e
}(eui.UILayer);
Main.noticeList = new Array,
__reflect(Main.prototype, "Main");
var game;
!function(t) {
	var e = function() {
		function e() {
			this.host = GameConfig.SOCKET_HOST,
			this.port = GameConfig.SOCKET_PORT,
			this.chatSocketReady = !1,
			this.canReconnect = !0,
			this.options = {
				room_id: 0,
				user_info: null,
				user_id: 0,
				token: ""
			}
		}
		return e.prototype.getChatSocketStatus = function() {
			return this.chatSocketReady
		}
		,
		e.prototype.setOptions = function(t) {
			__extends(this.options, t)
		}
		,
		e.prototype.getOptions = function() {
			return this.options
		}
		,
		e.prototype.initSocket = function() {
			var t = this;
			this.queryEntry(function(e, i) {
				t.host = e,
				t.port = i,
				t.firstInit()
			})
		}
		,
		e.prototype.queryEntry = function(t) {
			var e = this
			  , i = new pomeloClient.Pomelo;
			i.on(CONST.CommonCommand.io_error, function() {}),
			i.init({
				host: GameConfig.SOCKET_HOST,
				port: GameConfig.SOCKET_PORT
			}, function() {
				var n = {
					uid: e.options.user_id,
					type: "chat"
				};
				i.request(CONST.CommonCommand.gate, n),
				i.on(CONST.CommonCommand.gate, function(e) {
					i.disconnect(),
					500 != e.code && t(e.host, e.port)
				})
			})
		}
		,
		e.prototype.firstInit = function() {
			var e = this;
			(null == this.socket || 0 == this.socket.connected()) && (null != this.socket && (this.socket.removeAllListeners(),
			this.disconnect()),
			this.socket = new pomeloClient.Pomelo),
			this.socket.init({
				host: this.host,
				port: this.port
			}, function() {
				console.log("chat connected"),
				e.initChatSocket(e.options.user_id, e.options.token, e.options.room_id)
			}),
			this.socket.on(CONST.ChatCommand.init, function(i) {
				200 == i.code ? (e.chatSocketReady = !0,
				t.AppFacade.getInstance().sendNotification(SysNotify.CHAT_INIT, i),
				console.log("chat ready"),
				e.canReconnect = !0,
				t.AppFacade.getInstance().sendNotification(SysNotify.CHAT_JOIN_ROOM)) : null != t.GameGrabUI._instance && t.GameGrabUI._instance.enterRoomFailed()
			}),
			this.socket.on(CONST.CommonCommand.close, function() {
				e.chatSocketReady = !1,
				console.log("chat socket closed"),
				e.canReconnect && setTimeout(function() {
					e.firstInit()
				}, 3e3)
			}),
			this.socket.on(CONST.CommonCommand.heartbeat_timeout, function() {
				e.chatSocketReady = !1
			}),
			this.socket.on(CONST.CommonCommand.io_error, function() {
				e.chatSocketReady = !1,
				console.log("chat socket error"),
				setTimeout(function() {
					e.firstInit()
				}, 3e3)
			}),
			this.socket.on(CONST.ChatCommand.join_room, function(e) {
				console.log("chat join room", (new Date).getTime(), egret.getTimer(), e),
				t.AppFacade.getInstance().sendNotification(SysNotify.CHAT_JOIN_ROOM, e)
			}),
			this.socket.on(CONST.ChatCommand.leave_room, function(t) {
				console.log("chat leave room", (new Date).getTime(), egret.getTimer(), t);
				t.status_code,
				t.message;
				e.chatSocketReady = !0
			}),
			this.socket.on(CONST.ChatCommand.receive_message, function(i) {
				e.chatSocketReady = !0,
				"string" == typeof i && (i = JSON.parse(i)),
				null != i.message && (i.message = e.convertCodeToEmoji(i.message));
				var n = {
					user_name: i.name,
					user_avatar: i.avatar_url,
					vip_grade: i.vip_grade,
					message_type: i.type,
					message: i.message
				};
				t.AppFacade.getInstance().sendNotification(SysNotify.CHAT_ADD_MESSAGE, n)
			}),
			this.socket.on(CONST.ChatCommand.clear_message, function(i) {
				e.chatSocketReady = !0,
				t.AppFacade.getInstance().sendNotification(SysNotify.CHAT_CLEAR_MESSAGE)
			}),
			this.socket.on(CONST.ChatCommand.message_history, function(i) {
				if (null != i) {
					var n = [];
					i.length > 30 && (i.length = 30);
					for (var a = 0; a < i.length; a++) {
						i[a] = JSON.parse(i[a]),
						null != i[a].message && (i[a].message = e.convertCodeToEmoji(i[a].message));
						var s = {
							user_name: i[a].name,
							user_avatar: i[a].avatar_url,
							vip_grade: i[a].vip_grade,
							message_type: i[a].type,
							message: i[a].message
						};
						n.push(s)
					}
					t.AppFacade.getInstance().sendNotification(SysNotify.CHAT_ADD_MESSAGE_LIST, n)
				}
			}),
			this.socket.on(CONST.ChatCommand.user_notice_message, function(e) {
				console.log("user_notice_message======>", e),
				t.AppFacade.getInstance().sendNotification(SysNotify.CHAT_ADD_NOTICE, e)
			})
		}
		,
		e.prototype.convertCodeToEmoji = function(e) {
			for (var i = 0; i < t.ChatBar.array_emoji.length; i++) {
				var n = t.ChatBar.array_emoji[i];
				if (e.indexOf(n.key) >= 0)
					for (; e.indexOf(n.key) >= 0; )
						e = e.replace(n.key, n.value)
			}
			return e
		}
		,
		e.prototype.disconnect = function() {
			this.socket && (this.canReconnect = !1,
			this.socket.disconnect(),
			this.socket = null)
		}
		,
		e.getInstance = function() {
			return e._instance || (e._instance = new e),
			e._instance
		}
		,
		e.prototype.sendMessage = function(t, e) {
			this.socket.request(t, e)
		}
		,
		e.prototype.initChatSocket = function(t, e, i) {
			var n = {
				user_id: t,
				token: e,
				room_id: i
			};
			console.log(n),
			this.sendMessage(CONST.ChatCommand.init, n)
		}
		,
		e.prototype.joinChatRoom = function(t, e) {
			var i = {
				room_id: e,
				user_id: t
			};
			this.sendMessage(CONST.ChatCommand.join_room, i)
		}
		,
		e.prototype.leaveChatRoom = function(t) {
			var e = {
				room_id: t
			};
			this.sendMessage(CONST.ChatCommand.leave_room, e)
		}
		,
		e
	}();
	t.ChatSocket = e,
	__reflect(e.prototype, "game.ChatSocket")
}(game || (game = {}));
var game;
!function(t) {
	var e = function() {
		function e() {
			this.host = GameConfig.SOCKET_HOST,
			this.port = GameConfig.SOCKET_PORT,
			this.klineSocketReady = !1,
			this.canReconnect = !0,
			this.options = {
				Capital: "BTCCNY",
				Diff: 30,
				InitCandleCount: 60
			}
		}
		return e.prototype.getKlineSocketStatus = function() {
			return this.klineSocketReady
		}
		,
		e.prototype.setOptions = function(t) {
			__extends(this.options, t)
		}
		,
		e.prototype.getOptions = function() {
			return this.options
		}
		,
		e.prototype.queryEntry = function(t, e, i) {
			var n = new pomeloClient.Pomelo;
			n.on(CONST.CommonCommand.io_error, function() {}),
			n.init({
				host: GameConfig.SOCKET_HOST,
				port: GameConfig.SOCKET_PORT
			}, function() {
				var e = {
					uid: t,
					type: "kline"
				};
				n.request(CONST.CommonCommand.gate, e),
				n.on(CONST.CommonCommand.gate, function(t) {
					n.disconnect(),
					500 != t.code && i(t.host, t.port)
				})
			})
		}
		,
		e.prototype.initSocket = function(t, e) {
			var i = this;
			this.queryEntry(t, e, function(n, a) {
				i.host = n,
				i.port = a,
				i.firstInit(t, e)
			})
		}
		,
		e.prototype.firstInit = function(e, i) {
			var n = this;
			(null == this.socket || 0 == this.socket.connected()) && (null != this.socket && (this.socket.removeAllListeners(),
			this.disconnect()),
			this.socket = new pomeloClient.Pomelo),
			this.socket.init({
				host: this.host,
				port: this.port
			}, function() {
				n.initKlineSocket(n.options.Capital, n.options.Diff, e, i)
			}),
			n.socket.on(CONST.KlineCommand.init, function(e) {
				200 == e.code ? (e = e.body,
				n.klineSocketReady = !0,
				t.AppFacade.getInstance().sendNotification(SysNotify.KLINE_INIT, e),
				console.log("kline ready"),
				n.canReconnect = !0) : null != t.GameGrabUI._instance && t.GameGrabUI._instance.enterRoomFailed()
			}),
			n.socket.on(CONST.CommonCommand.close, function() {
				n.klineSocketReady = !1,
				console.log("kline socket closed"),
				n.canReconnect && setTimeout(function() {
					n.firstInit(e, i)
				}, 3e3)
			}),
			n.socket.on(CONST.CommonCommand.heartbeat_timeout, function() {
				n.klineSocketReady = !1
			}),
			n.socket.on(CONST.CommonCommand.io_error, function() {
				n.klineSocketReady = !1,
				console.log("kline socket error"),
				setTimeout(function() {
					n.firstInit(e, i)
				}, 3e3)
			}),
			n.socket.on(CONST.KlineCommand.kline, function(e) {
				n.klineSocketReady = !0,
				t.AppFacade.getInstance().sendNotification(SysNotify.KLINE_KLINE, e)
			}),
			n.socket.on(CONST.KlineCommand.last_kline, function(e) {
				debugger
				n.klineSocketReady = !0,
				t.AppFacade.getInstance().sendNotification(SysNotify.KLINE_LAST_KLINE, e)
			})
		}
		,
		e.prototype.reconnect = function(t) {
			null != t.reconnectTimer && clearInterval(t.reconnectTimer),
			t.reconnectTimer = setInterval(function(t) {
				t.klineSocketReady ? clearInterval(t.reconnectTimer) : t.socket.reconnect(t.host, t.port)
			}, 1e3, t)
		}
		,
		e.prototype.disconnect = function() {
			this.socket && (this.canReconnect = !1,
			this.socket.disconnect(),
			this.socket = null)
		}
		,
		e.getInstance = function() {
			return e._instance || (e._instance = new e),
			e._instance
		}
		,
		e.prototype.initKlineSocket = function(t, e, i, n) {
			var a = {
				capital: t,
				diff: e,
				num: this.options.InitCandleCount,
				user_id: i,
				token: n
			};
			this.socket.request(CONST.KlineCommand.init, a)
		}
		,
		e
	}();
	t.KlineSocket = e,
	__reflect(e.prototype, "game.KlineSocket")
}(game || (game = {}));
var LoadingUI = function(t) {
	function e() {
		var e = t.call(this) || this;
		return e.w = 0,
		e.h = 0,
		e.addEventListener(egret.Event.REMOVED_FROM_STAGE, function() {
			e.hasEventListener(egret.Event.ENTER_FRAME) && e.removeEventListener(egret.Event.ENTER_FRAME, e.runLoading, e)
		}, e),
		e.addEventListener(egret.Event.ADDED_TO_STAGE, function() {
			e.setProgress(0, 1),
			e.addEventListener(egret.Event.ENTER_FRAME, e.runLoading, e)
		}, e),
		e.createGameScene(),
		e
	}
	return __extends(e, t),
	e.prototype.createGameScene = function() {
		this.w = egret.MainContext.instance.stage.stageWidth,
		this.h = egret.MainContext.instance.stage.stageHeight,
		this.bg = new egret.Bitmap,
		this.bg.texture = RES.getRes("loading-bg_png"),
		this.addChild(this.bg),
		this._loadingRun = new egret.Bitmap,
		this._loadingRun.texture = RES.getRes("loading_run"),
		this._loadingRun.x = this.w / 2 - this._loadingRun.width / 2,
		this._loadingRun.y = this.h / 2 - this._loadingRun.height / 2,
		this.addChild(this._loadingRun),
		this.textField = new egret.TextField,
		this.textField.size = 24,
		this.textField.textColor = 16777215,
		this.textField.bold = !0,
		this.textField.stroke = 1,
		this.textField.strokeColor = 0,
		this.addChild(this.textField),
		this.textField.width = 100,
		this.textField.x = this.w / 2 - this._loadingRun.width / 2,
		this.textField.y = this.h / 2,
		this.textField.textAlign = "center",
		this.textField.text = "0%"
	}
	,
	e.prototype.runLoading = function(t) {
		this._loadingRun.rotation += 3
	}
	,
	e.prototype.setProgress = function(t, e) {
		var i = Math.round(t / e * 100);
		this.textField.text = i + "%"
	}
	,
	e
}(eui.UILayer);
__reflect(LoadingUI.prototype, "LoadingUI");
var Toast = function(t) {
	function e(i, n, a, s) {
		var o = t.call(this) || this;
		o.x = 0,
		o.y = .5 * a,
		o.width = n;
		var r = new eui.Image;
		r.source = e._txtrToastBg,
		r.y = s - 32,
		r.horizontalCenter = 0,
		o.addChild(r);
		var l = new eui.Label;
		return l.multiline = !0,
		l.maxWidth = o.width - 200,
		l.size = 35,
		l.bold = !0,
		l.textColor = 16777215,
		l.stroke = 1,
		l.strokeColor = 0,
		l.text = i,
		l.fontFamily = "微软雅黑",
		l.textAlign = "center",
		l.y = s - 17,
		l.x = (o.width - l.width) / 2,
		o.addChild(l),
		r.height = 30 + l.height,
		r.width = 500,
		r.width < l.width + 100 && (r.width = l.width + 100),
		r.maxWidth = o.width - 100,
		r.x = (o.width - r.width) / 2,
		o.alpha = 0,
		egret.Tween.get(o).to({
			alpha: 1
		}, 800, egret.Ease.quintOut).wait(1e3).to({
			alpha: 0
		}, 500, egret.Ease.quintIn).call(function() {
			o.parent && o.parent.removeChild(o)
		}),
		o
	}
	return __extends(e, t),
	e.init = function(t, e) {
		this._cont = t,
		this._txtrToastBg = e
	}
	,
	e.launch = function(t, i) {
		if (void 0 === i && (i = 0),
		this._cont) {
			var n = new e(t,this._cont.stage.stageWidth,this._cont.stage.stageHeight,i);
			this._cont.addChild(n)
		}
	}
	,
	e
}(egret.DisplayObjectContainer);
__reflect(Toast.prototype, "Toast");
var TrueLoadingUI = function(t) {
	function e() {
		var e = t.call(this) || this;
		return e.skinName = "resource/ui/main/LoadingSkin.exml",
		e.addEventListener(eui.UIEvent.COMPLETE, e.uiCompHandler, e),
		e
	}
	return __extends(e, t),
	e.prototype.uiCompHandler = function(t) {
		this.removeEventListener(eui.UIEvent.COMPLETE, this.uiCompHandler, this)
	}
	,
	e.prototype.setProgress = function(t, e) {
		this.lb_prgress && (this.lb_prgress.text = Math.round(t / e * 100) + "%"),
		this.pb && this.pb.value < 100 && (this.pb.value = Math.round(t / e * 100))
	}
	,
	e
}(eui.Component);
__reflect(TrueLoadingUI.prototype, "TrueLoadingUI", ["eui.UIComponent", "egret.DisplayObject"]);
var game;
!function(t) {
	var e = function(t) {
		function e(e, i, n) {
			var a = t.call(this) || this;
			return a.start_x = 0,
			a.start_y = 0,
			a.end_x = 0,
			a.end_y = 0,
			a.image = "",
			a.amount = 0,
			a.x = e,
			a.y = i,
			a.start_x = e,
			a.start_y = i,
			a.source = RES.getRes("icon_chip_" + n + "_png"),
			a.touchEnabled = !1,
			n >= 5e3 ? (a.width = 90,
			a.height = 47) : (a.width = 52,
			a.height = 57),
			a
		}
		return __extends(e, t),
		e
	}(eui.Image);
	t.Chip = e,
	__reflect(e.prototype, "game.Chip")
}(game || (game = {}));
var game;
!function(t) {
	var e = function() {
		function e() {}
		return e.createObj = function(t, e, i, n, a, s, o) {
			var r = new eui.Image;
			r.source = RES.getRes("icon_flycoin_png"),
			r.width = 45,
			r.height = 45,
			r.x = t,
			r.y = e,
			GameLayerManager._instance.addChild(r),
			GameLayerManager._instance.setChildIndex(r, 103),
			egret.Tween.get(r, {
				loop: !1
			}).to({
				x: i,
				y: n
			}, 800).call(function() {
				GameLayerManager._instance.removeChild(r),
				s && o()
			}, this)
		}
		,
		e.callFly = function(t, i, n, a, s, o, r, l) {
			setTimeout(function() {
				var h = !1;
				r >= o && (h = !0),
				e.createObj(t, i, n, a, s, h, function() {
					l()
				}),
				o > r && (r++,
				e.callFly(t, i, n, a, s, o, r, l))
			}, 50)
		}
		,
		e.flyGold = function(i, n, a, s, o, r, l, h, d, _) {
			void 0 === d && (d = a),
			void 0 === _ && (_ = s),
			GameLayerManager._instance ? (t.SceneTrade.getInstance().gold_increase_sound_ready && t.SceneTrade.getInstance().playSound && t.SceneTrade.getInstance().gold_increase_sound.play(0, 1),
			e.callFly(i, n, a, s, o, r, 0, function() {
				if (null != l && l > 0) {
					var t = new eui.BitmapLabel;
					t.font = "gold_28_fnt",
					t.text = "+" + Utils.moneyFormat(l, 2),
					t.width = 150,
					t.height = 20,
					t.x = d + 50,
					t.y = _ + 10,
					GameLayerManager._instance.addChild(t),
					t.alpha = 1,
					egret.Tween.get(t, {
						loop: !1
					}).to({
						y: t.y - 28,
						alpha: .1
					}, 1500).call(function() {
						GameLayerManager._instance.removeChild(t)
					}, this)
				}
				console.log("通知关闭"),
				h()
			})) : h()
		}
		,
		e
	}();
	t.Fly = e,
	__reflect(e.prototype, "game.Fly")
}(game || (game = {}));
var pomeloClient;
!function(t) {
	var e = function() {
		function t() {
			this.JS_WS_CLIENT_TYPE = "js-websocket",
			this.JS_WS_CLIENT_VERSION = "0.0.1",
			this.RES_OK = 200,
			this.RES_FAIL = 500,
			this.RES_OLD_CLIENT = 501,
			this.handlers = {},
			this._callbacks = {},
			this.callbacks = {},
			this.routeMap = {},
			this.heartbeatId = null,
			this.heartbeatTimeoutId = null,
			this.heartbeatTimeout = 0,
			this.nextHeartbeatTimeout = 0,
			this.heartbeatInterval = 0,
			this.gapThreshold = 100,
			this.notify = function(t, e) {
				e = e || {},
				this.sendMessage(0, t, e)
			}
			,
			this["package"] = new v,
			this.protocol = new b,
			this.message = new y,
			this.handlers[v.TYPE_HANDSHAKE] = this.handshake,
			this.handlers[v.TYPE_HEARTBEAT] = this.heartbeat,
			this.handlers[v.TYPE_DATA] = this.onData,
			this.handlers[v.TYPE_KICK] = this.onKick,
			this.handshakeBuffer = {
				sys: {
					type: this.JS_WS_CLIENT_TYPE,
					version: this.JS_WS_CLIENT_VERSION
				},
				user: {}
			},
			this.reqId = 0
		}
		return t.prototype.init = function(t, e) {
			this.initCallback = e,
			this.initEgretSocket(t.host, t.port, e)
		}
		,
		t.prototype.reconnect = function(t, e) {
			null == this.socket || this.socket.connected || this.socket.connect(t, e)
		}
		,
		t.prototype.initEgretSocket = function(t, e, i) {
			var n = this;
			n.socket = new egret.WebSocket,
			n.socket.type = egret.WebSocket.TYPE_BINARY,
			n.socket.addEventListener(egret.Event.CONNECT, function() {
				var t = n.protocol.strencode(JSON.stringify(n.handshakeBuffer));
				t = n["package"].encode(v.TYPE_HANDSHAKE, t),
				n.sendBytes(t)
			}, this),
			n.socket.addEventListener(egret.Event.CLOSE, function(t) {
				n.emit(CONST.CommonCommand.close, t)
			}, this),
			n.socket.addEventListener(egret.IOErrorEvent.IO_ERROR, function(t) {
				n.emit(CONST.CommonCommand.io_error, t)
			}, this),
			n.socket.addEventListener(egret.ProgressEvent.SOCKET_DATA, function() {
				var t = new egret.ByteArray;
				n.socket.readBytes(t);
				var e = t.buffer;
				e = n["package"].decode(e),
				n.processPackage(e),
				n.heartbeatTimeout && (n.nextHeartbeatTimeout = Date.now() + n.heartbeatTimeout)
			}, this),
			n.socket.connect(t, e)
		}
		,
		t.prototype.on = function(t, e) {
			(this._callbacks[t] = this._callbacks[t] || []).push(e)
		}
		,
		t.prototype.removeAllListeners = function(t, e) {
			if (0 == arguments.length)
				return void (this._callbacks = {});
			var i = this._callbacks[t];
			if (i) {
				if (1 == arguments.length)
					return void delete this._callbacks[t];
				var n = this.index(i, e._off || e);
				~n && i.splice(n, 1)
			}
		}
		,
		t.prototype.index = function(t, e) {
			if ([].indexOf)
				return t.indexOf(e);
			for (var i = 0; i < t.length; ++i)
				if (t[i] === e)
					return i;
			return -1
		}
		,
		t.prototype.connected = function() {
			return this.socket ? this.socket.connected : !1
		}
		,
		t.prototype.disconnect = function() {
			this.socket && (this.socket.close(),
			this.socket = null),
			this.heartbeatId && (egret.clearTimeout(this.heartbeatId),
			this.heartbeatId = null),
			this.heartbeatTimeoutId && (egret.clearTimeout(this.heartbeatTimeoutId),
			this.heartbeatTimeoutId = null)
		}
		,
		t.prototype.request = function(t, e, i) {
			void 0 === i && (i = null),
			2 === arguments.length && "function" == typeof e ? (i = e,
			e = {}) : e = e || {},
			t = t || e.route,
			t && (this.reqId++,
			this.sendMessage(this.reqId, t, e),
			this.callbacks[this.reqId] = i,
			this.routeMap[this.reqId] = t)
		}
		,
		t.prototype.sendMessage = function(t, e, i) {
			var n = t ? y.TYPE_REQUEST : y.TYPE_NOTIFY;
			i = this.protocol.strencode(JSON.stringify(i));
			var a = 0;
			i = this.message.encode(t, n, a, e, i);
			var s = this["package"].encode(v.TYPE_DATA, i);
			this.sendBytes(s)
		}
		,
		t.prototype.sendBytes = function(t) {
			this.socket && this.socket.writeBytes(t)
		}
		,
		t.prototype.processPackage = function(t) {
			this.handlers[t.type].call(this, t.body)
		}
		,
		t.prototype.processMessage = function(t) {
			this.emit(t.route, t.body)
		}
		,
		t.prototype.heartbeat = function(t) {
			if (this.heartbeatInterval) {
				var e = this["package"].encode(v.TYPE_HEARTBEAT);
				if (this.heartbeatTimeoutId && (egret.clearTimeout(this.heartbeatTimeoutId),
				this.heartbeatTimeoutId = null),
				!this.heartbeatId) {
					var i = this;
					i.heartbeatId = egret.setTimeout(function() {
						i.heartbeatId = null,
						i.sendBytes(e),
						i.nextHeartbeatTimeout = Date.now() + i.heartbeatTimeout,
						i.heartbeatTimeoutId = egret.setTimeout(i.heartbeatTimeoutCb, i, i.heartbeatTimeout)
					}, i, i.heartbeatInterval)
				}
			}
		}
		,
		t.prototype.heartbeatTimeoutCb = function() {
			var t = this.nextHeartbeatTimeout - Date.now();
			t > this.gapThreshold ? this.heartbeatTimeoutId = egret.setTimeout(this.heartbeatTimeoutCb, this, t) : this.emit(CONST.CommonCommand.heartbeat_timeout)
		}
		,
		t.prototype.handshake = function(t) {
			if (t = JSON.parse(this.protocol.strdecode(t)),
			t.code === this.RES_OLD_CLIENT)
				return void this.emit("error", "client version not fullfill");
			if (t.code !== this.RES_OK)
				return void this.emit("error", "handshake fail");
			this.handshakeInit(t);
			var e = this["package"].encode(v.TYPE_HANDSHAKE_ACK);
			this.sendBytes(e),
			this.initCallback && this.initCallback(this.socket)
		}
		,
		t.prototype.handshakeInit = function(t) {
			console.log("handshakeInit===>", t),
			t.sys && t.sys.heartbeat ? (this.heartbeatInterval = 1e3 * t.sys.heartbeat,
			this.heartbeatTimeout = 2 * this.heartbeatInterval) : (this.heartbeatInterval = 0,
			this.heartbeatTimeout = 0),
			"function" == typeof this.handshakeCallback && this.handshakeCallback(t.user)
		}
		,
		t.prototype.onData = function(t) {
			var e = this.message.decode(t);
			e.id > 0 && (e.route = this.routeMap[e.id],
			delete this.routeMap[e.id],
			!e.route) || (e.body = this.deCompose(e),
			this.processMessage(e))
		}
		,
		t.prototype.deCompose = function(t) {
			return JSON.parse(this.protocol.strdecode(t.body))
		}
		,
		t.prototype.onKick = function(t) {
			this.emit("onKick")
		}
		,
		t.prototype.emit = function(t) {
			for (var e = [], i = 1; i < arguments.length; i++)
				e[i - 1] = arguments[i];
			var n = [].slice.call(arguments, 1)
			  , a = this._callbacks[t];
			if (a) {
				a = a.slice(0);
				for (var s = 0, o = a.length; o > s; ++s)
					a[s].apply(this, n)
			}
			return this
		}
		,
		t
	}();
	t.Pomelo = e,
	__reflect(e.prototype, "pomeloClient.Pomelo");
	var i = function(t, e, i, n, a) {
		if ("function" == typeof i.copy)
			i.copy(t, e, n, n + a);
		else
			for (var s = 0; a > s; s++)
				t[e++] = i[n++]
	}
	  , n = function(t) {
		return t === y.TYPE_REQUEST || t === y.TYPE_RESPONSE
	}
	  , a = function(t) {
		return t === y.TYPE_REQUEST || t === y.TYPE_NOTIFY || t === y.TYPE_PUSH
	}
	  , s = function(t) {
		var e = 0;
		do
			e += 1,
			t >>= 7;
		while (t > 0);return e
	}
	  , o = function(t, e, i, n) {
		if (t !== y.TYPE_REQUEST && t !== y.TYPE_NOTIFY && t !== y.TYPE_RESPONSE && t !== y.TYPE_PUSH)
			throw new Error("unkonw message type: " + t);
		return i[n] = t << 1 | (e ? 1 : 0),
		n + _
	}
	  , r = function(t, e, i) {
		do {
			var n = t % 128
			  , a = Math.floor(t / 128);
			0 !== a && (n += 128),
			e[i++] = n,
			t = a
		} while (0 !== t);return i
	}
	  , l = function(t, e, n, a) {
		if (t) {
			if (e > g)
				throw new Error("route number is overflow");
			n[a++] = e >> 8 & 255,
			n[a++] = 255 & e
		} else
			e ? (n[a++] = 255 & e.length,
			i(n, a, e, 0, e.length),
			a += e.length) : n[a++] = 0;
		return a
	}
	  , h = function(t, e, n) {
		return i(e, n, t, 0, t.length),
		n + t.length
	}
	  , d = 4
	  , _ = 1
	  , p = 2
	  , u = 1
	  , g = 65535
	  , c = 1
	  , m = 7
	  , y = function() {
		function t() {
			this.protocol = new b
		}
		return t.prototype.encode = function(t, e, i, d, g) {
			var c = n(e) ? s(t) : 0
			  , m = _ + c;
			if (a(e))
				if (i) {
					if ("number" != typeof d)
						throw new Error("error flag for number route!");
					m += p
				} else if (m += u,
				d) {
					if (d = this.protocol.strencode(d),
					d.length > 255)
						throw new Error("route maxlength is overflow");
					m += d.length
				}
			g && (m += g.length);
			var y = new Uint8Array(m)
			  , v = 0;
			return v = o(e, i, y, v),
			n(e) && (v = r(t, y, v)),
			a(e) && (v = l(i, d, y, v)),
			g && (v = h(g, y, v)),
			y
		}
		,
		t.prototype.decode = function(t) {
			var e = new Uint8Array(t)
			  , s = e.length || e.byteLength
			  , o = 0
			  , r = 0
			  , l = null
			  , h = e[o++]
			  , d = h & c
			  , _ = h >> 1 & m;
			if (n(_)) {
				var p = e[o]
				  , u = 0;
				do {
					var p = e[o];
					r += (127 & p) * Math.pow(2, 7 * u),
					o++,
					u++
				} while (p >= 128)
			}
			if (a(_))
				if (d)
					l = e[o++] << 8 | e[o++];
				else {
					var g = e[o++];
					g ? (l = new Uint8Array(g),
					i(l, 0, e, o, g),
					l = this.protocol.strdecode(l)) : l = "",
					o += g
				}
			var y = s - o
			  , v = new Uint8Array(y);
			return i(v, 0, e, o, y),
			{
				id: r,
				type: _,
				compressRoute: d,
				route: l,
				body: v
			}
		}
		,
		t
	}();
	y.TYPE_REQUEST = 0,
	y.TYPE_NOTIFY = 1,
	y.TYPE_RESPONSE = 2,
	y.TYPE_PUSH = 3,
	__reflect(y.prototype, "Message");
	var v = function() {
		function t() {}
		return t.prototype.decode = function(t) {
			for (var e = 0, n = new Uint8Array(t), a = 0, s = []; e < n.length; ) {
				var o = n[e++];
				a = (n[e++] << 16 | n[e++] << 8 | n[e++]) >>> 0;
				var r = a ? new Uint8Array(a) : null;
				i(r, 0, n, e, a),
				e += a,
				s.push({
					type: o,
					body: r
				})
			}
			return 1 === s.length ? s[0] : s
		}
		,
		t.prototype.encode = function(t, e) {
			void 0 === e && (e = "");
			var n = e ? e.length : 0
			  , a = new Uint8Array(d + n)
			  , s = 0;
			return a[s++] = 255 & t,
			a[s++] = n >> 16 & 255,
			a[s++] = n >> 8 & 255,
			a[s++] = 255 & n,
			e && i(a, s, e, 0, n),
			a
		}
		,
		t
	}();
	v.TYPE_HANDSHAKE = 1,
	v.TYPE_HANDSHAKE_ACK = 2,
	v.TYPE_HEARTBEAT = 3,
	v.TYPE_DATA = 4,
	v.TYPE_KICK = 5,
	__reflect(v.prototype, "Package");
	var b = function() {
		function t() {}
		return t.prototype.strencode = function(t) {
			for (var e = new Uint8Array(3 * t.length), n = 0, a = 0; a < t.length; a++) {
				var s = t.charCodeAt(a)
				  , o = null;
				o = 127 >= s ? [s] : 2047 >= s ? [192 | s >> 6, 128 | 63 & s] : [224 | s >> 12, 128 | (4032 & s) >> 6, 128 | 63 & s];
				for (var r = 0; r < o.length; r++)
					e[n] = o[r],
					++n
			}
			var l = new Uint8Array(n);
			return i(l, 0, e, 0, n),
			l
		}
		,
		t.prototype.strdecode = function(t) {
			for (var e = new Uint8Array(t), i = [], n = 0, a = 0, s = e.length; s > n; )
				e[n] < 128 ? (a = e[n],
				n += 1) : e[n] < 224 ? (a = ((63 & e[n]) << 6) + (63 & e[n + 1]),
				n += 2) : (a = ((15 & e[n]) << 12) + ((63 & e[n + 1]) << 6) + (63 & e[n + 2]),
				n += 3),
				i.push(a);
			return String.fromCharCode.apply(null, i)
		}
		,
		t
	}();
	__reflect(b.prototype, "Protocol")
}(pomeloClient || (pomeloClient = {}));
var Utils = function() {
	function t() {}
	return t.padLeft = function(t, e, i) {
		if (("" + t).length < i)
			for (var n = i - t.length, a = 0; n > a; a++)
				t = e + "" + t;
		return t
	}
	,
	t.convertTime = function(t, e) {
		t.length <= 10 && (t = 1e3 * parseInt(t));
		var i = new Date(t)
		  , n = ""
		  , a = i.getFullYear()
		  , s = this.padLeft((i.getMonth() + 1).toString(), "0", 2)
		  , o = this.padLeft(i.getDate().toString(), "0", 2)
		  , r = this.padLeft(i.getHours().toString(), "0", 2)
		  , l = this.padLeft(i.getMinutes().toString(), "0", 2)
		  , h = this.padLeft(i.getSeconds().toString(), "0", 2);
		return "hm" == e ? n = r + ":" + l : "ms" == e ? n = l + ":" + h : "hms" == e ? n = r + ":" + l + ":" + h : "yyyyMMdd" == e ? n = a + "-" + s + "-" + o : "yyyyMMddhms" == e || "Y-m-d H:i:s" == e ? n = a + "-" + s + "-" + o + " " + r + ":" + l + ":" + h : "hhmm" == e && (n = r + "" + l),
		n
	}
	,
	t.setStorage = function(t, e) {
		egret.localStorage.setItem(t, e)
	}
	,
	t.getStorage = function(t) {
		return egret.localStorage.getItem(t)
	}
	,
	t.setStorageObj = function(e, i) {
		i = JSON.stringify(i),
		t.setStorage(e, i)
	}
	,
	t.removeStorage = function(t) {
		egret.localStorage.removeItem(t)
	}
	,
	t.getStorageObj = function(e) {
		var i = t.getStorage(e);
		return null != i && void 0 != i && "undefined" != i && "" != i && "string" == typeof i && (i = JSON.parse(i)),
		i
	}
	,
	t.getRoundPoint = function(t) {
		return t.substring(t.indexOf(".")).length - 1
	}
	,
	t.moneyFormat = function(t, e) {
		return parseFloat(parseFloat(t).toFixed(e))
	}
	,
	t.moneyFormatBack = function(t) {
		var e = 0
		  , i = t.substr(t.length - 1, 1);
		return "亿" == i ? (t = t.substr(0, t.length - 1),
		e = 1e8 * parseFloat(t)) : "万" == i ? (t = t.substr(0, t.length - 1),
		e = 1e4 * parseFloat(t)) : e = parseFloat(t),
		parseFloat(e.toFixed(0))
	}
	,
	t.getLimitUserName = function(t, e) {
		if (!t) return t
		for (var i = "", n = 0; n < t.length; n++) {
			var a = t.charAt(n);
			if ((i + a).replace(/[^x00-xFF]/g, "**").length > e)
				break;
			i += a
		}
		return i
	}
	,
	t.StringToFloat = function(t, e) {
		var i = parseFloat(t).toFixed(e);
		return parseFloat(i)
	}
	,
	t
}();
__reflect(Utils.prototype, "Utils");
var ZhiBiaoTools = function() {
	function t() {}
	return t.getMAdata = function(t) {
		if (t && void 0 != t && t.length > 0)
			for (var e = 0; e < t.length; e++) {
				for (var i = 0, n = 0, a = t[e], s = 0; 10 > s; s++)
					5 > s && e < t.length - 5 && (i = parseFloat(i.toString()) + parseFloat(t[e + s][2])),
					e < t.length - 10 && (n = parseFloat(n.toString()) + parseFloat(t[e + s][2]));
				i > 0 ? a[5] = parseInt((i / 5 * 1e5).toString()) / 1e5 : a[5] = 0,
				n > 0 ? a[6] = parseInt((n / 10 * 1e5).toString()) / 1e5 : a[6] = 0,
				t[e] = a
			}
		return t
	}
	,
	t.getLastMAdata = function(t, e) {
		if (t && t.length > 0 && t.length > 10) {
			var i = 0
			  , n = 0;
			t[0] = e;
			for (var a = t[0], s = 0; 10 > s; s++) {
				var o = t[s]
				  , r = parseFloat(o[2]);
				5 > s && (i = parseFloat(i.toString()) + r),
				n = parseFloat(n.toString()) + r
			}
			i > 0 ? a[5] = parseInt((i / 5 * 1e5).toString()) / 1e5 : a[5] = 0,
			n > 0 ? a[6] = parseInt((n / 10 * 1e5).toString()) / 1e5 : a[6] = 0,
			t[0] = a
		}
		return t
	}
	,
	t.getRS = function(t, e, i, n) {
		var a = 0
		  , s = 0;
		if (t && t.length > 0 && e <= t.length - 1 - i) {
			var o = t[e + 1];
			if (o[n] && o[n][0] && o[n][1] && (a = o[n][0],
			s = o[n][1],
			a > 0 && s > 0)) {
				var r = t[e][2]
				  , l = t[e + 1][2]
				  , h = r - l;
				h > 0 ? (a = (a * (i - 1) + h) / i,
				s = s * (i - 1) / i) : (a = a * (i - 1) / i,
				s = (s * (i - 1) + Math.abs(h)) / i)
			}
			if (0 >= a || 0 >= s) {
				for (var d = 0, _ = 0, p = 0; i > p; p++) {
					var r = t[e + p][2]
					  , l = t[e + p + 1][2]
					  , h = r - l;
					h > 0 ? d += h : _ += Math.abs(h)
				}
				d > 0 && (a = d / i),
				_ > 0 && (s = _ / i)
			}
			a = parseInt((1e10 * a).toString()) / 1e10,
			s = parseInt((1e10 * s).toString()) / 1e10
		}
		return [a, s]
	}
	,
	t.getRSIdata = function(t, e, i, n) {
		if (t && t.length > 0)
			for (var a = t.length - 1; a >= 0; a--) {
				var s = 0
				  , o = 0
				  , r = 0
				  , l = this.getRS(t, a, e, 7)
				  , h = this.getRS(t, a, i, 9)
				  , d = this.getRS(t, a, n, 11);
				l[0] && l[1] && l[0] > 0 && l[1] > 0 && (s = l[0] / (l[0] + l[1]) * 100),
				h[0] && h[1] && h[0] > 0 && h[1] > 0 && (o = h[0] / (h[0] + h[1]) * 100),
				d[0] && d[1] && d[0] > 0 && d[1] > 0 && (r = d[0] / (d[0] + d[1]) * 100),
				t[a][7] = l,
				t[a][8] = parseInt((1e5 * s).toString()) / 1e5,
				t[a][9] = h,
				t[a][10] = parseInt((1e5 * o).toString()) / 1e5,
				t[a][11] = d,
				t[a][12] = parseInt((1e5 * r).toString()) / 1e5
			}
		return t
	}
	,
	t.getLastRSIdata = function(t, e, i, n, a) {
		if (t && t.length > 0) {
			t[0] = e;
			var s = 0
			  , o = 0
			  , r = 0
			  , l = this.getRS(t, 0, i, 7)
			  , h = this.getRS(t, 0, n, 9)
			  , d = this.getRS(t, 0, a, 11);
			l[0] && l[1] && l[0] > 0 && l[1] > 0 && (s = l[0] / (l[0] + l[1]) * 100),
			h[0] && h[1] && h[0] > 0 && h[1] > 0 && (o = h[0] / (h[0] + h[1]) * 100),
			d[0] && d[1] && d[0] > 0 && d[1] > 0 && (r = d[0] / (d[0] + d[1]) * 100),
			t[0][7] = l,
			t[0][8] = parseInt((1e5 * s).toString()) / 1e5,
			t[0][9] = h,
			t[0][10] = parseInt((1e5 * o).toString()) / 1e5,
			t[0][11] = d,
			t[0][12] = parseInt((1e5 * r).toString()) / 1e5
		}
		return t
	}
	,
	t.getBOLLdata = function(t, e) {
		if (t && t.length > 0)
			for (var i = t.length - 1; i >= 0; i--) {
				for (var n = t[i][2], a = 0, s = 0, o = 0, r = t[i], l = 0; e > l; l++)
					i < t.length - e && (a = parseFloat(a.toString()) + parseFloat(t[i + l][2]));
				a > 0 ? (s = parseInt((a / e * 1e5).toString()) / 1e5,
				o = t[i + 1][7]) : s = 0;
				var h = Math.sqrt((n - s) * (n - s) / e)
				  , d = o
				  , _ = 0
				  , p = 0;
				h > 0 && d > 0 && (_ = parseInt((1e5 * (d + 2 * h)).toString()) / 1e5,
				p = parseInt((1e5 * (d - 2 * h)).toString()) / 1e5),
				r[7] = s,
				r[8] = d,
				r[9] = _,
				r[10] = p,
				t[i] = r
			}
		return t
	}
	,
	t.getLastBOLLdata = function(t, e, i) {
		if (t && t.length > 0) {
			t[0] = e;
			for (var n = t[0][2], a = 0, s = 0, o = 0, r = 0; i > r; r++)
				r < t.length && (a = parseFloat(a.toString()) + parseFloat(t[r][2]));
			a > 0 ? (s = parseInt((a / i * 1e3).toString()) / 1e3,
			o = t[1][7]) : s = 0;
			var l = Math.sqrt((n - s) * (n - s) / i)
			  , h = o
			  , d = 0
			  , _ = 0;
			l > 0 && h > 0 && (d = parseInt((1e3 * (h + 2 * l)).toString()) / 1e3,
			_ = parseInt((1e3 * (h - 2 * l)).toString()) / 1e3),
			t[0][7] = s,
			t[0][8] = h,
			t[0][9] = d,
			t[0][10] = _
		}
		return t
	}
	,
	t
}();
__reflect(ZhiBiaoTools.prototype, "ZhiBiaoTools");
